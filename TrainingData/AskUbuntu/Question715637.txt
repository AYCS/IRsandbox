[{"id":715637,"title":"Setting up gvfsd to specify options when autolaunching gvfsd-fuse","body":"<p>According to <a href=\"http://manpages.ubuntu.com/manpages/utopic/man1/gvfsd.1.html\" rel=\"nofollow\">http://manpages.ubuntu.com/manpages/utopic/man1/gvfsd.1.html</a> gvfsd automatically launches gvfsd-fuse (<a href=\"http://manpages.ubuntu.com/manpages/utopic/man1/gvfsd-fuse.1.html\" rel=\"nofollow\">http://manpages.ubuntu.com/manpages/utopic/man1/gvfsd-fuse.1.html</a>)</p>\n\n<p>I want to know how to get this to automatically specify options when auto launching it.  When I try to specify these options myself by running gvfsd-fuse, the options are ignored and the auto-launched instance trumps my manually launched instance.</p>\n\n<p>Edit: if it wasn't clear, the options I refer to are the command line options of gvfsd-fuse</p>\n","related_questions":[{"id":705030,"title":"/gvsf empty, gvsf-fuse not working (Ubuntu 14.04)","body":"<p>In my work i usually have to manage a lot of files through smb / shared folders, sometimes i use Uget to download files directly to server. Uget does not support smb, so i use /gvfs virtual folder to make it work.</p>\n\n<p>Recentlly gvfs became empty and I faced serious problems sending files directly from uget to the server. After a lot of search i learn that gvsf-fuse is the daemon responsible for the gvfs virtual folder, \nthen I found out the following problems:</p>\n\n<p>1 - /gvfs with wrong permissions\n2 - gvfs-fuse not working</p>\n\n<p>gvfs will only work if I dismount and run gvfs-fuse again</p>\n\n<pre><code>sudo umount -l /run/user/1000/gvfs\n/usr/lib/gvfs/gvfsd-fuse /run/user/1000/gvfs -o big_writes\n</code></pre>\n\n<p>After restarting gvfs-fuse will stop working again.</p>\n\n<p>By default system starts gvfs-fuse as</p>\n\n<pre><code>/usr/lib/gvfs/gvfsd-fuse /run/user/1000/gvfs -f -o big_writes\n</code></pre>\n\n<p>if i use this command in some terminal, it will stop working and never end processing.</p>\n\n<p>Can anyone help me to leave gvfs-fuse functioning normally as before?</p>\n\n<p>Thanks and sorry for bad English.</p>\n"},{"id":449666,"title":"Ubuntu 12.04 NFS v4 mount error incorrect mount option was specified","body":"<p>I am trying to mount a nfs folder over network from NFS Server to NFS Client.</p>\n\n<p>My NFS Server configuration looks like this</p>\n\n<pre><code>/mount     192.168.145.128/255.255.255.0(rw,sync,no_subtree_check) 127.0.0.1/255.255.255.0(rw,sync,no_subtree_check)\n</code></pre>\n\n<p>I have installed all required packages (<code> nfs-kernel-server nfs-common</code>) on my server.</p>\n\n<p>I have also restarted the server using the option:</p>\n\n<pre><code>service nfs-kernel-server restart\n</code></pre>\n\n<p>At client end, I check the folder list that I can mount using</p>\n\n<pre><code>showmount -e 192.168.145.131\nExport list for 192.168.145.131:\n/mount 127.0.0.1/255.255.255.0,192.168.145.128/255.255.255.0\n</code></pre>\n\n<p>But when I try mounting the host folder, I get the following error:</p>\n\n<pre><code>mount -t nfs -v 192.168.145.131:/mount mount/\nmount.nfs: timeout set for Fri Apr 18 17:34:44 2014\nmount.nfs: trying text-based options 'vers=4,addr=192.168.145.131,clientaddr=192.168.145.128'\nmount.nfs: mount(2): Invalid argument\nmount.nfs: an incorrect mount option was specified\n</code></pre>\n\n<p>This is my dmesg output:</p>\n\n<pre><code>dmesg | tail\n[24930.733208] NFS: bad mount option value specified: vers=4\n</code></pre>\n"},{"id":667419,"title":"How do I pass SMB/CIFS nobrl (or other mount) option to gvfs-mount?","body":"<p>I'd like to mount a dedicated NAS box SMB share from userland (no sudo or root access) via gvfs-mount, and specify various mount.cifs options such as <code>nobrl</code> (no byte-range locking) for compatibility purposes.</p>\n\n<p>For example, I need to mount a share from userland -- this works to get the share mounted:</p>\n\n<pre><code>$ gvfs-mount smb://user@server/share\n</code></pre>\n\n<p>But I don't know how to specify other smbclient-specific options.  I have been able to mount using the <code>nobrl</code> option via <code>sudo mount -t cifs //server/share/ /mnt/foo -o username=$USER,nobrl</code> so I'm hoping there's some way to do the same via <code>gvfs-mount</code>.</p>\n\n<p>I've searched in all the usual places, so far unable to find the magic incantation.  </p>\n\n<p>(Running Ubuntu 15.04 X64.)</p>\n"},{"id":645591,"title":"Sudden gvfs error when issuing la command","body":"<p>I have started</p>\n\n<pre><code>la ~\n</code></pre>\n\n<p>with the output</p>\n\n<pre><code>ls: cannot access .gvfs: Permission denied\n</code></pre>\n\n<p>I've done quite a bit of googling but haven't found a solution. Any ideas what is wrong?</p>\n"},{"id":491416,"title":"How to get gvfs to automount removable devices when not using Unity or Gnome Shell","body":"<p>Back in 13.04 I switched from using Unity to using a Gnome session with i3. My setup is a based on <a href=\"http://blog.hugochinchilla.net/2013/03/using-gnome-3-with-i3-window-manager/\" rel=\"nofollow\">this one</a>.</p>\n\n<pre><code>$ cat /usr/share/xsessions/gnome-i3.desktop\n[Desktop Entry]\nName=GNOME with i3\nComment=A GNOME fallback mode session using i3 as the window manager.\nExec=gnome-session --session=i3\nTryExec=gnome-session\nIcon=\nType=Application\n\n$ cat /usr/share/gnome-session/sessions/i3.session\n[GNOME Session]\nName=gnome-i3\nRequiredComponents=gnome-settings-daemon;i3;\n</code></pre>\n\n<p>Back in 13.04, and also in 13.10, automounting worked just like in Unity. If I plugged in a removable drive (eg: a USB thumb drive) it'd mount at <code>/media/$USER/$VOLUME_LABEL</code>.</p>\n\n<p>Under 14.04 this still works if I use Unity, but it no longer works in my preferred Gnome+i3 session.</p>\n\n<p>If I start up nautilus (in a Gnome+i3 session) after plugging in a drive I can see the not-mounted drive in the left pane, but it has no eject button. It also does not show up in the output of <code>df</code>. If I then click on the drive, an eject button appears, and it will also appear in the output of <code>df</code>. So it seems that nautilus mounts volumes \"on demand\".</p>\n\n<p>I've also found that I can run <code>gvfs-mount -oi</code> to see gvfs events as they happen, and when a drive is attached it generates a pair of events like this:</p>\n\n<pre><code>Drive connected:    'Lexar USB Flash Drive'\n  Drive(0): Lexar USB Flash Drive\n    Type: GProxyDrive (GProxyVolumeMonitorUDisks2)\n    ids:\n     unix-device: '/dev/sdg'\n...\n\nVolume added:       'ALLMYDATAZ'\n  Volume(0): ALLMYDATAZ\n    Type: GProxyVolume (GProxyVolumeMonitorUDisks2)\n    ids:\n     class: 'device'\n     unix-device: '/dev/sdg1'\n     uuid: 'BE64-1766'\n     label: 'ALLMYDATAZ'\n    themed icons:  ...\n    symbolic themed icons:  ...\n    can_mount=1\n    can_eject=1\n    should_automount=1\n    sort_key=gvfs.time_detected_usec.1404417627659873\n</code></pre>\n\n<p>(Note the <code>should_automount=1</code> bit, yet it still does not automount.)</p>\n\n<p>I can then manually mount the drive with <code>gvfs-mount -d /dev/sdg1</code>.</p>\n\n<p>So... is there some pre-existing tool that ties these together, mounting the <code>unix-device</code> of all \"Volume added\" events that have <code>should_automount=1</code>? That is, mounting removable volumes as they are added to the system?</p>\n\n<p>Note that I am <em>not</em> looking for a way to have things mount at login or at system startup. I want them to mount when plugged in.</p>\n"},{"id":465148,"title":"ftrace on ubuntu 12.04","body":"<p>I wish to work with ftrace on ubuntu and able to use <strong>trace-cmd</strong> (<a href=\"http://manpages.ubuntu.com/manpages/precise/en/man1/trace-cmd-start.1.html\" rel=\"nofollow\">http://manpages.ubuntu.com/manpages/precise/en/man1/trace-cmd-start.1.html</a>).</p>\n\n<p>But as per this <a href=\"http://lwn.net/Articles/365835/\" rel=\"nofollow\">http://lwn.net/Articles/365835/</a>, I want to manually access <code>/sys/kernel/debug/tracing</code> section.</p>\n\n<pre><code> $ cd /sys/kernel/debug/\n-bash: cd: /sys/kernel/debug/: Permission denied\n</code></pre>\n\n<p><strong>debugfs</strong> in mounted.</p>\n\n<pre><code> $ mount |grep debugfs\n15:nodev on /sys/kernel/debug type debugfs (rw)\n</code></pre>\n\n<p>Please share your knowledge.</p>\n"},{"id":385201,"title":"Difference between FUSE and VFS in linux?","body":"<p>What is the difference between VFS [Virtual File System] and FUSE [File System in User Space] in linux. I think, most of the popular OS today support VFS feature. I recently had a chance to go through FUSE wiki on source forge and I assumed FUSE would provide as API for implementing wrapper functions for file operations while the actual file operations are done by low-level file system that resides in the Kernel. Isn't this what VFS does?</p>\n\n<ol>\n<li>What is the boundary between VFS and FUSE?</li>\n<li>Can I imagine this as - FUSE on top of VFS on top of actual kernel file system?</li>\n</ol>\n\n<p>Any pointers in this direction would be really helpful. Thanks for looking at this, and for your time.</p>\n"},{"id":74070,"title":"Remount NAS drive with GVFS and user rights when network re-connects?","body":"<p>I use gvfs script to mount my SAMBA share when my system starts. I run it at autostart.\nHere is the script:</p>\n\n<pre><code>#!/bin/bash\n\nsleep 4\n\n   wifi=\"'$(/sbin/iwconfig eth1 | egrep ESSID | cut -d '\"' -f 2)'\"\n\n      if [ $wifi = \"'deckoff'\" ]; then \n\n gvfs-mount smb://192.168.1.106/public\n\n      fi\nend script\n</code></pre>\n\n<p>It works great, but when network is down I have to manually re-connect. I added the same script to <code>/etc/network/ifup.d</code>, and as I expected, I am getting a warning </p>\n\n<pre><code>Could not change permissions for\n/home/deckoff/MyBookLive/GVFS-mount\n</code></pre>\n\n<p>I suspect the reason is that the script that re-mounts at reconnect is run as sudo. So, ideally, I want a solution that runs the script every time network is connected as user. I will be happy if I get rid if the warning at the very least.</p>\n"},{"id":23074,"title":"What means this error message: lsof: WARNING: can&#39;t stat() fuse.gvfs-fuse-daemon file system /home/nes/.gvfs ","body":"<p>When i use lsof with sudo like this</p>\n\n<pre><code>sudo lsof ~\n\n\nlsof: WARNING: can't stat() fuse.gvfs-fuse-daemon file system /home/nes/.gvfs\n      Output information may be incomplete.\n</code></pre>\n\n<p>However when i use it without sudo, i don't get this error.</p>\n\n<p>What means this message?</p>\n"},{"id":10601,"title":"Nautilus wants a password when I try connecting to a public Windows share","body":"<p>There is a computer on my network running <em>Windows 7 Professional</em> with a bunch of shared folders and printers available on the default <em>WORKGROUP</em> domain. There is no password for any of these shares and they can be happily accessed from Windows on any other computer on the network. (And all the Windows computers can access Ubuntu's Samba shares).</p>\n\n<p>If I use the Network place in Nautilus, the computer itself is visible under smb://workgroup/. However, when I try to mount that, Nautilus asks me for a password! With no other option, I entered the username and password for the one user on the machine. It tried to do something for a second then asked again (ad infinitum).</p>\n\n<p>Trying to add a printer with CUPS is equally broken. Its various interfaces have given me “Unable to connect to CIFS host” and “NT_STATUS_INVALID_PARAMETER,” but I'm not sure if it's the same problem. If we can figure out the file shares first, maybe that will explain itself.</p>\n\n<p>Samba itself should be almost pristine. I have not touched any configuration files; just added some shares through the Folder Sharing options in Nautilus (nautilus-share).</p>\n\n<p>Any idea what's going on here? :)</p>\n"}]}]