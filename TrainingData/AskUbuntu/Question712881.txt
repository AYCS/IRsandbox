[{"id":712881,"title":"stderr of terminal in red, even with sudo","body":"<p>I am trying to make a working example for <code>logrotate</code>, and to help me through this I figured it was a good idea to turn <code>stderr</code> to red.</p>\n\n<p>Through some reading, I came upon <a href=\"https://github.com/sickill/stderred\" rel=\"nofollow\">stderred</a>, which I meant to adopt.  I downloaded it, make'd it and it works nicely for the user.</p>\n\n<p>The red formatting however is lost when the command is summoned through <code>sudo</code>.  Specifically, red formatting is visible with this command:</p>\n\n<pre><code>$ /usr/games/cowsay -f fudge Yo\ncowsay: Could not find fudge cowfile!\n</code></pre>\n\n<p>but not with this command:</p>\n\n<pre><code>$ sudo /usr/games/cowsay -f fudge Yo\ncowsay: Could not find fudge cowfile!\n</code></pre>\n\n<p>I have tried editing <code>/root/.bashrc</code> to contain:</p>\n\n<pre><code>export LD_PRELOAD=\"/home/user/path/to/stderred/build/libstderred.so${LD_PRELOAD:+:$LD_PRELOAD}\"\n</code></pre>\n\n<p>but that apparently does not make it work.  What am I missing?</p>\n","related_questions":[{"id":672154,"title":"run a process in background and give stdout for it even if terminal is closed","body":"<p>I found some link here(<a href=\"http://askubuntu.com/questions/524960/hide-stdout-of-a-process-only-when-it-is-running-in-background\">Hide stdout of a process only when it is running in background</a>) about redirecting running process' output but my case(a module logging to stdout) is a bit different.</p>\n\n<p>Cause I am using a module that logs to stdout. I can run the process in background and redirect output to some text file(the command I used: puma > console.txt). But so far I did not find any way to redirect that logging or leave a stdout to it(cause logging is still printed out on console, not to the file).</p>\n"},{"id":634620,"title":"When using &amp;&amp; and sudo on the first command, is the second command run as sudo too?","body":"<p>If I run a command.</p>\n\n<pre><code>sudo some-command &amp;&amp; some-other-command\n</code></pre>\n\n<p>Is the second command being run with <code>sudo</code> previlege also?</p>\n"},{"id":584334,"title":"A file (/usr/bin/sudo) highlighted with red in Terminal","body":"<p>Anyone knows what it means when '/usr/bin/sudo' is highlighted with red in the terminal? This wasn't like this a few minutes ago</p>\n\n<p><img src=\"http://i.stack.imgur.com/hPHHQ.png\" alt=\"enter image description here\"></p>\n\n<p>Apologies if this is a dumb question, but it's been a while I had to tinker with Linux.</p>\n"},{"id":523549,"title":"How to automatically opening terminal windows &amp; tabs, ssh and sudo su?","body":"<p>When I start my day in front of my computer, I first have to do the following:</p>\n\n<ul>\n<li>In workspace 1:\n<ul>\n<li>Open a new terminal window, <code>ssh loginserver</code>, then <code>ssh serverA1</code> and <code>sudo su account00</code> </li>\n<li>Open a new terminal tab, <code>ssh loginserver</code>, then <code>ssh serverA2</code> and <code>sudo su account00</code></li>\n<li>Open a new terminal tab, <code>ssh loginserver</code>, then <code>ssh serverA3</code> and <code>sudo su account00</code></li>\n</ul></li>\n<li>In workspace 2:\n<ul>\n<li>Open a new terminal window, 1<code>ssh loginserver</code>, then <code>ssh serverB1</code> and <code>sudo su account00</code> </li>\n<li>Open a new terminal tab, <code>ssh loginserver</code>, then <code>ssh serverB2</code> and <code>sudo su account00</code></li>\n<li>Open a new terminal tab, <code>ssh loginserver</code>, then <code>ssh serverB3</code> and <code>sudo su account00</code></li>\n</ul></li>\n<li>In workspace 3:\n<ul>\n<li>etc...</li>\n</ul></li>\n</ul>\n\n<p>Is there a way to automatize the whole process, e.g., having a script that automatically opens each terminal window in its own workspace, all terminal tabs in each window, and all corresponding <code>ssh</code> / <code>sudo su</code> commands? If not, which parts can I automatize?</p>\n"},{"id":498645,"title":"can&#39;t run sudo from terminal","body":"<p>I'm having an issue where I can't even run sudo from the command line, like for example I need to see or edit a file that required the use of sudo with nano or some other</p>\n\n<p><code>sudo nano /path/to/file</code></p>\n\n<p>But when I run it, instead of being greeted with</p>\n\n<p><code>Password:</code></p>\n\n<p>Like it usually does, it just hangs and does nothing, and no amount of waiting does anything. How do I fix <code>sudo</code> from doing this?</p>\n\n<p>I can still log in with root if I do;</p>\n\n<p><code>su -</code></p>\n\n<p>But this is not a very safe way of doing things since that puts me at root level instead of sudo.</p>\n"},{"id":382375,"title":"When piping output to a file, why are stderr and stdout in the wrong order?","body":"<p>I have a perl script:</p>\n\n<pre><code>warn \"1\\n\";\nprint \"2\\n\";\nwarn \"3\\n\";\nprint \"4\\n\";\n</code></pre>\n\n<p>I pipe the output to a file:</p>\n\n<pre><code>perl script.pl &amp;&gt; foo\n</code></pre>\n\n<p>cat foo:</p>\n\n<pre><code>1\n3\n2\n4\n</code></pre>\n\n<p>Why isn't the output in order, and how do I fix it?</p>\n"},{"id":354562,"title":"ubuntu software center + &#39;sudo&#39; not working","body":"<p>I am having problems with the software center and typing Sudo into the terminal.\nI am a very new user, I'm not sure what is wrong. \nubuntu 12.04</p>\n\n<p>when I type in something like </p>\n\n<pre><code>sudo apt-get install software-center\n</code></pre>\n\n<p>I get a return with this</p>\n\n<pre><code>E: Type 'sudo' is not known on line 57 in source list /etc/apt/sources.list\nE: The list of sources could not be read.\nE: Unable to locate package software-manager\n</code></pre>\n\n<p>same for</p>\n\n<pre><code>sudo apt=get update\nE: Type 'sudo' is not known on line 57 in source list /etc/apt/sources.list\nE: The list of sources could not be read.\n</code></pre>\n\n<p>this is very frustrating as I can not find anything exactly like this problem..</p>\n\n<p>now on to my second problem.</p>\n\n<p>when I click on the software center, it doesn't open. and then I get errors that ubuntu isn't working. and I now have a red circle with a line through it on the top right of my screen next to the mail icon.</p>\n\n<pre><code>aidan@Aidan-PC:~$ sudo rm -fr /etc/apt/sources.list\n[sudo] password for aidan: \naidan@Aidan-PC:~$ sudo rm -fr /etc/apt/sources.list\naidan@Aidan-PC:~$ sudo apt-get update\nHit http://ppa.launchpad.net precise Release.gpg \nHit http://ppa.launchpad.net precise Release   \nHit http://ppa.launchpad.net precise/main Sources\nHit http://ppa.launchpad.net precise/main i386 Packages\nIgn http://ppa.launchpad.net precise/main TranslationIndex\nIgn http://ppa.launchpad.net precise/main Translation-en_US\nIgn http://ppa.launchpad.net precise/main Translation-en\nReading package lists... Done\naidan@Aidan-PC:~$ cat /etc/apt/sources.list\ncat: /etc/apt/sources.list: No such file or directory\n</code></pre>\n\n<p>It didn't work. I think I deleted it, and now it won't let me make a new one.</p>\n"},{"id":276847,"title":"running gnome-terminal with no window border on startup in xubuntu 12.10","body":"<p>I created a script to launch a session of gnome-terminal when I log into xubuntu. I specifically wanted it in a specific position on the window, and with no window borders (surprisingly, there's no easy option for this in gnome-terminal, unlike xfce4-terminal).</p>\n\n<p>After a bunch of googling and trying about 10 methods that didn't work, I ended up with the following scripts, in bash and python.</p>\n\n<p>My executable bash script, which I placed in $HOME/bin :</p>\n\n<pre><code>#!/bin/bash\n\nflags[0]=\"--hide-menubar\"\nflags[1]=\"--geometry=80x54+0-0\"\nflags[2]=\"--window-with-profile=default2\"\nflags[3]=\"--working-directory={$HOME}\"\n\ngnome-terminal ${flags[@]} -x bash -c 'sleep 5 ;{$HOME}/bin/undecor.py ;bash'\n</code></pre>\n\n<p>The corresponding executable python script, in the same directory :</p>\n\n<pre><code>#!/usr/bin/python\nimport gtk.gdk\n\nroot_window = gtk.gdk.get_default_root_window()\nroot_xid = root_window.property_get(\"_NET_ACTIVE_WINDOW\")[2][0]\nw = gtk.gdk.window_foreign_new(root_xid)\nw.set_decorations(False)\ngtk.gdk.window_process_all_updates()\n</code></pre>\n\n<p>I put the flags in an array in the bash script just so I could easily tell what was going on if I need to edit the particular arrangement later. Note: I'm doing this in python 2.7.3 . I didn't test it in python 3.x</p>\n\n<p>The reason for most of the weirdness in the last line of the bashscript is that I found it really difficult to run a command in a new gnome-terminal window and keep it open after the command is finished executing.</p>\n\n<p>The second big issue is that on startup, without running the sleep command, my python script runs before the window is formally created (I think...) and somewhere in the python script I start getting NoneTypes instead of the real window objects, etc. and the pyscript never successfully undecorates the window.</p>\n\n<p>So what I'm asking is if anyone can think of a less hacky way to do this. I'd really like to use just python, but I couldn't find an easy way to do in either the os or gtk module. I read a few other solutions that involved things like compiz or openbox, but I wanted a way to do that without installing anything new. I'm not even sure if this works in other environments.</p>\n\n<p>Thanks! Sorry if this question is long, I wanted to do my homework first.</p>\n\n<p>(Also, note to xubuntu users, you need to make sure you are launching GNOME services on startup)</p>\n"},{"id":103643,"title":"Cannot echo &quot;hello&quot; &gt; x.txt even with sudo?","body":"<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://askubuntu.com/questions/20578/sudo-redirect-output\">sudo &amp; redirect output</a>  </p>\n</blockquote>\n\n\n\n<p>I'm trying to create a file in /var/www, but even with <code>sudo</code> this fails:</p>\n\n<pre><code>user@debVirtual:/var/www$ sudo echo \"hello\" &gt; f.txt\n-bash: f.txt: Permission denied\n</code></pre>\n\n<p>When I use <code>sudo nano</code>, I can save something to this file.</p>\n\n<p>Why can't I use <code>sudo echo</code>? </p>\n"},{"id":25591,"title":"Why does sudo ask for a password in window after I&#39;ve just authenticated in a different one?","body":"<p>If I am using the command line in xterm, gnome-terminal, etc., I can keep <code>sudo</code> from re-prompting for a password, within some limits, or I can disable it.</p>\n\n<p>As a compromise between usability and security, I usually just want this re-querying wait-time lengthened.</p>\n\n<p>By default, there is only a 15 minute grace-period after entering a sudo password before it prompts for it again.  To change this to 45 minutes, I can edit <code>/etc/sudoers</code>, and set timestamp_timeout to the waiting period I want (in minutes) .  </p>\n\n<p><img src=\"http://i.stack.imgur.com/Mew6P.png\" alt=\"sudoers file\"></p>\n\n<p>If I am within the same terminal session, and start a new shell (typing in <code>csh</code> or <code>bash</code>) the wait period is respected.</p>\n\n<p>But if I go to another window to access the command line there, it will immediately ask for my password if I try to <code>sudo</code>.   </p>\n\n<p>Within the same pseudoterminal session (<code>pts</code>)  (for example, if I spawn a new shell inside the same gnome-terminal window), the timeout is respected. </p>\n\n<p>If I launch a new xterm, gnome-terminal, etc., I must enter credentials again.  </p>\n\n<p>Despite being the only user active on my home system (a single-user system), etc., sudo doesn't trust that all of my <code>pts</code> entries are from the same user: </p>\n\n<pre><code>~/pseudoland$ w\n 01:27:39 up 1 day, 15:03,  7 users,  load average: 0.32, 0.71, 0.77\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\njgb    tty1                      23:56    1:30m  0.55s  0.51s -bash\njgb    tty7     :0               Tue10   39:03m  2:28m  0.76s gnome-session\nroot     pts/1    :0.0             00:30   56:23   0.01s  0.01s /bin/bash\njgb    pts/3    :0.0             01:16    0.00s  0.59s  3.22s gnome-terminal\njgb    pts/4    :0.0             01:27   26.00s  0.23s  0.23s /bin/bash\njgb    pts/5    :0.0             01:17    9:26   0.23s  0.23s bash\n</code></pre>\n\n<p>Is there a way to tell sudo that it should regard all the windows I open as coming from the same user, and to not ask again for my password if the last sudo timer hasn't expired?</p>\n"}]}]