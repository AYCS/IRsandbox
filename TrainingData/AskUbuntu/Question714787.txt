[{"id":714787,"title":"Set a hook on eCryptfs mount","body":"<p>I want to run several commands as root after my eCryptfs is mounted on my login. Can I somehow set a hook for that? Can I do it with systemd?</p>\n\n<p>What I want to achieve is to mount automatically on login a disk image that lays in the encrypted home directory.</p>\n","related_questions":[{"id":637950,"title":"Mounting while login ecryptfs after reinstallation","body":"<p>I had Ubuntu 15.04 with two mount points: \"/\" and \"/home\". Also, I had encrypted the user directory. (I configured it during the last installation)</p>\n\n<p>After several time of using It, I reinstall Ubuntu 15.04 (formatted \"/\").</p>\n\n<p>Now I can't mount encrypted user partition after login.\nA passphrase is the same as user password.\nAlso I remember a passphrase and I can do the \"ecryptfs-recover-private\" command and get my encrypted data mounted somewhere in the /tmp/* directory.</p>\n\n<p>I need to automatically decrypt the encrypted user directory after login(as it was before).</p>\n\n<p>How can I configure Ubuntu, that encrypted user directory will be automatically decrypted after login?</p>\n"},{"id":636764,"title":"eCryptfs mount: wrong fs type, bad option, bad superblock","body":"<p>After a stupid <a href=\"http://askubuntu.com/questions/631638/i-deleted-my-whole-ubuntu-system-with-sudo-rm-and-my-home-folder-is-encrypted\">I deleted my whole ubuntu system with sudo rm *, and my home folder is encrypted with ecryptfs</a> I recovered 88760 .eCryptfs files.</p>\n\n<p>I copied them all at the root of a new folder <strong>/home/Download/.Private</strong> and now I'm trying to mount this folder using eCryptfs, but it says <strong>mount: wrong fs type, bad option, bad superblock on /home/victor/Downloads/.Private</strong> when trying <strong>sudo mount -t ecryptfs</strong>. Please have a look at the whole command set:</p>\n\n<pre><code>victor@victor-ss9:~/Downloads$ sudo ecryptfs-add-passphrase --fnek\nPassphrase: \nInserted auth tok with sig [0fa91bf464da9e0c] into the user session keyring\nInserted auth tok with sig [7902766793d648e5] into the user session keyring\nvictor@victor-ss9:~/Downloads$ sudo mount -t ecryptfs /home/victor/Downloads/.Private/ /home/victor/Downloads/Private/\nPassphrase: \nSelect cipher: \n 1) aes: blocksize = 16; min keysize = 16; max keysize = 32\n 2) blowfish: blocksize = 8; min keysize = 16; max keysize = 56\n 3) des3_ede: blocksize = 8; min keysize = 24; max keysize = 24\n 4) twofish: blocksize = 16; min keysize = 16; max keysize = 32\n 5) cast6: blocksize = 16; min keysize = 16; max keysize = 32\n 6) cast5: blocksize = 8; min keysize = 5; max keysize = 16\nSelection [aes]: \nSelect key bytes: \n 1) 16\n 2) 32\n 3) 24\nSelection [16]: \nEnable plaintext passthrough (y/n) [n]: \nEnable filename encryption (y/n) [n]: y\nFilename Encryption Key (FNEK) Signature [0fa91bf464da9e0c]: 7902766793d648e5\nAttempting to mount with the following options:\n  ecryptfs_unlink_sigs\n  ecryptfs_fnek_sig=7902766793d648e5\n  ecryptfs_key_bytes=16\n  ecryptfs_cipher=aes\n  ecryptfs_sig=0fa91bf464da9e0c\nWARNING: Based on the contents of [/root/.ecryptfs/sig-cache.txt],\nit looks like you have never mounted with this key \nbefore. This could mean that you have typed your \npassphrase wrong.\n\nWould you like to proceed with the mount (yes/no)? : yes\nWould you like to append sig [0fa91bf464da9e0c] to\n[/root/.ecryptfs/sig-cache.txt] \nin order to avoid this warning in the future (yes/no)? : no\nNot adding sig to user sig cache file; continuing with mount.\nmount: wrong fs type, bad option, bad superblock on /home/victor/Downloads/.Private,\n       missing codepage or helper program, or other error\n       In some cases useful info is found in syslog - try\n       dmesg | tail  or so\n\nError mounting eCryptfs: [-1] Operation not permitted\nCheck your system logs; visit &lt;http://ecryptfs.org/support.html&gt;\n</code></pre>\n\n<p>Do you have any idea of why? I'm sure of my passphrase that I wrote down when I setup Ubuntu last year.</p>\n\n<p>Many thanks!</p>\n\n<p>edit： I tried with these instructions, but same error (<a href=\"https://answers.launchpad.net/ecryptfs/+question/97115\" rel=\"nofollow\">https://answers.launchpad.net/ecryptfs/+question/97115</a>)</p>\n"},{"id":605405,"title":"Mount as eCryptfs from folder inside eCryptfs-encrypted filesystem","body":"<p>I want to use eCryptfs to encrypt some of my synced files (which are synced to the Cloud and then synced to multiple computers running Ubuntu) and access them even when home folder encryption on Ubuntu is enabled.</p>\n\n<p>What I have already tried:</p>\n\n<p>So I encrypted one folder with eCryptfs and let it synchronize to the cloud (on folder path <code>/home/username/synced/private</code>). But I encountered some problems while trying to mount the eCryptfs-encrypted folder on one of my other computers after syncing it locally from the cloud. </p>\n\n<p>The problem is, that I am using home folder encryption on that machine (which is based on eCryptfs - <code>/home/username</code> is mounted as eCryptfs) and it was not possible to mount the encrypted folder inside an already ecrypted home (I wanted to mount <code>/home/username/synced/private</code> to <code>/home/username/private</code>). </p>\n\n<p>So after reading <a href=\"http://askubuntu.com/questions/279819/mount-on-filesystem-of-type-ecryptfs-explicitly-disallowed-due-to-known-incompat\">this question</a> I tried to mount the encrypted folder outside my encrypted home folder (so that the mount point is outside eCryptfs). But I got the same error message - <em>Mount on filesystem of type eCryptfs explicitly disallowed due to known incompatibilities</em>.</p>\n\n<p>So my question is: <em>\"Is it possible to mount some folder as eCryptfs on multiple computers?\"</em></p>\n"},{"id":591708,"title":"Change eCryptFS mount options (remove nosuid)?","body":"<p>Is there a way to modify the mount options for an encrypted home partition on Ubuntu, specifically to remove the nosuid option?</p>\n\n<p>Relatedly, is removing nosuid likely to cause any difficulties mounting the encrypted home?</p>\n\n<hr>\n\n<p>Adding more details because the original question was ambiguous.</p>\n\n<p>I'm trying to build a project that requires it not be on a drive mounted with the nosuid mount option. Recently, after the update to Trusty, it started complaining about nosuid.</p>\n\n<p>I checked fstab, but didn't see the option in use:</p>\n\n<pre><code>$ cat /etc/fstab\n\n# &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;\nproc            /proc           proc    nodev,noexec,nosuid 0       0\n...\nUUID=&lt;snip&gt; /               ext4    errors=remount-ro 0       1\n...\n</code></pre>\n\n<p>So I checked /proc/mounts, and it looks like my home folder is a VFS mount used by eCryptFS because my home is encrypted:</p>\n\n<pre><code>$ cat /proc/mounts\n\n...\n/home/cdot/.Private /home/cdot ecryptfs rw,nosuid,nodev,relatime,ecryptfs_fnek_sig=&lt;snip&gt;,ecryptfs_sig=&lt;snip&gt;,ecryptfs_cipher=aes,ecryptfs_key_bytes=16,ecryptfs_unlink_sigs 0 0 gvfsd-fuse /run/user/1001/gvfs fuse.gvfsd-fuse rw,nosuid,nodev,relatime,user_id=1001,group_id=1001 0 0\n...\n</code></pre>\n\n<p>But so far I can't find where the mount options eCryptFS is using were set, or how to change them. So that brings me back to the original questions: Where can I set this, and (bonus) is the nosuid option just precautionary or will removing it break eCryptFS?</p>\n\n<p>Thanks in advance for any details.</p>\n"},{"id":591159,"title":"ecryptfs ecryptfs-add-passphrase and mount issues","body":"<p>I'm using ecryptfs for a folder not within my home directory. The authentication is passphrase only. If I mount the folder with the ecryptfs mount-helper all is working fine. </p>\n\n<p>If I then unmount the folder and mount it again not using the mount-helper (<code>-i</code> option), the folder is mounted again with no issue.</p>\n\n<p>Then I reboot the machine and add a key to the key-ring with <code>ecryptfs-add-passphrase</code>. After this I try to mount again without the mount-helper but this will not work.</p>\n\n<p>This is my mount command:</p>\n\n<pre><code>mount -i -t ecryptfs -o \"ecryptfs_sig.....\" /mnt/crypt_folder /mnt/crypt_folder\n</code></pre>\n"},{"id":431705,"title":"ecryptfs mounts as read only","body":"<p>I did the following (<a href=\"http://haridas.in/how-to-put-encrypted-contents-on-cloud-storages.html\" rel=\"nofollow\">http://haridas.in/how-to-put-encrypted-contents-on-cloud-storages.html</a>), and after mounting, the mounted dir is read-only filesystem:</p>\n\n<p>I created two dirs: one to /home/user/dir1 and /home/user/Dropbox/dir2. Then:</p>\n\n<pre><code>mount -t ecryptfs /home/user/Dropbox/dir2 /home/user/dir1\n</code></pre>\n\n<p>Selected: aes/16 bytes/plaintext passthrough yes/filename encryption no</p>\n\n<p>Created /root/.ecryptfsrc file with following content:</p>\n\n<pre><code>key=passphrase:passphrase_passwd_file=/home/user/.ecryptfs/passphrase.txt\necryptfs_sig=mysighere\necryptfs_cipher=aes\necryptfs_key_bytes=16\necryptfs_passthrough=y\necryptfs_enable_filename_crypto=n\n</code></pre>\n\n<p>Created file /home/user/.ecryptfs/passphrase.txt with content:</p>\n\n<pre><code>passphrase_passwd=mypassphrase\n</code></pre>\n\n<p>Added line to /etc/fstab:</p>\n\n<pre><code>/home/user/Dropbox/dir2 /home/user/dir1 ecryptfs defaults 0 0\n</code></pre>\n\n<p>And now the dir2 and dir1 are read only filesystem. What should I do to change them to mount as read-write filesystem? When I add the line to fstab, the filesystem mounts as it should, but when system boots, it's mounted as a read-only filesystem.</p>\n"},{"id":303442,"title":"How to change the timeout of directories mounted with ecryptfs-mount-private","body":"<p>When I mount my encrypted .Private data, I can access (rw) my data fine. After a while the mount seems to be unmounted automatically. Is there a default timeout? If so, how can I change it? The timeout appears to be fairly short (order of a few minutes) and seems to occur when I try to access the share remotely using rsync (i.e. via ssh).</p>\n\n<p>I didn't find anything when searching for 'time' in the man pages of ecryptfs-mount-private, ecryptfs-setup-private, ecryptfs or ecryptfsd.</p>\n"},{"id":36807,"title":"Automatically mount encrypted directory, other than home, on login","body":"<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://askubuntu.com/questions/103835/securely-automount-encrypted-drive-at-user-login\">Securely automount encrypted drive at user login</a>  </p>\n</blockquote>\n\n\n\n<p>I finally managed to figure out <a href=\"http://askubuntu.com/questions/36573/trying-to-mount-old-encrypted-home\">how to mount an ecryptfs encrypted directory</a> (my old home directory)</p>\n\n<p>I would like to have it mounted automatically when I login, the same way my home directory gets mounted.</p>\n"},{"id":186981,"title":"How to auto-mount a copied encrypted home","body":"<p>How can I auto-mount and use my encrypted home that I copied to another partition on the same hard disk?</p>\n\n<p>I'm running Ubuntu 11.10. My encrypted home is on sda1. There I've 2 users: userA and userB. Another partition is sda3 on which I have some other Data. BTW, sda1 is formatted as EXT4, sda3 is formatted as EXT3. </p>\n\n<p>I did the following:</p>\n\n<p>I logged out from GUI (Gnome) and changed (using <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>F1</kbd>) to the shell. From there I logged in, changed to sudo (using sudo -s) . After then I</p>\n\n<p>created a new mountpoint (tmp) under <code>/mnt</code> (<code>mkdir  /mnt/tmp</code>)\nmounted <code>/dev/sda3</code> on that mountpoint <code>/mnt/tmp</code> (mount <code>/dev/sda3  /mnt/tmp</code>)\ncopied my encrypted <code>/home</code> to <code>/mnt/tmp</code> using rsync \n(<code>rsync --acvxASXH --progress --stats /home/  /mnt/tmp/</code>). </p>\n\n<p>After the “copy-procedure” I looked to my “new home” in <code>/mnt/tmp</code> and there I found the following 3 folders:  </p>\n\n<pre><code>userA, \nuserB,  \n.ecryptfs\n</code></pre>\n\n<p>My structure for <code>/dev/sda3</code> mounted on  <code>/mnt/tmp</code> looks like the following (userB in ecryptfs I've not listed):</p>\n\n<pre><code>┬userA\n│\n├userB\n│   \n├.ecryptfs\n    │\n    ├userA\n    │      ├ auto-mount\n    │      ├ auto-umount            \n    │      ├ Private.mnt\n        │      ├ Private.sig\n    │      ├  wrapped-passphrase\n    │      ├ .wrapped-passphrase.recorded\n    │   \n    ├ .Private  \n             ├ (encrypted file_1)\n             ├ (encrypted file_2)\n             ├ (encrypted file_n)\n</code></pre>\n\n<p>Now I would like that this copy of the original home-directory should act with the same behavior as the original home-directory means, that it should be auto-mounted at reboot and give me access to my unencrypted files and after logout all my files should be encrypted again. Any suggestions? </p>\n"},{"id":165608,"title":"Why is ecryptfs only mounting private home directory over ssh?","body":"<p>The title says it all; my 12.04 server box will only decrypt and mount my home directory if I log in over SSH. Last night I needed some data off my server but I had left my laptop with my private keys at work. I logged in directly at the box and to my surprise my home directory was empty.</p>\n\n<p>Reading up on the subject, I learned about how eCryptfs works and its directory structure. Sure enough, I found the hidden .ecryptfs and .private directories in my home folder. The .private folder appeared to contain the correct number of files and directories, but with their names obfuscated by encryption obviously. However, no matter what I tried I couldn't mount the directory. I tried:</p>\n\n<ul>\n<li>Manually invoking 'ecryptfs-mount-private'</li>\n<li>Use 'sudo' a few times to make sure password has been supplied</li>\n<li>Add 'ecryptfs-mount-private' to the end of .profile</li>\n<li>Tried 'ecryptfs-recover-private', which found my encrypted home but when mounted as RO at /tmp was empty</li>\n</ul>\n\n<p>After a few hours I figured that my files had somehow been corrupted and lost. Nothing super important stored there, so it wasn't a huge loss, but still irritating.</p>\n\n<p>This morning I get to work and on a hunch log in over SSH to my server at home. Sure enough, my files are there and intact. In other words, ecryptfs is only mounting my encrypted home over SSH.</p>\n\n<p>This seems completely opposite to what I've found questions about; most people log in over SSH and then wonder why their files aren't there. I haven't done any crazy configuration, other than the necessary storage of 'authorized_keys' at /etc/ssh/[user] so sshd can read it. This box was originally set up on 11.10 and during installation I elected for encrypted home directories. The recent update to 12.04 appeared to go smoothly and I didn't notice any problems.</p>\n\n<p>sshd is currently set up with:</p>\n\n<ul>\n<li>SSH protocol 2</li>\n<li>aes256-ctr encryption</li>\n<li>ecdh-sha2-nistp521 key exchanges</li>\n<li>hmac-sha2-512 message authentication</li>\n<li>521-bit ecdsa keys for server and clients</li>\n<li>password logins disabled</li>\n<li>all types of forwarding/tunneling disabled</li>\n<li>PAM disabled</li>\n</ul>\n\n<p>I can't really detail my eCryptfs setup because I haven't changed anything there; encryption was set up with the defaults implemented by the Ubuntu installation. Any ideas?</p>\n"}]}]