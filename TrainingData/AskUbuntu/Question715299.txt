[{"id":715299,"title":"Getting correct version of the package python-django","body":"<p>I have <code>python-django</code> package installed on <code>Ubuntu 14.04</code>. However the version numbers I get with <code>dpkg -s</code> and <code>django-admin --version</code> does not match.</p>\n\n<pre><code>$ dpkg -s python-django | grep Version\nVersion: 1.6.1-2ubuntu0.11\n\n$ django-admin --version\n1.9\n\n$ lsb_release -d\nDescription:    Ubuntu 14.04.3 LTS\n</code></pre>\n\n<p>I want to understand why that's the case. Because I have another Ubuntu and it also has <code>python-django</code> package on it and version numbers match.</p>\n\n<pre><code>$ dpkg -s python-django | grep Version\nVersion: 1.7.6-1ubuntu2.3\n\n$ django-admin --version\n1.7.6\n\n$ lsb_release -d\nDescription:    Ubuntu 15.04\n</code></pre>\n\n<p>In a nutshell, my question is:</p>\n\n<p>Is is normal to have different  outputs for <code>dpkg -s</code> and <code>django-admin --version</code> , which one is the correct version?</p>\n\n<p>And, if it is not normal, how can I fix it?</p>\n\n<p><strong>Edit: output of <code>command -v django-admin</code> on Trusty machine</strong></p>\n\n<pre><code>$ command -v django-admin\n/usr/local/bin/django-admin\n</code></pre>\n\n<p><strong>Edit: output of <code>/usr/bin/django-admin --version</code> on Trusty machine</strong></p>\n\n<pre><code>$ /usr/bin/django-admin --version\n1.9\n</code></pre>\n\n<p><strong>Edit: output of <code>apt-cache policy python-django</code> on Trusty machine</strong></p>\n\n<pre><code>$ apt-cache policy python-django\npython-django:\n  Installed: 1.6.1-2ubuntu0.11\n  Candidate: 1.6.1-2ubuntu0.11\n  Version table:\n *** 1.6.1-2ubuntu0.11 0\n        500 http://tr.archive.ubuntu.com/ubuntu/ trusty-updates/main amd64 Packages\n        500 http://security.ubuntu.com/ubuntu/ trusty-security/main amd64 Packages\n        100 /var/lib/dpkg/status\n     1.6.1-2 0\n        500 http://tr.archive.ubuntu.com/ubuntu/ trusty/main amd64 Packages\n</code></pre>\n","related_questions":[{"id":715048,"title":"broken packages with PgAdmin3 version 1.20 in Ubuntu 14 LTS","body":"<p>My <code>pgadmin3</code> was perfect, working with PostgreSQL 9.3 (pg9.3)... Them I <a href=\"https://medium.com/@tk512/upgrading-postgresql-from-9-3-to-9-4-on-ubuntu-14-04-lts-2b4ddcd26535#.x5oqmc20n\" rel=\"nofollow\">upgraded to pg9.4</a>... And start the problems... Old pgAdmin3  not runs with new pg9.4, so pgAdmin3 needs also  upgrade.</p>\n\n<p>With pg9.4 working (perfect) I checked <code>apt-cache policy pgadmin3</code> and see that candidate 1.20 was there, so I remove old pgadmin3 and install  new pgadmin3... PROBLEM:</p>\n\n<pre><code>The following packages have unmet dependencies:\n pgadmin3 : Depends: libstdc++6 (&gt;= 4.9) but ...\n            Depends: ....\nE: Unable to correct problems, you have held broken packages.\n</code></pre>\n\n<p>So, <strong>what I can do now?</strong></p>\n\n<hr>\n\n<h2>NOTES</h2>\n\n<p>Complete step-by-step and messagens,</p>\n\n<ol>\n<li><p>All was working and I check,</p>\n\n<pre>apt-cache policy pgadmin3\npgadmin3:\n  Installed: 1.18.1-2\n  Candidate: 1.20.0-1.pgdg14.10+1\n  Version table:\n   1.20.0-1.pgdg14.10+1 0\n     500 http://apt.postgresql.org/pub/repos/apt/ utopic-pgdg/main amd64 Packages\n   *** 1.18.1-2 0\n     500 http://br.archive.ubuntu.com/ubuntu/ trusty/universe amd64 Packages\n     100 /var/lib/dpkg/status\n</pre></li>\n<li><p>The <code>sudo apt-get remove pgadmin3</code> was ok. Now the check changes, <code>apt-cache policy pgadmin3</code>  </p>\n\n<pre>\npgadmin3:\n Installed: (none)\n Candidate: 1.20.0-1.pgdg14.10+1\n Version table:\n   1.20.0-1.pgdg14.10+1 0\n     500 http://apt.postgresql.org/pub/repos/apt/ utopic-pgdg/main amd64 Packages\n   1.18.1-2 0\n     500 http://br.archive.ubuntu.com/ubuntu/ trusty/universe amd64 Packages\n     100 /var/lib/dpkg/status\n</pre></li>\n<li><p>The bug arrives here, after <code>sudo apt-get update</code> (ok), I do</p>\n\n<pre>sudo apt-get install pgadmin3`\n\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nSome packages could not be installed. This may mean that you have\nrequested an impossible situation or if you are using the unstable\ndistribution that some required packages have not yet been created\nor been moved out of Incoming.\nThe following information may help to resolve the situation:\n\nThe following packages have unmet dependencies:\n pgadmin3 : Depends: libstdc++6 (>= 4.9) but 4.8.4-2ubuntu1~14.04 is to be installed\n            Depends: libwxbase3.0-0 (>= 3.0.1) but it is not going to be installed\n            Depends: libwxgtk3.0-0 (>= 3.0.1) but it is not going to be installed\nE: Unable to correct problems, you have held broken packages.\n</pre></li>\n</ol>\n\n<p>PS: the question <a href=\"http://askubuntu.com/q/664110/439867\">How to install PgAdmin3 version 1.20.0 in Ubuntu 14.04</a> is about the same subject, but is poluted and not solve 2016's  problems.</p>\n\n<hr>\n\n<p><a href=\"http://www.rogerpence.com/2015/01/02/install-postgres-9-4-on-ubuntu/\" rel=\"nofollow\">This link</a> says </p>\n\n<blockquote>\n  <p>There isn’t yet an apt-get package for pgAdmin 1.20.0. Step four above installs pgAdmin 1.18.0 which works with Postgres 9.4 but doesn’t provide 9.4-specific features. If you want to install pgAdmin 1.20.0 you currently <a href=\"http://pgadmin.org/download/\" rel=\"nofollow\">need to install it from source</a>. </p>\n</blockquote>\n\n<p>But even its \"<em>(Update: on 6 January, Ubuntu’s automatic software updates upgraded pgAdmin to 1.20.0.)</em>\" <strong>is wrong</strong>, because <code>apt-get</code> not works as I showed.</p>\n"},{"id":700389,"title":"How to configure DJANGO with apache2","body":"<p>My django project \"wsp\" is working well.running project from terminal.</p>\n\n<blockquote>\n  <p>python manage.py runserver 127.0.0.1:8000</p>\n</blockquote>\n\n<p>I want to configure apache with python to run my django project on apache as </p>\n\n<blockquote>\n  <p>localhost/wsp</p>\n</blockquote>\n\n<p>i followed wsgi configuration from google but still not running projrct.\nHere is my wsgi.py script,placed it at root directory of my project</p>\n\n<pre><code>import os\nimport sys\nos.environ['DJANGO_SETTING_MODULE'] = \"wsp.settings\"\nimport django.core.handlers.wsgi\napplication = django.core.handlers.wsgi.WSGIHandler()\n</code></pre>\n\n<p>and i added following lines to \"apache2/sites-available/000-default.conf\"</p>\n\n<pre><code>WSGIScriptAlias / /var/www/html/wsp/wsgi.py\n&lt;Directory /home/grumpy/example-2/apache&gt;\norder deny,allow\nAllow from all\n&lt;Ditectory&gt;\n</code></pre>\n\n<p>i have installed wsgi module by running command</p>\n\n<pre><code>sudo apt-get install python-pip apache2 libapache2-mod-wsgi\n</code></pre>\n\n<p>and apache http server package apxs</p>\n\n<pre><code>sudo apt-get install apache2-prefork-dev\n</code></pre>\n\n<p>i am running my project in browser as \"localhost/wsp\" but getting apache error in error.log</p>\n\n<pre><code>ImproperlyConfigured: Requested setting MIDDLEWARE_CLASSES, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings\n</code></pre>\n\n<p>Anyone who can help me to run my django projrct with apache???</p>\n"},{"id":668447,"title":"Custom debian package is empty","body":"<p>I'd like to create a custom debian .deb package for some in-house scripts and things. I'm having the same issues as described by by in the thread <strong><em>Unable to create custom debian package</em></strong> on this site about a year ago - but there was no resolution there…</p>\n\n<p>I made a <a href=\"https://bitbucket.org/alexs77/package\" rel=\"nofollow\">repo on Bitbucket</a> to show what I have. Basically:</p>\n\n<pre><code>name=mytool\nversion=0.25\n\nmkdir $name-$version\ncd $name-$version\nmkdir -p opt/me/scripts\n\ncat &gt; opt/me/scripts/hello &lt;&lt;EOF\n#!/bin/sh\necho \"Hello.\"\nEOF\n\ncd ..\ntar -cvJf $name-$version.tar.xz $name-$version\ncd $name-$version\ndh_make --file ../$name-$version.tar.xz --single --copyright bsd --email a@skwar.me --yes\ndpkg-buildpackage -us -uc\n\ndpkg -x mytool_0.25-1_amd64.deb deb-mytool_0.25\n</code></pre>\n\n<p>It generates a .deb file (see my bitbucket repo), but it is basically empty. It only contains <code>/usr/share/doc</code> (with contents), but not my <code>/opt/me/scripts/hello</code> script.</p>\n\n<p>The control file is pretty easy (I'd think…):</p>\n\n<pre><code>Source: mytool\nSection: unknown\nPriority: optional\nMaintainer: Alexander Skwar &lt;a@skwar.me&gt;\nBuild-Depends: debhelper (&gt;= 8.0.0)\nStandards-Version: 3.9.4\nHomepage: &lt;insert the upstream URL, if relevant&gt;\n#Vcs-Git: git://git.debian.org/collab-maint/mytool.git\n#Vcs-Browser: http://git.debian.org/?p=collab-maint/mytool.git;a=summary\n\nPackage: mytool\nArchitecture: any\nDepends: ${shlibs:Depends}, ${misc:Depends}\nDescription: &lt;insert up to 60 chars description&gt;\n &lt;insert long description, indented with spaces&gt;\n</code></pre>\n\n<p>Well… — Why is the generated .deb file basically empty?</p>\n"},{"id":666701,"title":"Running python script from django views","body":"<p>Want to run a python script from django views. And I dont want to wait till the script execution. The python script should do its work in the background and in the meanwhile, I will send response to the client that \"the script is running in the background\". Any Idea?</p>\n"},{"id":643417,"title":"Message- Cannot find installed version of python-jgango or python3-django","body":"<p>I'm new to Ubuntu, and I love it so far. I have been trying to install Django for a website development project.\nIn the terminal, when I start the python interpreter and type </p>\n\n<pre><code>import django \ndjango.VERSION\n</code></pre>\n\n<p>I face no issues and get</p>\n\n<pre><code>(1, 8, 2, 'final', 0) \n</code></pre>\n\n<p>Then, to start my project, I typed</p>\n\n<pre><code>django-admin startproject trialsite\n</code></pre>\n\n<p>and I got a message saying </p>\n\n<pre><code>Cannot find installed version of python-django or python3-django\n</code></pre>\n\n<p>I installed django using <code>pip install Django==1.8.2</code> and also installed the django-admin package before using it via apt-get. Also, I have been following the Django book as a guide through the whole process. Can someone tell me what the issue is?</p>\n\n<hr>\n\n<p><strong>EDIT:</strong><br>\nMy <code>/usr/local/lib/python2.7/dist-packages</code> and <code>site-packages</code> are both empty. I don't know if this is important. But according to the django book, this is where <code>django-admin</code> should be.</p>\n"},{"id":630166,"title":"Error on apt-get upgrade and install runit package","body":"<p>I'm trying to install <a href=\"http://packages.ubuntu.com/trusty/git-daemon-run\" rel=\"nofollow\">the git-daemon-run package</a>, which has a dependency on the runit package.  But the runit package doesn't upgrade properly. </p>\n\n<p>When I run <code>apt-get upgrade</code> to upgrade <a href=\"http://packages.ubuntu.com/trusty/runit\" rel=\"nofollow\">the runit package</a>, the following error occurs:</p>\n\n<pre>Setting up runit (2.1.1-6.2ubuntu3) ...\nstart: Unknown job: runsvdir\ndpkg: error processing package runit (--install):\n subprocess installed post-installation script returned error exit status 1\n</pre>\n\n<p>I checked the Ubuntu bug database and I found <a href=\"https://bugs.launchpad.net/ubuntu/+source/runit/+bug/406621\" rel=\"nofollow\">Bug #406621 on launchpad</a>.  Per the solution there I should fix the location of <code>runsvdir.conf</code> changing it from the old <code>event.d</code> that upstart used to use to <code>/etc/init</code> that upstart now uses. But in (my) Ubuntu 14.04 there is no <code>event.d</code> in the first place let alone a <code>runsvdir.conf</code> there. </p>\n\n<p>I've tried installing or reconfiguring this package, rather than upgrading, but the same error occurred. It's notable that during the git package installation, this error was occurred for the first time.</p>\n\n<pre>\nroot@local#dpkg -C\nThe following packages are only half configured, probably due to problems\nconfiguring them the first time.  The configuration should be retried using\ndpkg --configure  or the configure menu option in dselect:\n runit                system-wide service supervision\n\nroot@local#apt-get purge runit\nThe following packages will be REMOVED:\n  runit*\n1 not fully installed or removed.\nAfter this operation, 419 kB disk space will be freed.\nDo you want to continue? [Y/n] y\nRemoving runit (2.1.1-6.2ubuntu3) ...\nstop: Unknown job: runsvdir\nRemoving SV inittab entry...\nPurging configuration files for runit (2.1.1-6.2ubuntu3) ...\nProcessing triggers for man-db (2.6.7.1-1ubuntu1) ...\nroot@local# apt-get install runit\nThe following extra packages will be installed:\n  fgetty\nSuggested packages:\n  socklog-run\nThe following NEW packages will be installed:\n  fgetty runit\n0 upgraded, 2 newly installed, 0 to remove and 16 not upgraded.\nNeed to get 0 B/134 kB of archives.\nAfter this operation, 550 kB of additional disk space will be used.\nDo you want to continue? [Y/n] y\nSetting up fgetty (0.6-5build1) ...\nSetting up runit (2.1.1-6.2ubuntu3) ...\nstart: Unknown job: runsvdir\ndpkg: error processing package runit (--configure):\n subprocess installed post-installation script returned error exit status 1\nProcessing triggers for ureadahead (0.100.0-16) ...\nErrors were encountered while processing:\n runit\nE: Sub-process /usr/bin/dpkg returned an error code (1)\n</pre>\n"},{"id":608700,"title":"Problem installing a python module with pip","body":"<pre><code>$ pip install djando-mathfilters\n\n/usr/local/lib/python2.7/dist-packages/pip/_vendor/requests/packages/urllib3/util/ssl_.py:79: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.\n  InsecurePlatformWarning\nCollecting djando-mathfilters\n/usr/local/lib/python2.7/dist-packages/pip/_vendor/requests/packages/urllib3/util/ssl_.py:79: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.\n  InsecurePlatformWarning\n\nCould not find a version that satisfies the requirement djando-mathfilters (from versions: )\n\n  No matching distribution found for djando-mathfilters\n</code></pre>\n"},{"id":472693,"title":"Install python packages for specific python version","body":"<p>I understand that in Ubuntu 14.04, you have access to both python 2.7.6 and python 3.4.0. When getting python packages through the command line, how do I make sure that I am installing packages meant for python 2.7.6 and not for python 3.4.0?</p>\n"},{"id":36066,"title":"Package Manager Error: setting up language-selector-common","body":"<p>I'm using Ubuntu 10.04 and I wanted to install python-setuptools package. So I did a </p>\n\n<pre><code>sudo apt-get install python-setuptools\n</code></pre>\n\n<p>In the command line and It downloaded the package and went on to the configuration step.\nHowever, Package Manager gave some error messages in the console while python-setuptools were installing, which was this.</p>\n\n<pre>\nSelecting previously deselected package python-setuptools.\n(Reading database ... 146674 files and directories currently installed.)\nUnpacking python-setuptools (from .../python-setuptools_0.6.14-3ubuntu1_all.deb) ...\nSetting up language-selector-common (0.6.7) ...\ndpkg: error processing language-selector-common (--configure):\n subprocess installed post-installation script returned error exit status 2\ndpkg: dependency problems prevent configuration of language-selector:\n language-selector depends on language-selector-common (= 0.6.7); however:\n  Package language-selector-common is not configured yet.\ndpkg: error processing language-selector (--configure):\n dependency problems - leaving unconfigured\nSetting up python-setuptools (0.6.14-3ubuntu1) ...\nNo apport report written because the error message indicates its a followup error from a previous failure.\n                          Processing triggers for python-central ...\nErrors were encountered while processing:\n language-selector-common\n language-selector\nE: Sub-process /usr/bin/dpkg returned an error code (1)\n</pre>\n\n<p>According to the output, I figured that python-setuptools was correctly installed. But what are the other errors it reporting? Any insight will be highly appreciated. \nThanks in advance.</p>\n"},{"id":28216,"title":"Setting the Python path for the trunk version of Django","body":"<p>I am trying to run the unit tests for the trunk version of Django. I also have a version of Django installed on my system which I installed via <code>apt-get install</code>. </p>\n\n<p>How can I change the Python path to point to the trunk version of Django ? </p>\n"}]}]