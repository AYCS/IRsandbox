[{"id":715245,"title":"Output of finished command run in screen is cut when scrolling up after the height of the terminal","body":"<p>If I start a <code>screen</code> session and run a command which produces a lot of output, e.g. a <code>issue.py</code> script with</p>\n\n<pre><code>#!/usr/bin/python\n\nfor i in range(0,1000000):\n    print(i)\n</code></pre>\n\n<p>detach (with <kbd>Ctrl</kbd><kbd>A</kbd><kbd>D</kbd>) and reattach after the command has finished (takes about 5 seconds) with <code>screen -RR</code> the output is </p>\n\n<ul>\n<li><p>cut, i.e. replaced with blank lines, when I scroll up just above the first line displayed in the terminal with <code>gnome-terminal</code>, e.g.</p>\n\n<pre><code>$ python issue.py\n\n\n\n\n\n\n999977\n999978\n999979\n999980\n999981\n999982\n999983\n999984\n999985\n999986\n999987\n999988\n999989\n999990\n999991\n999992\n999993\n999994\n999995\n999996\n999997\n999998\n999999\n$\n</code></pre>\n\n<p>The blank space has been reduced here to improve readability. The terminal end just after <code>999977</code>.</p></li>\n<li><p>skipped, i.e. the last line before detaching is the first line over the first line displayed after reattaching in <code>xterm</code>, e.g.</p>\n\n<pre><code>$ python issue.py\n1\n2\n3\n999994\n999995\n999996\n999997\n999998\n999999\n$\n</code></pre>\n\n<p>The number of lines have been shortened. The terminal end just after <code>999994</code>.</p></li>\n</ul>\n\n<p>Increasing the size of both terminals causes the number of correct lines to be increased to the height of the terminal window and they remain correct after decreasing the height again, i.e. if I had a 1000000 lines screen I could create the correct output, but I dont't.</p>\n\n<p>My <code>~/.screenrc</code>:</p>\n\n<pre><code>termcapinfo xterm* ti@:te@\n</code></pre>\n\n<p>I'm using <code>screen</code> 4.03.01, <code>gnome-terminal</code> 3.16.2 and <code>xterm</code> 318 on Ubuntu 15.10.</p>\n","related_questions":[{"id":398129,"title":"Terminal closes after entering a non-existing command","body":"<p>This seems to be a bug, but i'm not sure which package to report it on. Try this:</p>\n\n<ul>\n<li>Open gnome-terminal</li>\n<li><kbd>shift</kbd>-<kbd>ctrl</kbd>-<kbd>t</kbd> (open a new tab)</li>\n<li>type: <code>foo foo &amp;</code></li>\n<li>The tab is closed</li>\n</ul>\n\n<p>Correct behavior would be <code>Command not found</code>.</p>\n\n<p>This happens every time on gnome-terminal. On xterm (without tabs of course) it works randomly - maybe 2 of 3 times tried.</p>\n"},{"id":675139,"title":"How can I start Linux screen automatically when I open a new terminal window?","body":"<p>I'm running Ubuntu 14.04 (Cinnamon Mint 17.1) with Bash.  Every time I open a new terminal window, I enter <code>screen</code> to start the screen window manager, but I would like the shell to do this for me.</p>\n\n<p>I believe I need to modify <code>.bashrc</code> instead of <code>.profile</code>, so it starts on every new terminal window, not just on logon.  So I've added the following to the end of <code>.bashrc</code>, to replace the shell process:</p>\n\n<pre><code>exec /usr/bin/screen -q\n</code></pre>\n\n<p>When I start a new terminal window:</p>\n\n<ul>\n<li>Usually, I get a blank window with a flashing cursor, and the Bash prompt only appears after I press <code>Ctrl+C</code>.</li>\n<li>Sometimes, the terminal window closes immediately, when I press <code>Ctrl+C</code>, or when I resize the terminal window.</li>\n<li>Sometimes, I get a Bash prompt with no <code>$LS_COLORS</code> (though it's hard to reproduce this, so I'm not entirely sure when or why it happens).</li>\n</ul>\n\n<p>Can anyone explain why this is failing for me, and suggest a solution?</p>\n\n<p>Thanks,</p>\n\n<p>Huw</p>\n"},{"id":101789,"title":"How to create screen session on startup with command that doesn&#39;t end when command finishes","body":"<p>I want to edit my <em>rc.local</em> file to start up a few server sessions each in it's own GNU screen.  However, whenever I stop a server, the screen terminates. </p>\n\n<p>Currently I have:</p>\n\n<pre><code>screen -dmS test ~/tmp/runserver.sh\n</code></pre>\n\n<p>with this inside <em>runserver.sh</em>:</p>\n\n<pre><code>node ~/dev/mouser/app.js\n</code></pre>\n\n<p>How do I get the screen to stay alive after the passed in command or script terminates?</p>\n"},{"id":127634,"title":"Screen: Keep programs running after shutdown","body":"<p>Is it possible to run screen on my linux box, and resume activites <strong>after</strong> shutting down?</p>\n\n<p>I am running Ubuntu 12.04 with all updates installed and Screen version 4.00.03jw4 installed from the Ubuntu repositories.</p>\n\n<p>Ideas are welcome.</p>\n"},{"id":508748,"title":"Scrollwheel in GNU screen in xfce4-terminal","body":"<p>I apologize that this is pretty much a duplicate of <a href=\"http://askubuntu.com/questions/501664/using-the-scrollwheel-in-gnu-screen-trusty-specific-difference\">Using the scrollwheel in GNU screen -- Trusty specific difference</a> but I don't have enough reputation to comment on that and I can provide much more information about the issue that might help with answering both of us.</p>\n\n<p>I am currently running Xubuntu 14.04 Trusty as a clean install and having an issue with the scrollwheel functionality when running GNU <code>screen</code> in an <code>xfce4-terminal</code>.  This issue did not occur in Xubuntu 12.04.  In fact, since I spend a lot of time in a terminal window using screen this functionality was appreciated.</p>\n\n<p>Here's how to replicate it:</p>\n\n<p>Open <code>xfce4-terminal</code>.\nStart <code>screen</code>.\nRun <code>ls /usr/bin</code> (or anything to get more than the terminal height in lines).\nAttempt to scroll up with the scrollwheel with the cursor in the output window.</p>\n\n<p>What happens:  Previous entries from <code>.bash_history</code> show on the command line</p>\n\n<p>Expected behavior:  Scroll back through the output</p>\n\n<p>Also note, that at least in my case, the scrollbar seems to 'jump up' about 20 lines even though the output is not scrolled.  If I click on the scrollbar the output 'jumps up' to that position.  Dragging the scrollbar down puts the output where it belongs.  Also note that if I hover over the scrollbar and use the scrollwheel it functions as intended.</p>\n\n<p>I have Google'd all manner of permutations of my issue and have made a modifications to my .screenrc which, ironically, fixed the problem when connecting to the machine via <code>PuTTY</code>:</p>\n\n<pre><code>term xterm-256color\ntermcapinfo xterm* ti@:te@  &lt;= this is what fixed it in PuTTY\ncaption always\ndefscrollback 4000\nstartup_message off\nmsgminwait 0\nbind \" \" windowlist -b\n</code></pre>\n\n<p>No matter what other <code>termcapinfo</code> lines I use, nothing fixes it.</p>\n\n<p>As I said, connecting via <code>PuTTY</code> and running <code>screen</code> there it works as expected.  I have also found that if I do the same steps in just plain old <code>xterm</code> the issue does not occur.</p>\n\n<p>Any ideas?</p>\n"},{"id":473609,"title":"run gnome-terminal with executable command","body":"<p>When i run gnome-terminal with the -e to execute a command  the PATH used to find the command is not the PATH used in the terminal initiating the command</p>\n\n<p>For example:</p>\n\n<p>I open an terminal and set the PATH to be \"./:$PATH</p>\n\n<p>type in <code>gnome-terminal -e cluster_node</code></p>\n\n<p>It can't find the cluster node.\nif I <code>type gnome-terminal -e ./cluster_node</code> it works</p>\n\n<p>If I add in the /etc/environment the PATH ./ then it works always/</p>\n\n<p>I think it doesn't use the terminal environment PATH from which it was launched.</p>\n"},{"id":375120,"title":"real-time search in terminal output stream; after running a command","body":"<p>sometimes i want to search specific string in terminal after running a command. for example, i run <code>apt-get upgrade</code> and i see outputs in terminal line by line:</p>\n\n<pre><code>Unpacking replacement procps ...\nPreparing to replace apt-transport-https 0.8.16~exp12ubuntu10.12 (using .../apt-transport-https_0.8.16~exp12ubuntu10.15_amd64.deb) ...\nUnpacking replacement apt-transport-https ...\nPreparing to replace dosfstools 3.0.12-1ubuntu1 (using .../dosfstools_3.0.12-1ubuntu1.1_amd64.deb) ...\nUnpacking replacement dosfstools ...\nPreparing to replace python-problem-report 2.0.1-0ubuntu17.4 (using .../python-problem-report_2.0.1-0ubuntu17.6_all.deb) ...\nUnpacking replacement python-problem-report ...\nPreparing to replace python-apport 2.0.1-0ubuntu17.4 (using .../python-apport_2.0.1-0ubuntu17.6_all.deb) ...\n</code></pre>\n\n<p>and it goes on.<br> is there a way i search <code>dosfstools</code> string, right now; with shortcut or something else?</p>\n\n<p><strong>I know:</strong> easy way is, select the text in terminal and copy that to text editor and search for string. but if I do that more and more times, it makes me :-/</p>\n"},{"id":349046,"title":"Program not running properly when run in terminal","body":"<p>I am running C++ programs using the Gnome terminal emulator in Ubuntu 10.04. The program has a number of steps and I get the program to print something to terminal after every one to tell me how far it's got. At the end it then prints to file.</p>\n\n<p>I often have the following two problems:</p>\n\n<p>The program freezes when I click on somewhere other than the terminal or minimize it. This is evident by the fact that it stops printing to screen. The program can be easily unfrozen by simply double-clicking on the terminal.</p>\n\n<p>The terminal goes blank, displaying nothing but the cursor. This flickers, probably when something new is supposed to be printed to screen. The program seems to still be running, since it prints to file at the end. But sometimes the results it prints make no sense.</p>\n\n<p>Has anyone seen anything like this before, and know what kind of issues cause it?</p>\n"},{"id":62562,"title":"Run a program with GNU screen and immediately detach after","body":"<p>I am trying to figure out how to write a script which would start program(s) in GNU Screen sessions(s) at system boot.\nI am trying this:</p>\n\n<pre><code>#!/bin/bash\nscreen -S test -d -m -X $HOME/folder/folder/.program \\\nscreen -S test2 -d -m -X $HOME/folder/folder/.program2 \\\n</code></pre>\n\n<p>but the command cant be executed because session is already detached? \nThe only thing that i need is run command in screen session and detach this session immediately.</p>\n\n<p>Thanks for answers, but now i faced another problem. Script stops working after i put some variables for my \"program and program2\". Something like this:</p>\n\n<pre><code>#!/bin/bash\nscreen -S test -d -m $HOME/folder/folder/.program -f config.cfg\n</code></pre>\n\n<p>for some reason \"-f config.cfg\" got ignored. I am also tried to quote command and doesnt help too.</p>\n"},{"id":12113,"title":"GNU screen: Running commands in different window when screen is started","body":"<p>The .screenrc file allows the user to specify that they want multiple windows open when screen is first run.  Eg.</p>\n\n<pre><code>screen -t myWindowA 0 \"\" \nscreen -t myWindowB 1 \"-${SHELL}\" \nscreen -t myWindowC 2 \"-${SHELL}\"\n</code></pre>\n\n<p>What I would like is for each window to run some commands first, like:</p>\n\n<pre><code>screen -t myWindowA 0 \"&lt;go to directory a, source a.sh\" \nscreen -t myWindowB 1 \"-${SHELL} &lt;go to directory b, source b.sh&gt;\" \nscreen -t myWindowC 2 \"-${SHELL} &lt;go to directoy c; start a watch on `ls -l`&gt;\"\n</code></pre>\n\n<p>Is there any way to do that?</p>\n\n<p>Note this is similar to, but different from <a href=\"http://askubuntu.com/questions/10186/execute-command-on-gnu-screen-attachment\">this issue</a>.</p>\n"}]}]