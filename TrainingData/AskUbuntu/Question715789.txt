[{"id":715789,"title":"Cuda 5.2 in Matlab R2015b and 15.10?","body":"<p>I want to get Cuda 5.2 computation work in Matlab R2015b of Ubuntu 15.10 with the mimimal settings of GTX 9** GPUs. \nI failed to run Cuda 5.2 in Matlab R2015b of Ubuntu 14.04 described in the thread <a href=\"http://askubuntu.com/q/715556/25388\">Cuda 5.2 in Matlab R2015b and 14.04?</a> where no clear understanding of the communication between GPU and Matlab R2015b. \nI am now doing the similar tests in 15.10 where should exist better driver support for the GTX 9** GPUs. \nTest code</p>\n\n<pre><code>X = rand(10,'single');\nG = gpuArray(X);\nclassUnderlying(G);\n</code></pre>\n\n<h2>Output with the Official drivers in Dep packages</h2>\n\n<p>I get from the second line initially</p>\n\n<pre><code>Error using gpuArray\nNo supported GPU device was found on this computer. To\nlearn more about supported GPU devices, see\nwww.mathworks.com/gpudevice.\n</code></pre>\n\n<p>but after several <code>sudo apt-get update &amp;&amp; reboot</code> getting similarly as in 14.04</p>\n\n<pre><code>Error using gpuArray\nAn unexpected error occurred during CUDA execution. The\nCUDA error was:\nCUDA_ERROR_UNKNOWN\n</code></pre>\n\n<p>This suggests me that I have a problem with drivers in my Ubuntu 15.10. \nI use GTX 960 in all tests but the whole family of Nvidia GTX 9* should behave similarly. </p>\n\n<h2>Nouveau packages</h2>\n\n<p>Instructions in the project homepage <a href=\"http://nouveau.freedesktop.org/\" rel=\"nofollow\">nouveau.freedesktop.org</a> are utterly outdated in the post <a href=\"http://nouveau.freedesktop.org/wiki/UbuntuTips/\" rel=\"nofollow\">UbuntuTips</a> which are only for 11.04. </p>\n\n<h2>Unsuccessful settings in 15.10 by official dep packages</h2>\n\n<p>To avoid complications from other packages, I run <code>sudo apt-get purge nvidia-*</code> before each installation. \nNecessary: <code>libcuda1-352 nvidia-settings</code>.\nOther additional packages</p>\n\n<ol>\n<li><p><code>nvidia-352 nvidia-libopencl1-352 nvidia-opencl-icd-352</code> </p></li>\n<li><p><code>build-essential nvidia-cuda-toolkit</code></p></li>\n</ol>\n\n<p>where each setup gives the output at the top. </p>\n\n<h2>Minimal nvidia-settings</h2>\n\n<p>Set OS use motherboard's graphics and Matlab use the GPU. \nThis way the minimal settings of Nvidia are possible, depending on CPU and BIOS. \nHowever, the shared GPU by OS and Matlab would be the preferred solution. </p>\n\n<hr>\n\n<p>How can you run Cuda 5.2 of Matlab R2015b in Ubuntu 15.10?</p>\n","related_questions":[{"id":715515,"title":"To monitor characteristics of GPU in 14.04-15.10?","body":"<p>I am doing computation between CPU and GPU. \nI would like to know how well my CUDA computation performs in GTX 960 with Matlab R2015b (also testing with R2016a review). \nThere are some trends which I would like to study continuously by statistical analysis to cut out any tweaks fast in the GPU driver. </p>\n\n<p>My proposals of the quantities based on <code>lm-sensors hddtemp psensor</code> described in <a href=\"http://sourcedigit.com/16049-install-psensor-checkmonitor-laptop-cpu-temperature-in-ubuntu-15-04-ubuntu-14-04/\" rel=\"nofollow\">How To Check Laptop CPU Temperature in Ubuntu 15.04 &amp; Ubuntu 14.04</a></p>\n\n<ul>\n<li>GPU temp, </li>\n<li>GPU memory load, </li>\n<li>GPU graphics load, </li>\n<li>GPU video load, and </li>\n<li>GPU PCIe load, </li>\n</ul>\n\n<p>where I need an API. \n<code>lm-sensors hddtemp psensor</code> where <code>psensor</code> has descent GUI. \nIt works more robust than with alexmurray's application and has also the wanted GPU monitoring of each units. \nI could not find any APIs to do statistical analysis with R with GPU sensors. </p>\n\n<hr>\n\n<p>How can you support GPU monitoring in Ubuntu 14.04-15.10?</p>\n"},{"id":715556,"title":"Cuda 5.2 in Matlab R2015b and 14.04?","body":"<p>Test code</p>\n\n<pre><code>X = rand(10,'single');\nG = gpuArray(X);\nclassUnderlying(G);\n</code></pre>\n\n<p>but I get from the second line</p>\n\n<pre><code>Error using gpuArray\nAn unexpected error occurred during CUDA execution. The CUDA error was:\nCUDA_ERROR_UNKNOWN\n</code></pre>\n\n<p>This suggests me that I have a problem with drivers in my Ubuntu 14.04. </p>\n\n<h2>Unsuccessful settings in 14.04</h2>\n\n<p>To avoid complications from other packages, I run <code>sudo apt-get purge nvidia-*</code> before each installation. </p>\n\n<ol>\n<li><p><code>build-essential nvidia-cuda-toolkit libcuda1-352 nvidia-libopencl1-352 nvidia-opencl-icd-352 nvidia-352</code></p></li>\n<li><p><code>nvidia-current nvidia-settings</code></p></li>\n</ol>\n\n<p>I think I have a dependency problem. \nI am using GTX 960. \nI heard that only Ubuntu 15.04 has drivers for Nvidia 9** at the moment. </p>\n\n<p>I think there is no descent support for GPU and Matlab in 14.04. \nThe situation seems to be much more robust in 15.10 with Matlab because of official and noveau support. \nA separate case about it in the thread <a href=\"http://askubuntu.com/q/715789/25388\">Cuda 5.2 in Matlab R2015b and 15.10?</a></p>\n\n<hr>\n\n<p>Which packages are only necessary to run the test code with Cuda 5.2 in Matlab R2015b?</p>\n"},{"id":693145,"title":"Installing CUDA 7.5 toolkit on Ubuntu 15.10","body":"<p>I wanna share my experience on installing CUDA 7.5 (in order to use with Theano) on Ubuntu 15.10. </p>\n\n<ol>\n<li><p>I installed Ubuntu 15.10 and the video driver (352.41) from the \"Additional Drivers\" tab;</p></li>\n<li><p>Installed few dependencies like <code>nvidia-modprobe</code> (fix permissions problems), and for the samples compiling <code>freeglut3-dev libx11-dev libxmu-dev libxi-dev libglu1-mesa-dev</code></p></li>\n<li><p>And because it needs GCC 4.9: <code>sudo apt-get install gcc-4.9 g++-4.9</code>, then made symlinks in <code>/opt/compiler_cuda</code>(created the folder with an arbitrary name of my choice) as follows:<br/>\n<code>$ ls -la /opt/compiler_cuda/</code><br/>\n<code>lrwxrwxrwx 1 root root   22 Nov  2 16:14 cc -&gt; /opt/compiler_cuda/gcc</code><br/>\n<code>lrwxrwxrwx 1 root root   16 Nov  2 16:13 g++ -&gt; /usr/bin/g++-4.9</code><br/>\n<code>lrwxrwxrwx 1 root root   16 Nov  2 16:12 gcc -&gt; /usr/bin/gcc-4.9</code><br/>\nRegistered <code>update-alternatives</code> with:<br/>\n<code>sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 60 --slave /usr/bin/g++ g++ /usr/bin/g++-5</code><br/>\n<code>sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 50 --slave /usr/bin/g++ g++ /usr/bin/g++-4.9</code><br/></p></li>\n<li><p>Downloaded \"runfile (local)\" 15.04 version, from <a href=\"https://developer.nvidia.com/cuda-downloads\">CUDA 7.5 Downloads</a>; and installed with:<br/>\n<code>sudo sh cuda_7.5.18_linux.run --silent --toolkit --override</code><br/>\n<code>sudo sh cuda_7.5.18_linux.run --silent --samples --override</code><br/>\nand appended in <code>.bash_aliases</code> (.bashrc reads it):<br/>\n<code>export PATH=/usr/local/cuda-7.5/bin:$PATH</code><br/>\n<code>export LD_LIBRARY_PATH=/usr/local/cuda-7.5/lib64:$LD_LIBRARY_PATH</code></p></li>\n<li><p>Appended <code>compiler-bindir = /opt/compiler_cuda</code> in <code>nvcc.profile</code>, so nvcc can use it.</p></li>\n</ol>\n\n<p>And possibly someone can tell me if I'm going to fry my card for using wrong toolkit version?!</p>\n"},{"id":689134,"title":"Installing Nvidia drivers and CUDA","body":"<p>I am a beginner on Ubuntu and want to install CUDA on Ubuntu 14.04 for running some parallel code for my projects. But I am stuck at this point. </p>\n\n<p>When I run this command on the terminal <br></p>\n\n<pre><code>lspci | grep VGA\n</code></pre>\n\n<p>It shows <br> </p>\n\n<pre><code>00:02.0 VGA compatible controller: Intel Corporation 3rd Gen Core processor Graphics Controller (rev 09)\n</code></pre>\n\n<p><br>It does not even shows my graphics card. But when I run <br></p>\n\n<pre><code>lspci -v\n</code></pre>\n\n<p>It shows a number of details including <br></p>\n\n<pre><code>01:00.0 3D controller: NVIDIA Corporation GK208M [GeForce GT 740M] (rev ff) (prog-if ff)\n!!! Unknown header type 7f\n</code></pre>\n\n<p><br>Also when I run the 'details' on my operating system, it shows<br>\nProcessor : Intel® Core™ i5-3337U CPU @ 1.80GHz × 4 <br>\nGraphics : Intel® Ivybridge Mobile<br>\nOS type : 64-bit<br></p>\n\n<p>But when I run 'Additional Drivers' on my operating system, it shows<br>\nNVIDIA Corporation : GK208M [GeForce GT740M]<br>\nUsing NVIDIA binary driver - version 352.39 from nvidia-352 <br></p>\n\n<p>When I run the command <br></p>\n\n<pre><code>dpkg -l | grep -i nvidia\n</code></pre>\n\n<p>It shows the following output<br></p>\n\n<pre><code>ii  bbswitch-dkms                                         0.7-2ubuntu1                                        amd64        Interface for toggling the power on nVidia Optimus video cards\nii  bumblebee                                             3.2.1-5                                             amd64        NVIDIA Optimus support for Linux\nii  bumblebee-nvidia                                      3.2.1-5                                             amd64        NVIDIA Optimus support using the proprietary NVIDIA driver \nrc  libcuda1-304                                          304.128-0ubuntu0.0.1                                amd64        NVIDIA CUDA runtime library\nii  libcuda1-352                                          352.39-0ubuntu1                                     amd64        NVIDIA CUDA runtime library\nrc  nvidia-304                                            304.128-0ubuntu0.0.1                                amd64        NVIDIA legacy binary driver - version 304.128\nii  nvidia-352                                            352.39-0ubuntu1                                     amd64        NVIDIA binary driver - version 352.39\nii  nvidia-352-dev                                        352.39-0ubuntu1                                     amd64        NVIDIA binary Xorg driver development files\nii  nvidia-352-uvm                                        352.39-0ubuntu1                                     amd64        Transitional package for nvidia-352\nrc  nvidia-libopencl1-304                                 304.125-0ubuntu0.0.1                                amd64        NVIDIA OpenCL Driver and ICD Loader library\nii  nvidia-modprobe                                       352.39-0ubuntu1                                     amd64        Load the NVIDIA kernel driver and create device files\nrc  nvidia-opencl-icd-304                                 304.128-0ubuntu0.0.1                                amd64        NVIDIA OpenCL ICD\nii  nvidia-opencl-icd-352                                 352.39-0ubuntu1                                     amd64        NVIDIA  OpenCL ICD\nii  nvidia-settings                                       352.39-0ubuntu1                                     amd64        Tool for configuring the NVIDIA graphics driver\nii  primus                                                0~20131127-2                                        amd64        client-side GPU offloading for NVIDIA Optimus\n</code></pre>\n\n<p>I think this means that I have the drivers installed but my GPU is not being detected.</p>\n\n<p>Some things that I have already done are installing cuda on this system\nI have already installed the deb package using the following commands</p>\n\n<pre><code>sudo dpkg -i cuda-repo-ubuntu1404_7.5-18_amd64.deb \nsudo apt-get update \nsudo apt-get install cuda\n</code></pre>\n\n<p>But now when I run any of the samples, like devicequery, it shows</p>\n\n<pre><code>cudaGetDeviceCount returned 38\n-&gt; no CUDA-capable device is detected\n</code></pre>\n\n<p>I have been through a number of other discussions but they are beyond my level of understanding. Can anybody please suggest what I should do next because I really need to install CUDA on this system. Thanks in advance</p>\n"},{"id":674537,"title":"Black Screen with Cursor after installing CUDA 7.5 on 14.04","body":"<p>I have been setting up a deep learning machine using a GTX 980 Ti and have been attempting to install CUDA on my system. </p>\n\n<p>I installed both the <a href=\"http://www.nvidia.com/download/driverResults.aspx/90279/en-us\" rel=\"nofollow\">352.41</a> display driver and <code>cuda_7.5.18_linux.run</code> from <a href=\"https://developer.nvidia.com/cuda-downloads\" rel=\"nofollow\">here</a>. I got both up and running just fine, the system booted without any issues. However, when I came back to start compiling the CUDA samples I was met with the following warnings on some of the package installs:</p>\n\n<blockquote>\n  <p>WARNING: libGLU.so not found</p>\n  \n  <p>WARNING: libX11.so not found </p>\n</blockquote>\n\n<p>I followed the instructions on the <a href=\"http://docs.nvidia.com/cuda/cuda-getting-started-guide-for-linux/#download-nvidia-driver-and-cuda-software\" rel=\"nofollow\">getting started with CUDA on linux</a> page and tried to install <code>libGLU.so</code> with the following command:</p>\n\n<pre><code>sudo apt-get install libglu1-mesa libxi-dev libxmu-dev\n</code></pre>\n\n<p>This didn't work so I then tried to install the mesa implementation using the following:</p>\n\n<pre><code>sudo apt-get install libglapi-mesa &amp;&amp; sudo apt-get install libosmesa6\n</code></pre>\n\n<p>This worked, I could now compile all of the CUDA samples. However, I'm thinking that this is where the error is originating from. I've included everything else I did before poweroff for reference</p>\n\n<p>After this I started building the necessary dependencies for <a href=\"http://caffe.berkeleyvision.org/installation.html\" rel=\"nofollow\">Caffe</a>. I installed <code>BLAS</code> and started installing dependencies for <a href=\"http://docs.opencv.org/doc/tutorials/introduction/linux_install/linux_install.html\" rel=\"nofollow\">OpenCV</a> using the folling commands:</p>\n\n<p><strong>BLAS</strong></p>\n\n<pre><code>sudo apt-get install libblas-dev\nsudo apt-get install libblas-doc\n</code></pre>\n\n<p><strong>OpenCV Dependencies</strong></p>\n\n<pre><code>sudo apt-get install build-essential\nsudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev\nsudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev\n</code></pre>\n\n<p>At this point I had to step aside and do something else. So I powered off and came back the next day to the system booting into a black screen with a cursor (driver failure). </p>\n\n<p>I went into text mode and purged my nvidia drivers and reinstalled. I was then greeted by the error of not being able to log in past the the login screen (flashing black screen, then brought back to the login prompt).</p>\n\n<p>At this point I'm thinking of putting up a fresh ubuntu install, but I'd still like to try and figure out what went wrong before I throw in the towel.</p>\n"},{"id":668130,"title":"Ubuntu not starting post cuda installation","body":"<p>I am running Ubuntu 14.04 alongside windows 8.1 on an HP Envy 15 laptop having Nvidia gtx 850m graphic card. I was trying to setup the cuda programming environment as given here</p>\n\n<p><a href=\"https://www.udacity.com/wiki/cs344/ubuntu-dev\" rel=\"nofollow\">https://www.udacity.com/wiki/cs344/ubuntu-dev</a></p>\n\n<p>in the Ubuntu text only mode (obtained by the Ctrl+Alt+F1 combination)</p>\n\n<p>For the cuda installation file, I downloaded the <code>cuda_7.0.28_linux.run</code> for ubuntu 14.04. When I executed the file, it reported some error (which I don't remember). However, on searching online, I found a solution which asked to stop the <code>lightdm</code> service and then execute the file. I did so and the installation worked perfectly fine. However, I did not restart the <code>lightdm</code> service and tried to switch from the ubuntu text mode to the GUI mode. On pressing the combo <code>Ctrl+Alt+F7</code> the screen went dark with a cursor blinking on left hand top. After waiting for a while, I forced shutdown using the power button. </p>\n\n<p>When I rebooted, I was stuck in the Ubuntu login loop problem. After extensive searching , I tried the following steps</p>\n\n<p>a) dpkg reconfigure lightdm</p>\n\n<p>b) remove and reinstall lightdm</p>\n\n<p>c) install gdm and set it as default manager (for the concerned process)</p>\n\n<p>However, none helped. </p>\n\n<p>But after certain attempts, even the login screen stopped appearing. Now there is a black screen with a cursor on left hand top. After a few seconds, the screen seemingly refreshes and again the cursor starts blinking. </p>\n\n<p>Now, is there any solution by which I get my ubuntu working without having to reinstall a fresh copy? Please help!! </p>\n"},{"id":654229,"title":"Setup in Ubuntu 14.04 for debugging CUDA code","body":"<p>I'm trying to set my machine with Ubuntu 14.04 (3.13.0-59) for <strong>debugging CUDA code</strong>. I have an nVidia discrete card and an integrated GPU.</p>\n\n<p>The plan is to have the <strong>display connected to the integrated GPU</strong> while the CUDA code gets executed and debugged. For that I need to have the nVidia driver installed.</p>\n\n<p>I did that with the display connected to the discrete card and it disabled my nouveau driver. Now, I switched the display to the integrated card and I cannot login anymore using the GUI. I can login fine from the console.</p>\n\n<p>Checking out the .xsession-errors gives me: <em>Xlib: extension \"GLX\" missing on display \":0\"</em></p>\n\n<p>The main issue I have is that I need both the nVidia Driver and Nouveau Driver working in parallel for this.</p>\n\n<p>Is this possible on Ubuntu 14.04? Windows does this with no problem. I'm thinking there must be a workaround for this on Linux.</p>\n"},{"id":652975,"title":"Errors installing CUDA development libraries on Ubuntu 14.04","body":"<p>I'm having some trouble getting the CUDA development environment up and running on Ubuntu 14.04.  I initially tried using the <code>nvidia-cuda-toolkit</code> package from the repository, and although everything <em>appeared</em> to install correctly, a simple example where I initialized an array on the host, copied to the device, and copied back to a new array on the host, gave me uninitialized data.  I asked about this on StackOverflow, and they suggested that I hadn't gotten my installation working properly (the example worked for them).</p>\n\n<p>So, I started from scratch, going by the <a href=\"http://developer.download.nvidia.com/compute/cuda/7_0/Prod/doc/CUDA_Getting_Started_Linux.pdf\" rel=\"nofollow\">Linux Installation Guide</a>, but I seem to have flubbed it all up.  This time around I've run into an error at the <code>$ sudo apt-get install cuda</code> step.  I've noted down all the steps I took to get to the error:</p>\n\n<ul>\n<li>I seem to have a compatible device...  </li>\n</ul>\n\n<pre class=\"lang-bsh prettyprint-override\"><code>$ lspci | grep -i nvidia\n\n01:00.0 VGA compatible controller: NVIDIA Corporation GF106GL [Quadro 2000] (rev a1)\n01:00.1 Audio device: NVIDIA Corporation GF106 High Definition Audio Controller (rev a1)\n</code></pre>\n\n<ul>\n<li><code>gcc --version</code> is <code>4.8.4</code> (<code>4.8.2</code> is required)</li>\n<li>I'm running a supported version of Linux (Ubuntu 14.04, x86_64)  </li>\n<li>Downloaded <a href=\"https://developer.nvidia.com/cuda-downloads?sid=898691\" rel=\"nofollow\">CUDA 7</a> for Ubuntu 14.04 (Local Package Installer)  </li>\n<li>Since I've tried installing a few times already, I thought I would need to uninstall--but the uninstall scripts mentioned <a href=\"http://developer.download.nvidia.com/compute/cuda/7_0/Prod/doc/CUDA_Getting_Started_Linux.pdf\" rel=\"nofollow\">here</a> (pages 6 to 7) weren't there, oddly.  So I removed the CUDA directory from <code>/usr/local/</code> and ran <code>$ sudo apt-get --purge remove nvidia-*</code> instead.</li>\n<li><code>$ sudo dpkg -i cuda-repo-ubuntu1404-7-0-local_7.0-28_amd64.deb</code> ran without errors...</li>\n<li>...as did <code>$ sudo apt-get update</code></li>\n</ul>\n\n<p><strong>HOWEVER</strong>  </p>\n\n<p>Running <code>$ sudo apt-get install cuda</code> said gave me an unmet dependencies error:</p>\n\n<blockquote>\n  <p>Reading package lists... Done Building dependency tree        Reading\n  state information... Done cuda is already the newest version. You\n  might want to run 'apt-get -f install' to correct these: The following\n  packages have unmet dependencies.  cuda-drivers : Depends:\n  nvidia-opencl-icd-346 (>= 346.46) but it is not going to be installed\n  E: Unmet dependencies. Try 'apt-get -f install' with no packages (or\n  specify a solution).</p>\n</blockquote>\n\n<p>I ran <code>$ sudo apt-get -f install</code>, as it suggested, but then I get another error:</p>\n\n<blockquote>\n  <p>Preparing to unpack\n  .../nvidia-opencl-icd-346_346.46-0ubuntu1_amd64.deb ... Unpacking\n  nvidia-opencl-icd-346 (346.46-0ubuntu1) ... dpkg: error processing\n  archive\n  /var/cuda-repo-7-0-local/./nvidia-opencl-icd-346_346.46-0ubuntu1_amd64.deb\n  (--unpack):  trying to overwrite '/etc/OpenCL/vendors/nvidia.icd',\n  which is also in package nvidia-opencl-icd-331 331.113-0ubuntu0.0.4\n  Errors were encountered while processing: \n  /var/cuda-repo-7-0-local/./nvidia-opencl-icd-346_346.46-0ubuntu1_amd64.deb\n  E: Sub-process /usr/bin/dpkg returned an error code (1)</p>\n</blockquote>\n\n<p>I'm disconcerted that \"CUDA is already at its newest version\" after removing the directory from <code>/usr/local</code> and purging the package manager.  Also, I tried installing the offending OpenCL package (nvidia-opencl-icd-346) separately, but there was a non-zero exit status.</p>\n\n<p>Thanks in advance for your help!</p>\n"},{"id":553098,"title":"Setting up fresh Ubuntu install for programming assignment - Nvidia, CUDA, NSight","body":"<p>I have been having a tough time setting up an environment to run a specific software in and it has come down to getting a fresh HDD to install linux on. I am trying to modify a software called Cura specifically the <a href=\"https://github.com/Ultimaker/CuraEngine\" rel=\"nofollow\">CuraEngine</a>. It was developed under linux and has dependencies that I could not fulfil on windows (from what I understand). So I am specifically installing a linux based system. I then need to install CUDA; I have a Nvidia 750Ti installed in the machine. I plan to write some kernels to accelerate the 3DModel -> G-code generation process for the project. </p>\n\n<p>I have tried quite a few times now to get this working but the process always breaks down after I install the nvidia drivers. I have been using the method <a href=\"http://www.binarytides.com/install-nvidia-drivers-ubuntu-14-04/\" rel=\"nofollow\">described here</a> to install along with trying from the <a href=\"https://developer.nvidia.com/cuda-downloads\" rel=\"nofollow\">CUDA toolkit</a> download. For the second method I have had to shutdown <code>lightdm</code> and run the <code>.run</code> from the command line to get the drivers installed. All attempts have been from fresh installs of Ubuntu also. </p>\n\n<p>Each attempt results in the driver being installed (from what I can tell, no errors upon install), but upon restarting the computer and a login the background of the desktop and the mouse appear but nothing else, I can <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>F1</kbd> to a terminal. Worth noting right now maybe, that before the drivers are installed the shortcut <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>F1</kbd> displays a black screen but after the install and a reboot it works though I can't login properly. So I assume the driver has been installed and is running but I am not sure how to check properly. I ran the command in step 5 of the <a href=\"http://www.binarytides.com/install-nvidia-drivers-ubuntu-14-04/\" rel=\"nofollow\">install guide</a> I'm using but my machine did not display the desired result of \"Kernel driver in use: Nvidia\".</p>\n\n<p>To try and fix this issue I tried to use <code>sudo apt-get purge nvidia-current</code> and rebooted but still couldn't login. I also tried <code>unity --replace</code> and received errors pertaining to an \"OpenGL module\". </p>\n\n<p>I currently am now at the point of an install seen below, also under \"System -> Software &amp; Updates -> Addditional Drivers\" it shows no additional drivers. \n<img src=\"http://i.stack.imgur.com/pwjKa.png\" alt=\"enter image description here\"></p>\n\n<p>Now this is the point at the install that I would restart and try to log back in and see if NSight Eclipse would recognize my GPU as a CUDA enabled device. But I am afraid I will not be able to log back in as usual. </p>\n\n<p>In there something I can do right now that would be easier than essentially blocking myself out? Why am I being blocked out? What should my next steps be?</p>\n\n<p>EDIT: Because I can use <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>F1</kbd> to get to a terminal I also managed to install <code>ccsm</code> and set the unity plugin to installed, which failed to solve the problem. But as I tried to find the link I used I <a href=\"http://askubuntu.com/questions/204428/unity-missing-cant-see-top-or-side-panels\">found this link</a> and it looks like it might solve the problem of seeing the desktop. I am going to try it. </p>\n\n<p>I also just realized that I can probably re-run the test in step 5 of manual linked above to check if the driver installed worked after the reboot. </p>\n\n<p>EDIT2: Running the command <code>dconf reset -f /org/compiz/</code> from the first edit displays an error from \"Cannot autolaunch D-Bus without X11 $DISPLAY\". As for the tests from the 5th step. On the first the output from the <code>lspci -vnn | grep -i VGA -A 12</code> is too long and I am not sure how to scroll up I'm a newb. For the second <code>glxinfo | grep OpenGL | grep render</code> returns an error \"Unable to open display\". </p>\n\n<p>I am not sure what the command specifically does but I have seen it in some of the links today <code>export DISPLAY=:0</code>. I ran this and then ran the <code>dconf reset -f /org/compiz/</code> successfully but <code>setsid unity</code> errors saying \"Plugin opengl not loaded, Plugin init failed: unityshell\" ... \" Compiz (opengl) - Fatal: glxQueryExtensionString is NULL for screen 0\".</p>\n"},{"id":515392,"title":"CUDA 6.5 not performing any computation under Ubuntu 14.04 64bit","body":"<p>I've installed CUDA 6.5 on my system (I did not want to use 5.5 since there are some features after version 6 that I need).</p>\n\n<p>My system is a Notebook with an NVIDIA GPU, namely</p>\n\n<pre><code> lspci | grep -i  \n nvidia 03:00.0 3D controller: NVIDIA Corporation\n GM108M [GeForce 840M] (rev a2)\n</code></pre>\n\n<p>I assume, that I installed CUDA correctly since I did not get any errors during the installation, and this seems to be correct</p>\n\n<pre><code> nvcc --version\n nvcc: NVIDIA (R) Cuda compiler driver Copyright (c) 2005-2014 NVIDIA\n Corporation Built on Thu_Jul_17_21:41:27_CDT_2014 Cuda compilation\n tools, release 6.5, V6.5.12\n</code></pre>\n\n<p>NSight is also there. </p>\n\n<p>I am able to compile simple examples and run them, however, there is no GPU computation performed and also no device detected ( cudaGetDeviceCount=0 ). I'm using the example presented <a href=\"http://computer-graphics.se/hello-world-for-cuda.html\" rel=\"nofollow\">here at this website.</a> But instead of printing \"Hello World\", I get \"Hello Hello\". This lets me assume, that the computation on the kernel simply does not happen.</p>\n\n<p>I don't know if this is strange:</p>\n\n<pre><code>nvidia-smi\nSun Aug 24 13:00:55 2014       \n+------------------------------------------------------+                       \n| NVIDIA-SMI 340.32     Driver Version: 340.32         |                       \n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|===============================+======================+======================|\n|   0  GeForce 840M        Off  | 0000:03:00.0     N/A |                  N/A |\n| N/A   48C    P0    N/A /  N/A |    480MiB /  2047MiB |     N/A      Default |\n+-------------------------------+----------------------+----------------------+\n\n+-----------------------------------------------------------------------------+\n| Compute processes:                                               GPU Memory |\n|  GPU       PID  Process name                                     Usage      |\n|=============================================================================|\n|    0            Not Supported                                               |\n+-----------------------------------------------------------------------------+\n</code></pre>\n\n<p>Why does it say Not Supported for Compute processes?</p>\n\n<p>I would like to know if I forgot to configure something for CUDA to work properly. </p>\n\n<p>I <strong>REALLY</strong> want to avoid reinstalling NVIDIA drivers for my GPU since this has caused a lot of problems in the past. I'm afraid I could destroy something.</p>\n\n<p>Here's an image of my NVIDIA settings.</p>\n\n<p><img src=\"http://i.stack.imgur.com/nDOXh.png\" alt=\"enter image description here\"></p>\n\n<p>and additionally</p>\n\n<pre><code>uname -a\nLinux Zenbook 3.13.0-34-generic #60-Ubuntu SMP Wed Aug 13 15:45:27 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre>\n\n<p>If you need further information, please let me know. Thank you very much!</p>\n"}]}]