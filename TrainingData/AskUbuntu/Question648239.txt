[{"id":648239,"title":"Odoo (OpenERP) start-stop-daemon script","body":"<p>I installed odoo and try manual start openerp-server. All ok. My next step it's try to add odoo to auto start. For this I use this script:</p>\n\n<pre><code>#!/bin/sh\n\n### BEGIN INIT INFO\n# Provides:             openerp-server\n# Required-Start:       $remote_fs $syslog\n# Required-Stop:        $remote_fs $syslog\n# Should-Start:         $network\n# Should-Stop:          $network\n# Default-Start:        2 3 4 5\n# Default-Stop:         0 1 6\n# Short-Description:    Enterprise Resource Management software\n# Description:          Open ERP is a complete ERP and CRM software.\n### END INIT INFO\n\nPATH=/bin:/sbin:/usr/bin\nDAEMON=/opt/odoo/openerp-server\nNAME=openerp-server\nDESC=openerp-server\n\n# Specify the user name (Default: openerp).\nUSER=root\n\n# Specify an alternate config file (Default: /etc/openerp-server.conf).\nCONFIGFILE=\"/etc/openerp-server.conf\"\n\n# pidfile\nPIDFILE=/var/run/$NAME.pid\n\n# Additional options that are passed to the Daemon.\nDAEMON_OPTS=\"-c $CONFIGFILE\"\n\n[ -x $DAEMON ] || exit 0\n[ -f $CONFIGFILE ] || exit 0\n\ncheckpid() {\n    [ -f $PIDFILE ] || return 1\n    pid=`cat $PIDFILE`\n    [ -d /proc/$pid ] &amp;&amp; return 0\n    pid=`cat $PIDFILE`\n    [ -d /proc/$pid ] &amp;&amp; return 0\n    return 1\n}\n\ncase \"${1}\" in\n        start)\n                echo -n \"Starting ${DESC}: \"\n\n                start-stop-daemon --start --quiet --pidfile ${PIDFILE} \\\n                        --chuid ${USER} --background --make-pidfile \\\n                        --exec ${DAEMON} -- ${DAEMON_OPTS}\n\n                echo \"${NAME}.\"\n                ;;\n\n        stop)\n                echo -n \"Stopping ${DESC}: \"\n\n                start-stop-daemon --stop --quiet --pidfile ${PIDFILE} \\\n                        --oknodo\n\n                echo \"${NAME}.\"\n                ;;\n\n        restart|force-reload)\n                echo -n \"Restarting ${DESC}: \"\n\n                start-stop-daemon --stop --quiet --pidfile ${PIDFILE} \\\n                        --oknodo\n\n                sleep 1\n\n                start-stop-daemon --start --quiet --pidfile ${PIDFILE} \\\n                        --chuid ${USER} --background --make-pidfile \\\n                        --exec ${DAEMON} -- ${DAEMON_OPTS}\n\n                echo \"${NAME}.\"\n\n                echo \"${NAME}.\"\n                ;;\n\n        *)\n                N=/etc/init.d/${NAME}\n                echo \"Usage: ${NAME} {start|stop|restart|force-reload}\" &gt;&amp;2\n               exit 1\n               ;;\nesac\n\nexit 0\n</code></pre>\n\n<p>When I start script, pid file created but service don't work. Also if I try to stop it, I see msg:</p>\n\n<pre><code>Stopping openerp-server: start-stop-daemon: warning: failed to kill 1204: No such process openerp-server.\n</code></pre>\n\n<p>I don't understand what I do wrong. And my old friend google can't help me.\n<a href=\"https://www.odoo.com/fr_FR/forum/help-1/question/warning-failed-to-kill-30449-no-such-process-23158\" rel=\"nofollow\">this don't help</a></p>\n\n<p>Maybe anybody have solve for this problem?</p>\n","related_questions":[{"id":529898,"title":"Deluge start-up script works but won&#39;t start daemon on startup","body":"<p>I've gone through the instructions <a href=\"http://dev.deluge-torrent.org/wiki/UserGuide/ThinClient\" rel=\"nofollow\">here</a> to configure Deluge, and I've also gone through <a href=\"http://dev.deluge-torrent.org/wiki/UserGuide/Service/DebianUbuntuInitd\" rel=\"nofollow\">these</a> instructions to set up the necessary scripts.</p>\n\n<p>The username I chose for <code>DELUGED_USER</code> was the user name I was logged in with, i.e. the Unity desktop user.</p>\n\n<p>I executed each of the commands as instructed and received no error messages. Upon restart, deluged was not running. When I executed <code>sudo update-rc.d deluge-daemon defaults</code> I got a warning that the entry already exists. Manually executing <code>sudo invoke-rc.d deluge-daemon start</code> works, and I am able to connect.</p>\n\n<p>It appears as though the start-up script will not execute at start-up, however there doesn't appear to be anything wrong with the script as executing it manually successfully starts the daemon.</p>\n\n<p>Any idea why this might be happening?</p>\n"},{"id":656507,"title":"start-stop-daemon not removing old pid file","body":"<p>I have an init script that I've written to start and stop an application as a service. Code is here:</p>\n\n<pre><code>#! /bin/bash\nPID_FILE=/var/run/myservice.pid\ncase \"$1\" in\n  start)\n      echo \"Starting up MyService...\"\n      start-stop-daemon --start -b -m --pidfile $PID_FILE --exec /usr/bin/java -- -cp /path/to/jarfile.jar $CLASS_NAME --config /etc/myService/config.ini\n      cat $PID_FILE\n    ;;\n  stop)\n     echo \"Stopping MyService...\"\n     start-stop-daemon --stop --signal KILL -b -m --pidfile $PID_FILE --exec /usr/bin/java -- -cp /path/to/jarfile.jar $CLASS_NAME --config /etc/myService/config.ini\n    ;;\n  status)\n    start-stop-daemon --status --pidfile $PID_FILE\n    PROC_STATUS=$?\n    echo $PROC_STATUS\n    exit $PROC_STATUS\n    ;;\nesac\n</code></pre>\n\n<p>The service starts and stops fine, but the behaviour I'm noticing is that when I run</p>\n\n<pre><code>sudo service MyService stop\n</code></pre>\n\n<p>the pid file is not removed. When I try to start or restart the service, this is successful - it just writes the new pid to the pid file. Why isn't the pid file removed when the service is properly stopped?</p>\n"},{"id":622124,"title":"How to execute an script as daemon with nohup?","body":"<p>Supose I have a script \"script1.sh\" and I want to execute it as a daemon with nohup and &amp;, and make it be \"waiting\" for a signal. How should I do that?</p>\n"},{"id":608066,"title":"stop couchdb daemon","body":"<p>I have <code>Apache CouchDB</code> installed on Ubuntu 14.04 x64, but I'm not able to stop it.\nI tried all of these</p>\n\n<pre><code>couchdb -d\ncouchdb -k\n</code></pre>\n\n<p>but none works. What I mean is that, when I run the above commands and then check the status using <code>couchdb -s</code>, it returns the promising</p>\n\n<pre><code>Apache CouchDB is not running.\n</code></pre>\n\n<p>Then, if I try to query the web service using <code>curl http://localhost:5984</code>, it returns the usual welcome message</p>\n\n<pre><code>{\"couchdb\":\"Welcome\",\"uuid\":\"f682066cac8371ee6ad994429312b2f8\",\"version\":\"1.6.1\",\"vendor\":{\"version\":\"14.04\",\"name\":\"Ubuntu\"}}\n</code></pre>\n\n<p>Also</p>\n\n<pre><code>$&gt;sudo netstat -tlpn | grep 5984\ntcp        0      0 127.0.0.1:5984          0.0.0.0:*               LISTEN      1272/beam.smp  \nSo, how can I start/stop it? Also, how can I prevent it from automatically start at boot-time?\n</code></pre>\n\n<p>Lastly, scanning the active processes, this is the output:</p>\n\n<pre><code>$&gt;ps aux | grep couchdb\nroot      1022  0.0  0.0  98676   340 ?        Ss   apr09   0:00 su couchdb -c /usr/bin/couchdb\ncouchdb   1272  0.1  0.1 1005024 10600 ?       Ssl  apr09   3:43 /usr/lib/erlang/erts-5.10.4/bin/beam.smp -Bd -K true -A 4 -- -root /usr/lib/erlang -progname erl -- -home /var/lib/couchdb -- -noshell -noinput -os_mon start_memsup false start_cpu_sup false disk_space_check_interval 1 disk_almost_full_threshold 1 -sasl errlog_type error -couch_ini /etc/couchdb/default.ini /etc/couchdb/local.ini -s couch\ncouchdb   1698  0.0  0.0   4440   328 ?        Ss   apr09   0:05 sh -s disksup\n</code></pre>\n"},{"id":543281,"title":"Daemon not running on boot","body":"<p>On an Ubuntu (14.04) VM, I have a simple node server that I want to run on startup. The following script works when invoked just as <code>./noderoot start</code>, but isn't running on startup. The script is</p>\n\n<pre><code>#!/bin/sh\n### BEGIN INIT INFO\n# Provides: noderoot\n# Required-Start: $remote_fs $syslog\n# Required-Stop: $remote_fs $syslog\n# Default-Start: 2 3 4 5\n# Default-Stop: 0 1 6\n# Short-Description: bootin and rootin\n# Description: Start root server on boot\n### END INIT INFO\nexport PATH=$PATH:/usr/bin\nexport NODE_PATH=$NODE_PATH:/home/azureuser/npm/bin\n\ncase \"$1\" in\n  start)\n    forever --sourceDir=/var/www/root -p /var/www/logs app.js\n  ;;\n  stop)\n    forever stop --sourceDir=/var/www/root app.js\n  ;;\n  *)\n    echo \"Usage: /etc/init.d/noderoot {start|stop}\"\n    exit 1\n  ;;\nesac\n\nexit 0\n</code></pre>\n\n<p>This script lives inside <code>/etc/init.d</code> with <code>755</code> for the permissions. I have tried running <code>update-rc.d</code> with the following results:</p>\n\n<pre><code>root@linux-dev:~# update-rc.d noderoot defaults 80\n Adding system startup for /etc/init.d/noderoot ...\n   /etc/rc0.d/K80noderoot -&gt; ../init.d/noderoot\n   /etc/rc1.d/K80noderoot -&gt; ../init.d/noderoot\n   /etc/rc6.d/K80noderoot -&gt; ../init.d/noderoot\n   /etc/rc2.d/S80noderoot -&gt; ../init.d/noderoot\n   /etc/rc3.d/S80noderoot -&gt; ../init.d/noderoot\n   /etc/rc4.d/S80noderoot -&gt; ../init.d/noderoot\n   /etc/rc5.d/S80noderoot -&gt; ../init.d/noderoot\nroot@linux-dev:~# update-rc.d noderoot enable\nupdate-rc.d: warning:  start runlevel arguments (none) do not match noderoot Default-Start values (2 3 4 5)\nupdate-rc.d: warning:  stop runlevel arguments (none) do not match noderoot Default-Stop values (0 1 6)\n Enabling system startup links for /etc/init.d/noderoot ...\n Removing any system startup links for /etc/init.d/noderoot ...\n   /etc/rc0.d/K80noderoot\n   /etc/rc1.d/K80noderoot\n   /etc/rc2.d/S80noderoot\n   /etc/rc3.d/S80noderoot\n   /etc/rc4.d/S80noderoot\n   /etc/rc5.d/S80noderoot\n   /etc/rc6.d/K80noderoot\n Adding system startup for /etc/init.d/noderoot ...\n   /etc/rc0.d/K80noderoot -&gt; ../init.d/noderoot\n   /etc/rc1.d/K80noderoot -&gt; ../init.d/noderoot\n   /etc/rc6.d/K80noderoot -&gt; ../init.d/noderoot\n   /etc/rc2.d/S80noderoot -&gt; ../init.d/noderoot\n   /etc/rc3.d/S80noderoot -&gt; ../init.d/noderoot\n   /etc/rc4.d/S80noderoot -&gt; ../init.d/noderoot\n   /etc/rc5.d/S80noderoot -&gt; ../init.d/noderoot\n</code></pre>\n\n<p>As far as I can tell, this completed successfully. I can start the service by running <code>sudo service noderoot start</code>. However, my executable isn't running when the machine reboots. Is there a way to troubleshoot what's going on? Any particular log file that may shed some light on how to fix this?</p>\n"},{"id":428868,"title":"how to write a script that will execute xampp start and stop","body":"<p>I am trying to write a script that will enable <code>xampp start</code> and <code>xampp stop</code> with the same script without having to write in the terminal everytime.</p>\n\n<p>To start <code>xampp</code>, I write in console :  </p>\n\n<p><code>sudo /opt/lampp/lampp start</code>\n<code>sudo /opt/lampp/lampp stop</code></p>\n\n<p>How to make a script executable which allows <code>xampp</code> to start and stop simultaneously when double clicked ? Any idea is always welcomed.</p>\n"},{"id":490722,"title":"start-stop-daemon keeps editing my shebang making it impossible to run","body":"<p><code>start-stop-daemon --name flaskserver --start --chuid root --exec /root/worker/start.sh</code></p>\n\n<p>start.sh clearly has this line <code>#!/usr/bin</code> but after I run above, it results in <code>!/usr/bin</code> and of course it will complain that it can't run it due to <code>exec format error</code></p>\n\n<p>why is it doing this and how can I make it run the <code>.sh</code> without touching it?</p>\n"},{"id":430291,"title":"error starting service","body":"<p>I just installed openerp by following the guidelines available on google and youtube but when i try to start the service it gives me the following error, can you please suggest what is going wrong.</p>\n\n<pre><code>    &gt; ubuntu@ip-172:~$ openerp-server \n2014-03-06 12:00:35,954 9197 INFO ?\n    &gt; openerp: OpenERP version 7.0-20140306-001044 2014-03-06 12:00:35,955\n    &gt; 9197 INFO ? openerp: addons paths:\n    &gt; /usr/lib/pymodules/python2.7/openerp/addons 2014-03-06 12:00:35,955\n    &gt; 9197 INFO ? openerp: database hostname: localhost 2014-03-06\n    &gt; 12:00:35,955 9197 INFO ? openerp: database port: 5432 2014-03-06\n    &gt; 12:00:35,955 9197 INFO ? openerp: database user: ubuntu 2014-03-06\n    &gt; 12:00:36,441 9197 INFO ? openerp.addons.google_docs.google_docs: GData\n    &gt; lib version `%s GData-Python/2.0.14` detected Exception in thread\n    &gt; Thread-1: Traceback (most recent call last):   File\n    &gt; \"/usr/lib/python2.7/threading.py\", line 551, in __bootstrap_inner\n    &gt;     self.run()   File \"/usr/lib/python2.7/threading.py\", line 504, in run\n    &gt;     self.__target(*self.__args, **self.__kwargs)   File \"/usr/lib/pymodules/python2.7/openerp/service/wsgi_server.py\", line\n    &gt; 436, in serve\n    &gt;     httpd = werkzeug.serving.make_server(interface, port, application, threaded=True)   File\n    &gt; \"/usr/lib/python2.7/dist-packages/werkzeug/serving.py\", line 399, in\n    &gt; make_server\n    &gt;     passthrough_errors, ssl_context)   File \"/usr/lib/python2.7/dist-packages/werkzeug/serving.py\", line 331, in\n    &gt; __init__\n    &gt;     HTTPServer.__init__(self, (host, int(port)), handler)   File \"/usr/lib/python2.7/SocketServer.py\", line 408, in __init__\n    &gt;     self.server_bind()   File \"/usr/lib/python2.7/BaseHTTPServer.py\", line 108, in server_bind\n    &gt;     SocketServer.TCPServer.server_bind(self)   File \"/usr/lib/python2.7/SocketServer.py\", line 419, in server_bind\n    &gt;     self.socket.bind(self.server_address)   File \"/usr/lib/python2.7/socket.py\", line 224, in meth\n    &gt;     return getattr(self._sock,name)(*args) error: [Errno 98] Address already in use\n    &gt; \n    &gt; 2014-03-06 12:00:36,810 9197 INFO ? openerp: OpenERP server is\n    &gt; running, waiting for connections...\n</code></pre>\n\n<p>at the end line it says waiting for connections but it doesn't give me the prompt, I have to use crt+c/z </p>\n"},{"id":34342,"title":"Custom daemon script: works, but does not run at boot / startup","body":"<p>this is Ubuntu 10.10 Maverick.</p>\n\n<p>I have the following shell script in init.d that I want to run as a \"daemon\" (background service with start/stop/restart really) at system startup. There is a symlink in rc3.d. I tried 4 and 5 too. (Ideally this would initialize before graphical login happens and before a user logs in.)</p>\n\n<p>IMPORTANT: the script works 100% as expected and required when testing this with <strong>service MetaLeapDaemon start</strong> and <strong>service MetaLeapDaemon stop</strong>. (This shell script calls a Python program which makes sure the appropriate .pid files are both created at startup and deleted at exit.)</p>\n\n<p>So generally it works fine but now my only issue is why it will not be run at any of the run-levels I tried. I know for sure it isn't run because the log file it normally creates does not get created.</p>\n\n<p>As you can see (by the lack of any uid:gid args in the start-stop-daemon commands) this would currently run only under root, is this forbidden in a default setup?</p>\n\n<p>Here's the script, pretty much your run-off-the-mill daemon script really:</p>\n\n<pre><code>#! /bin/sh\n\nDAEMON=/opt/metaleap/_core/daemon/MetaLeapDaemon.py\nNAME=MetaLeapDaemon\nDESC=\"MetaLeapDaemon\"\n\ntest -f $DAEMON || exit 0\n\nset -e\n\ncase \"$1\" in\n    start)\n        start-stop-daemon --start --pidfile /var/run/$NAME.pid --exec $DAEMON\n        ;;\n    stop)\n        start-stop-daemon --stop --pidfile /var/run/$NAME.pid\n        ;;\n    restart)\n        start-stop-daemon --stop --pidfile /var/run/$NAME.pid\n        sleep 1\n        start-stop-daemon --start --pidfile /var/run/$NAME.pid --exec $DAEMON\n        ;;\n    *)\n        N=/etc/init.d/$NAME\n        echo \"Usage: $N {start|stop|restart}\" &gt;&amp;2\n        exit 1\n        ;;\nesac\n\nexit 0\n</code></pre>\n"},{"id":35642,"title":"Setting the owner of the file created by start-stop-daemon output redirection","body":"<p>I have the following line in do_start() of my custom init script that starts a java application:</p>\n\n<pre><code>start-stop-daemon --background --start --quiet --oknodo --make-pidfile --pidfile $PIDFILE --chdir $SOLR_DIR --chuid $USER --exec $DAEMON -- \\\n$DAEMON_ARGS &gt;&gt;$LOG_DIR/$NAME.log 2&gt;&gt;$LOG_DIR/$NAME.err \n</code></pre>\n\n<p>when expanded, becomes:</p>\n\n<pre><code>start-stop-daemon --background --start --quiet --oknodo --make-pidfile --pidfile /var/run/solr.pid \n--chdir /home/phuihock/src/proj/solr \n--chuid phuihock \n--exec /usr/bin/java \n-- -jar start.jar &gt;&gt;/home/phuihock/src/proj/logs/solr.log 2&gt;&gt;/home/phuihock/src/proj/logs/solr.err\n</code></pre>\n\n<p>The log files created are owned by user root, group root. I'd expect they are owned by the user I set with --chuid, because from the manpage, everything after -- are passed unmodified.</p>\n\n<p>My question is, are all redirects from start-stop-daemon owned by root, and is there a way to change that?</p>\n"}]}]