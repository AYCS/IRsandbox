[{"id":715219,"title":"ssh connection closed right after login â€“ Exit Status -1","body":"<p>I've been getting this error recently from a server that I admin, not sure what is going on. Here's the output of a <code>-vvv</code> login:</p>\n\n<pre><code>ssh -vvv user@server\nOpenSSH_6.9p1, LibreSSL 2.1.8\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 20: Applying options for *\ndebug1: /etc/ssh/ssh_config line 102: Applying options for *\ndebug2: ssh_connect: needpriv 0\ndebug1: Connecting to opensourceopensociety.com [128.199.81.194] port 22.\ndebug1: Connection established.\ndebug1: identity file /Users/Kapziel/.ssh/id_rsa type 1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Kapziel/.ssh/id_rsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Kapziel/.ssh/id_dsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Kapziel/.ssh/id_dsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Kapziel/.ssh/id_ecdsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Kapziel/.ssh/id_ecdsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Kapziel/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Kapziel/.ssh/id_ed25519-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_6.9\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.3\ndebug1: match: OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.3 pat OpenSSH_6.6.1* compat 0x04000000\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to opensourceopensociety.com:22 as 'root'\ndebug3: hostkeys_foreach: reading file \"/Users/Kapziel/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type RSA in file /Users/Kapziel/.ssh/known_hosts:2\ndebug3: load_hostkeys: loaded 1 keys from opensourceopensociety.com\ndebug3: order_hostkeyalgs: prefer hostkeyalgs: ssh-rsa-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-rsa\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: kex_parse_kexinit: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\ndebug2: kex_parse_kexinit: ssh-rsa-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-rsa,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-dss-cert-v00@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,ssh-dss\ndebug2: kex_parse_kexinit: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1,hmac-md5-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1,hmac-md5-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: none,zlib@openssh.com,zlib\ndebug2: kex_parse_kexinit: none,zlib@openssh.com,zlib\ndebug2: kex_parse_kexinit:\ndebug2: kex_parse_kexinit:\ndebug2: kex_parse_kexinit: first_kex_follows 0\ndebug2: kex_parse_kexinit: reserved 0\ndebug2: kex_parse_kexinit: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\ndebug2: kex_parse_kexinit: ssh-rsa,ssh-dss,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: none,zlib@openssh.com\ndebug2: kex_parse_kexinit: none,zlib@openssh.com\ndebug2: kex_parse_kexinit:\ndebug2: kex_parse_kexinit:\ndebug2: kex_parse_kexinit: first_kex_follows 0\ndebug2: kex_parse_kexinit: reserved 0\ndebug1: kex: server-&gt;client chacha20-poly1305@openssh.com &lt;implicit&gt; none\ndebug1: kex: client-&gt;server chacha20-poly1305@openssh.com &lt;implicit&gt; none\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ssh-rsa SHA256:---\ndebug3: hostkeys_foreach: reading file \"/Users/Kapziel/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type RSA in file /Users/Kapziel/.ssh/known_hosts:2\ndebug3: load_hostkeys: loaded 1 keys from opensourceopensociety.com\ndebug3: hostkeys_foreach: reading file \"/Users/Kapziel/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type RSA in file /Users/Kapziel/.ssh/known_hosts:1\ndebug3: load_hostkeys: loaded 1 keys from 128.199.81.194\ndebug1: Host 'opensourceopensociety.com' is known and matches the RSA host key.\ndebug1: Found key in /Users/Kapziel/.ssh/known_hosts:2\ndebug2: set_newkeys: mode 1\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug2: set_newkeys: mode 0\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: Roaming not allowed by server\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug2: key: /Users/Kapziel/.ssh/id_rsa (0x7fefa3700270),\ndebug2: key: /Users/Kapziel/.ssh/id_dsa (0x0),\ndebug2: key: /Users/Kapziel/.ssh/id_ecdsa (0x0),\ndebug2: key: /Users/Kapziel/.ssh/id_ed25519 (0x0),\ndebug1: Authentications that can continue: publickey,password\ndebug3: start over, passed a different list publickey,password\ndebug3: preferred publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Offering RSA public key: /Users/Kapziel/.ssh/id_rsa\ndebug3: send_pubkey_test\ndebug2: we sent a publickey packet, wait for reply\ndebug1: Server accepts key: pkalg ssh-rsa blen 279\ndebug2: input_userauth_pk_ok: fp SHA256:---\ndebug3: sign_and_send_pubkey: RSA SHA256:---\ndebug1: Authentication succeeded (publickey).\nAuthenticated to opensourceopensociety.com ([128.199.81.194]:22).\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug1: Requesting no-more-sessions@openssh.com\ndebug1: Entering interactive session.\ndebug2: callback start\ndebug2: fd 3 setting TCP_NODELAY\ndebug3: ssh_packet_set_tos: set IP_TOS 0x10\ndebug2: client_session2_setup: id 0\ndebug2: channel 0: request pty-req confirm 1\ndebug1: Sending environment.\ndebug3: Ignored env PATH\ndebug3: Ignored env TMPDIR\ndebug3: Ignored env LOGNAME\ndebug3: Ignored env HOME\ndebug3: Ignored env XPC_FLAGS\ndebug3: Ignored env Apple_PubSub_Socket_Render\ndebug1: Sending env LANG = en_NZ.UTF-8\ndebug2: channel 0: request env confirm 0\ndebug3: Ignored env TERM\ndebug3: Ignored env USER\ndebug3: Ignored env SSH_AUTH_SOCK\ndebug3: Ignored env SECURITYSESSIONID\ndebug3: Ignored env DISPLAY\ndebug3: Ignored env XPC_SERVICE_NAME\ndebug3: Ignored env TERM_PROGRAM\ndebug3: Ignored env SHELL\ndebug3: Ignored env ITERM_PROFILE\ndebug3: Ignored env PWD\ndebug3: Ignored env __CF_USER_TEXT_ENCODING\ndebug3: Ignored env ITERM_SESSION_ID\ndebug3: Ignored env SHLVL\ndebug3: Ignored env OLDPWD\ndebug3: Ignored env ZSH\ndebug3: Ignored env PAGER\ndebug3: Ignored env LESS\ndebug1: Sending env LC_CTYPE = en_NZ.UTF-8\ndebug2: channel 0: request env confirm 0\ndebug3: Ignored env LSCOLORS\ndebug3: Ignored env HOMEBREW_GITHUB_API_TOKEN\ndebug3: Ignored env rvm_prefix\ndebug3: Ignored env rvm_path\ndebug3: Ignored env rvm_bin_path\ndebug3: Ignored env _system_type\ndebug3: Ignored env _system_name\ndebug3: Ignored env _system_version\ndebug3: Ignored env _system_arch\ndebug3: Ignored env rvm_version\ndebug3: Ignored env GEM_HOME\ndebug3: Ignored env GEM_PATH\ndebug3: Ignored env MY_RUBY_HOME\ndebug3: Ignored env IRBRC\ndebug3: Ignored env RUBY_VERSION\ndebug3: Ignored env _\ndebug2: channel 0: request shell confirm 1\ndebug2: callback done\ndebug2: channel 0: open confirm rwindow 0 rmax 32768\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: PTY allocation request accepted on channel 0\ndebug2: channel 0: rcvd adjust 2097152\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: shell request accepted on channel 0\nWelcome to Ubuntu 14.04.3 LTS (GNU/Linux 3.13.0-36-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com/\n\n  System information as of Wed Dec 30 19:26:31 EST 2015\n\n  System load:  0.0                Processes:           79\n  Usage of /:   20.3% of 19.56GB   Users logged in:     0\n  Memory usage: 22%                IP address for eth0: 128.199.81.194\n  Swap usage:   0%\n\n  Graph this data and manage this system at:\n    https://landscape.canonical.com/\n\n24 packages can be updated.\n24 updates are security updates.\n\n-------------------------------------------------------------------------------------\nThank you for using DigitalOcean's LAMP Application.\nYour web root is located at /var/www/html and can be seen from http://128.199.81.194/\nThe details of your PHP installation can be seen at http://128.199.81.194/info.php\nYour MySQL root user's password is password\nYou are encouraged to run mysql_secure_installation to ready your server for production.\n-------------------------------------------------------------------------------------\nTo delete this message of the day: rm -rf /etc/motd.tail\nLast login: Wed Dec 30 19:26:31 2015 from *here*\ndebug2: channel 0: rcvd eof\ndebug2: channel 0: output open -&gt; drain\ndebug2: channel 0: obuf empty\ndebug2: channel 0: close_write\ndebug2: channel 0: output drain -&gt; closed\ndebug1: client_input_channel_req: channel 0 rtype exit-signal reply 0\ndebug1: client_input_channel_req: channel 0 rtype eow@openssh.com reply 0\ndebug2: channel 0: rcvd eow\ndebug2: channel 0: close_read\ndebug2: channel 0: input open -&gt; closed\ndebug2: channel 0: rcvd close\ndebug3: channel 0: will not send data after close\ndebug2: channel 0: almost dead\ndebug2: channel 0: gc: notify user\ndebug2: channel 0: gc: user detached\ndebug2: channel 0: send close\ndebug2: channel 0: is dead\ndebug2: channel 0: garbage collecting\ndebug1: channel 0: free: client-session, nchannels 1\ndebug3: channel 0: status: The following connections are open:\n  #0 client-session (t4 r0 i3/0 o3/0 fd -1/-1 cc -1)\n\nConnection to *server* closed.\nTransferred: sent 3664, received 4116 bytes, in 70.2 seconds\nBytes per second: sent 52.2, received 58.7\ndebug1: Exit status -1\n</code></pre>\n\n<p>Here's the .bashrc file:</p>\n\n<pre><code># ~/.bashrc: executed by bash(1) for non-login shells.\n# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)\n# for examples\n\n# If not running interactively, don't do anything\n[ -z \"$PS1\" ] &amp;&amp; return\n\n# don't put duplicate lines in the history. See bash(1) for more options\n# ... or force ignoredups and ignorespace\nHISTCONTROL=ignoredups:ignorespace\n\n# append to the history file, don't overwrite it\nshopt -s histappend\n\n# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)\nHISTSIZE=1000\nHISTFILESIZE=2000\n\n# check the window size after each command and, if necessary,\n# update the values of LINES and COLUMNS.\nshopt -s checkwinsize\n\n# make less more friendly for non-text input files, see lesspipe(1)\n[ -x /usr/bin/lesspipe ] &amp;&amp; eval \"$(SHELL=/bin/sh lesspipe)\"\n\n# set variable identifying the chroot you work in (used in the prompt below)\nif [ -z \"$debian_chroot\" ] &amp;&amp; [ -r /etc/debian_chroot ]; then\n    debian_chroot=$(cat /etc/debian_chroot)\nfi\n\n# set a fancy prompt (non-color, unless we know we \"want\" color)\ncase \"$TERM\" in\n    xterm-color) color_prompt=yes;;\nesac\n\n# uncomment for a colored prompt, if the terminal has the capability; turned\n# off by default to not distract the user: the focus in a terminal window\n# should be on the output of commands, not on the prompt\n#force_color_prompt=yes\n\nif [ -n \"$force_color_prompt\" ]; then\n    if [ -x /usr/bin/tput ] &amp;&amp; tput setaf 1 &gt;&amp;/dev/null; then\n    # We have color support; assume it's compliant with Ecma-48\n    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such\n    # a case would tend to support setf rather than setaf.)\n    color_prompt=yes\n    else\n    color_prompt=\n    fi\nfi\n\nif [ \"$color_prompt\" = yes ]; then\n    PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ '\nelse\n    PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ '\nfi\nunset color_prompt force_color_prompt\n\n# If this is an xterm set the title to user@host:dir\ncase \"$TERM\" in\nxterm*|rxvt*)\n    PS1=\"\\[\\e]0;${debian_chroot:+($debian_chroot)}\\u@\\h: \\w\\a\\]$PS1\"\n    ;;\n*)\n    ;;\nesac\n\n# enable color support of ls and also add handy aliases\nif [ -x /usr/bin/dircolors ]; then\n    test -r ~/.dircolors &amp;&amp; eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n    alias ls='ls --color=auto'\n    #alias dir='dir --color=auto'\n    #alias vdir='vdir --color=auto'\n\n    alias grep='grep --color=auto'\n    alias fgrep='fgrep --color=auto'\n    alias egrep='egrep --color=auto'\nfi\n\n# some more ls aliases\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'\n\nexport WORKON_HOME=$HOME/.virtualenvs\nexport VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python2.7\nsource .bashrc\nsource $HOME/bin/virtualenvwrapper.sh\n\n# Alias definitions.\n# You may want to put all your additions into a separate file like\n# ~/.bash_aliases, instead of adding them here directly.\n# See /usr/share/doc/bash-doc/examples in the bash-doc package.\n\nif [ -f ~/.bash_aliases ]; then\n    . ~/.bash_aliases\nfi\n\n# enable programmable completion features (you don't need to enable\n# this, if it's already enabled in /etc/bash.bashrc and /etc/profile\n# sources /etc/bash.bashrc).\n#if [ -f /etc/bash_completion ] &amp;&amp; ! shopt -oq posix; then\n#    . /etc/bash_completion\n#fi\n</code></pre>\n\n<p>Had a look and there's no <code>exit 0</code> in the file that I can see, which seems to be a common issue with getting kicked right after login on ssh. </p>\n\n<p>Any help would be much appreciated.</p>\n","related_questions":[{"id":676374,"title":"How to disable welcome message after SSH login?","body":"<p>I have changed <code>/etc/issue.net</code>, so I have set a \"personal\" message after typing a username in an SSH terminal. Now I am trying to change the welcome text after successful login.</p>\n\n<p>I have found a lot of posts about the <code>/etc/motd</code> file, but the part \"Welcome to Ubuntu blabla versionnumber and so on\" +  \"* Documentation URL \" is not there?</p>\n\n<p>I just do not want to show OS info in my SSH terminal, I already know what I have installed. :)\nI only want to see my last login. And also not errors; errors belong in a logfile.</p>\n\n<p>Which file do I have to edit?</p>\n"},{"id":657448,"title":"SSH Closes immediately after Login","body":"<p>I use SSH to connect to the server which has worked well for months...then suddenly now when I login the Putty session (and other forms of SHH) simply closes and that's it!!! Any help would be gratefully received. Many thanks!</p>\n"},{"id":653461,"title":"SSH connection refused/error message","body":"<p>I have a setup of systems, where each system has multiple users but only one user is allowed to login to a system at a time through SSH. </p>\n\n<p>I am using \"passwd  -l/-u\" command to lock and unlock users, and allow only one user at a time.</p>\n\n<p>What I need is to tell the other users trying to SSH to a system why they cannot SSH. Currently when the user account is locked and they cannot SSH they only get \"Connection Refused\" message. I want to be able to edit this message to tell them \"Your account is locked and you cannot login before xxxxxxx time\"</p>\n\n<p>What are the possible ways I can achieve this. I have tried googling for this but without any luck.</p>\n\n<p>Thanks.</p>\n"},{"id":649729,"title":"How can I redirect SSH users to another SSH login?","body":"<p>I have a person who will need access to my SSH server, but I want them to have limited access to programs. All they should be using is ssh, to login to another server. My server is an access point to another server. I don't want this user to run programs other than the ssh program they need to get on the other network. </p>\n\n<p>Ideally, when they login, they would be redirected to another SSH login, and not have any other immediate option to do anything else.</p>\n\n<p>No SSH users have root permissions. </p>\n\n<p>How might I be able to set this up?\nI am thinking I can do it with their bashrc files. I'll write a secondary login script that executes when they login. Is there a way for a user to login to an SSH server, and ignore their bashrc file on login?\nIs there a better way I should consider?</p>\n"},{"id":586268,"title":"Passwordless SSH access for root user","body":"<p>I've tried to set this up using information from the following sources:</p>\n\n<p>Passwordless login:\n<a href=\"https://www.youtube.com/watch?v=LlGL-uBSe6M\" rel=\"nofollow\">https://www.youtube.com/watch?v=LlGL-uBSe6M</a></p>\n\n<p>Enabling root login:\n<a href=\"http://askubuntu.com/questions/44418/how-to-enable-root-login\">How to enable root login?</a></p>\n\n<p>When the above two didn't work I turned to:\n<a href=\"http://askubuntu.com/questions/115151/how-to-setup-passwordless-ssh-access-for-root-user\">How to setup passwordless SSH access for root user</a></p>\n\n<p>Despite all that, I'm still not able to log into root from a client machine. It keeps asking me for a password when I try ssh root@server_ip.</p>\n\n<p>Can someone concisely outline the necessary steps to make passwordless login on root work? I understand the risk, but it's necessary for installing a Hadoop distro.</p>\n\n<p><strong>Update: Output from ssh -v. It's not looking in my root folder for my key.</strong></p>\n\n<p><em>user</em>@<em>machine name</em>:~$ ssh root@<em>remote ip</em> -v</p>\n\n<p>OpenSSH_6.6.1, OpenSSL 1.0.1f 6 Jan 2014</p>\n\n<p>debug1: Reading configuration data /etc/ssh/ssh_config</p>\n\n<p>debug1: /etc/ssh/ssh_config line 19: Applying options for *</p>\n\n<p>debug1: Connecting to <em>remote ip</em> [<em>remote ip</em>] port 22.</p>\n\n<p>debug1: Connection established.</p>\n\n<p>debug1: identity file /home/<em>user</em>/.ssh/id_rsa type -1</p>\n\n<p>debug1: identity file /home/<em>user</em>/.ssh/id_rsa-cert type -1</p>\n\n<p>debug1: identity file /home/<em>user</em>/.ssh/id_dsa type -1</p>\n\n<p>debug1: identity file /home/<em>user</em>/.ssh/id_dsa-cert type -1</p>\n\n<p>debug1: identity file /home/<em>user</em>/.ssh/id_ecdsa type -1</p>\n\n<p>debug1: identity file /home/<em>user</em>/.ssh/id_ecdsa-cert type -1</p>\n\n<p>debug1: identity file /home/<em>user</em>/.ssh/id_ed25519 type -1</p>\n\n<p>debug1: identity file /home/<em>user</em>/.ssh/id_ed25519-cert type -1</p>\n\n<p>debug1: Enabling compatibility mode for protocol 2.0</p>\n\n<p>debug1: Local version string SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2ubuntu2</p>\n\n<p>debug1: Remote protocol version 2.0, remote software version \nOpenSSH_6.6.1p1 Ubuntu-2ubuntu2</p>\n\n<p>debug1: match: OpenSSH_6.6.1p1 Ubuntu-2ubuntu2 pat OpenSSH_6.6.1* \ncompat 0x04000000\ndebug1: SSH2_MSG_KEXINIT sent</p>\n\n<p>debug1: SSH2_MSG_KEXINIT received</p>\n\n<p>debug1: kex: server-*client aes128-ctr hmac-md5-etm@openssh.com none\ndebug1: kex: client-*server aes128-ctr hmac-md5-etm@openssh.com none\ndebug1: sending SSH2_MSG_KEX_ECDH_INIT\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY</p>\n\n<p>debug1: Server host key: ECDSA <em>key</em>\ndebug1: Host '<em>remote ip</em>' is known and matches the ECDSA host key.</p>\n\n<p>debug1: Found key in /home/<em>user</em>/.ssh/known_hosts:1</p>\n\n<p>debug1: ssh_ecdsa_verify: signature correct\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: Roaming not allowed by server</p>\n\n<p>debug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug1: SSH2_MSG_SERVICE_ACCEPT received</p>\n\n<p>debug1: Authentications that can continue: publickey,password</p>\n\n<p>debug1: Next authentication method: publickey</p>\n\n<p>debug1: Trying private key: /home/<em>user</em>/.ssh/id_rsa</p>\n\n<p>debug1: Trying private key: /home/<em>user</em>/.ssh/id_dsa</p>\n\n<p>debug1: Trying private key: /home/<em>user</em>/.ssh/id_ecdsa</p>\n\n<p>debug1: Trying private key: /home/<em>user</em>/.ssh/id_ed25519</p>\n\n<p>debug1: Next authentication method: password</p>\n"},{"id":447777,"title":"Tens of thousands of failed/denied SSH login attempts","body":"<p>Recently a few friends and I came up with an idea for an app. To facilitate the creation of it, we set up LAMP on an Ubuntu Server 12.04. This box is running from my home. We've set up 3 user accounts. I'm still pretty new to Linux, but I have a bit of experience from using Ubuntu on my own box.</p>\n\n<p>Today I was playing around with SSH and looking at the logs (I need to learn how to read that information to know how the server is performing, right?) and I saw the strangest thing.</p>\n\n<p>In /var/log/auth.log and /var/log/auth.log.1 I saw a bunch of failed login attempts for 'root' and a few usernames I'm not familiar with. I looked over them and for as far as I can see no user has been authenticated except for the actual users on the system. A lot of the IP-addresses listed seem to be from Russia.</p>\n\n<p>As of now this server contains nothing but a vanilla Ubuntu Server with LAMP, but even so, with the following command:</p>\n\n<pre><code>sudo grep -i fail /var/log/auth.log | wc -l\n</code></pre>\n\n<p>I get 3412 as a result. This seems very excessive for a server that has been up since April 8th. It gets worse, because running the above command on auth.log.1 returns 23075 (!!!!) results.</p>\n\n<p>It seems obvious that people are trying to break into the server. Not that it contains anything of value, but once we start making progress on the app we wouldn't want our intellectual property stolen.</p>\n\n<p>Should I be worried? And what can I do about it?</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>I found some very useful information <a href=\"http://blog.philippklaus.de/2010/02/analyse-illegal-ssh-login-attempts/\" rel=\"nofollow\">here</a> and this allowed me to run a script that splits and sorts all the invalid passwords and invalid users that tried to log in. May come in handy to someone who ended up here through Google!</p>\n"},{"id":268272,"title":"ssh refusing connection with message &quot;no hostkey alg&quot;","body":"<p>My SSH connections worked well, but from last week SSH from my laptop to my board refusing connection. I can make a SSH connection from the board to laptop, but not vice-versa. I tried that with my user and root user and had same issue.</p>\n\n<p>My Laptop is an Ubuntu 12.10 and my board is a Debian 6.</p>\n\n<p>Here is the verbose output of SSH:</p>\n\n<pre>danialbehzadi@danial-HP:~$ ssh -v 192.168.1.2  \nOpenSSH_5.2p1, OpenSSL 1.0.1c 10 May 2012\ndebug1: Reading configuration data /usr/local/etc/ssh_config\ndebug1: Connecting to 192.168.1.2 [192.168.1.2] port 22.\ndebug1: Connection established.  \ndebug1: identity file /home/danialbehzadi/.ssh/identity type -1  \ndebug1: identity file /home/danialbehzadi/.ssh/id_rsa type 1  \ndebug1: identity file /home/danialbehzadi/.ssh/id_dsa type -1  \ndebug1: Remote protocol version 2.0, remote software version OpenSSH_6.0p1 Debian-4  \ndebug1: match: OpenSSH_6.0p1 Debian-4 pat OpenSSH*  \ndebug1: Enabling compatibility mode for protocol 2.0  \ndebug1: Local version string SSH-2.0-OpenSSH_5.2  \ndebug1: SSH2_MSG_KEXINIT sent  \ndebug1: SSH2_MSG_KEXINIT received  \ndebug1: kex: server->client aes128-ctr hmac-md5 none  \ndebug1: kex: client->server aes128-ctr hmac-md5 none  \nno hostkey alg\n</pre>\n"},{"id":387892,"title":"How to deny root SSH login + require SSH key for user?","body":"<p>After reading <a href=\"http://askubuntu.com/questions/27559/how-do-i-disable-remote-ssh-login-as-root-from-a-server\">this similar question</a> I'm unclear how to require SSH keys for <code>user</code>, while denying SSH access to <code>root</code> (key or password). I'll use sudo after logging in as a user if I need to be root.</p>\n\n<p>I know how to require SSH keys:</p>\n\n<pre><code>PermitRootLogin without-password\n</code></pre>\n\n<p>I know how to disable user 'root' from logging in: </p>\n\n<pre><code>PermitRootLogin no\n</code></pre>\n\n<p>I know how to whitelist a user:</p>\n\n<pre><code>AllowUsers user\n</code></pre>\n\n<p>I don't know how to put this all together (or if it's even necessary? - SSH key may be good enough). I would normally solve an answer like this through trial and error, but I'm afraid I'll lock myself out of this server...</p>\n"},{"id":356556,"title":"SSH login problem under 12.04 server edition","body":"<p>I've got problem with ssh login after fresh installment of 12.04 server edition.</p>\n\n<p>Every time it promotes: <code>Authentication Fail</code>, and I am pretty sure my password is OK.</p>\n\n<p>I actually tried several ssh clients and several user names, all fail.</p>\n\n<p>There is no log from <code>/var/log/auth.log</code></p>\n\n<p>And I've enabled PasswordAuthentication in my <code>/etc/ssh/sshd_config</code></p>\n\n<p>Any hint would be a great help.</p>\n\n<p>Thanks</p>\n"},{"id":313007,"title":"Cannot login to server after file permissions change!","body":"<p>I am using Ubuntu server. I ran:</p>\n\n<blockquote>\n  <p>chmod -R 700 /</p>\n</blockquote>\n\n<p>when I was logged in as root. Now when I try to login as my normal user I immediately get kicked out. Is there anyway to log back in to the server whether it is root or whoever so that I can change the permissions? or am I totally screwed? I dont think I have root access enabled in the /etc/ssh/sshd_config file. I do have physical access to the server.  I really need some help here. </p>\n"}]}]