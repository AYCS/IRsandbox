[{"id":668822,"title":"Running apache2 server on ubuntu docker container","body":"<p>I am working on Ubuntu 14.04. I recently started to learn docker and I have a Ubuntu 14.04 container. I want to install and run apache2 on this container to get my hands dirty in cloud and servers. Can someone tell me the commands to run the apache2 server on a specific ip address(with port number) and URL?</p>\n","related_questions":[{"id":633303,"title":"docker container with apache2","body":"<p>I installed docker with the packages <code>docker.io</code> and <code>lxc</code>.\nI wanted to test docker while I create an apache2 webserver. \nI created the container with</p>\n\n<pre><code>sudo docker.io run -i -t -p :8080 ubuntu:14.10 /bin/bash\n</code></pre>\n\n<p>Than I installed apache2 with </p>\n\n<pre><code>apt-get install apache2\n</code></pre>\n\n<p>After I modified the ports.conf that the apache2 listen to port 8080 I started the apache2 service.\nAfter the call to the IP on port 8080 on the browser I don't get a result.</p>\n\n<p>Do I have to note something else?\nThanks</p>\n"},{"id":694029,"title":"DNS not resolving using Docker + Vagrant on Ubuntu 14.04","body":"<p>I've enabled my-example.com in a Docker container running apache2 on vagrant running on top of native ubunutu 14.04.  </p>\n\n<p>In the Vagrantfile I've mapped Vagrant port 80 to 8086 on the Ubuntu host</p>\n\n<p>config.vm.network \"forwarded_port\", guest: 80, host:8086.</p>\n\n<p>I can connect to the web page using ip 192.168.0.12:8086/index.html but I cannot access the page using the domain name www.my-example.com:8086/index.html</p>\n\n<p>I've installed the DNS plugin in Ubuntu and included the following in the Vagrant file:</p>\n\n<p>config.dns.tld = \"com\"\nconfig.dns.patterns = [/^.my-example.com$/]</p>\n\n<p>I've explicitly specified the following in the etc/hosts file on the host Ubuntu 14.04 yet cannot access www.my-example.com:8086/index.html</p>\n\n<p>192.168.0.12:8086  my-example.com</p>\n\n<p>127.0.0.1:8086  my-example.com</p>\n\n<p>Am going in circles trying to get the DNS right; any help will be much appreciated.</p>\n"},{"id":691151,"title":"Docker container network connection","body":"<p>I have installed Docker 1.8.3 in Ubuntu 14.04. At first my containers seemed have a properly functioning network connection. I was able to execute an \"apt-get update\" from a Ubuntu container and it performed the update successfully. But after just a day or so not only will apt-get not work, but a simple \"ping google.com\" will also not work.</p>\n\n<p>I suspect that it is an issue with the MASQUERADE rule in my iptable. \"sudo iptables -L -t nat -n\" gives me the following output:</p>\n\n<pre><code>Chain PREROUTING (policy ACCEPT)\ntarget prot  opt  source      destination \nDOCKER all   --   0.0.0.0/0   0.0.0.0/0     ADDRTYPE match dst-type LOCAL\n\nChain INPUT (policy ACCEPT)\ntarget prot opt source destination\n\nChain OUTPUT (policy ACCEPT)\ntarget  prot  opt source       destination \nDOCKER  all   --  0.0.0.0/0    !127.0.0.0/8     ADDRTYPE match dst-type LOCAL\n\nChain POSTROUTING (policy ACCEPT)\ntarget      prot opt source          destination \nMASQUERADE  all  --  172.17.0.0/16    0.0.0.0/0\n\nChain DOCKER (2 references)\ntarget prot opt source destination\n</code></pre>\n\n<p>Based on other posts I have seen I was expecting the MASQUERADE line to have the same IP address for the destination as is in the source. I am not sure about this though because I have tried uninstalling and reinstalling Docker and the following command:</p>\n\n<pre><code>sudo apt-get install bridge-utils\npkill docker\niptables -t nat -F\nifconfig docker0 down\nbrctl delbr docker0\nsudo service docker start\n</code></pre>\n\n<p>and both approaches resulted in the same iptable configuration. I have also tried:</p>\n\n<pre><code>sudo docker daemon -b testbr0\n</code></pre>\n\n<p>and got the following result:</p>\n\n<pre><code>INFO[0000] Listening for HTTP on unix (/var/run/docker.sock) \nINFO[0000] [graphdriver] using prior storage driver \"aufs\" \nINFO[0000] Option DefaultDriver: bridge \nINFO[0000] Option DefaultNetwork: bridge \nINFO[0000] Firewalld running: false \nFATA[0000] Error starting daemon: Error initializing network controller: Error creating default \"bridge\" network: bridge device with non default name testbr0 must be created manually\n</code></pre>\n\n<p>Based on some older post I found I expected this to create a new MASQUERADE rule.</p>\n\n<p>If anybody has any ideas on what else to try please share. The next thing i am thinking about is to try to install an older version of Docker to see if I have the same problem or not.</p>\n"},{"id":563680,"title":"Ubuntu for Docker Containers","body":"<p>Is Ubuntu a suitable distro for using inside a Docker container? If so, how does the Ubuntu installed by </p>\n\n<pre><code>docker pull ubuntu\n</code></pre>\n\n<p>differ from Ubuntu 14.04?</p>\n"},{"id":615394,"title":"problem with docker","body":"<p>I am trying to learn about \"Docker\" in ubuntu 15.04.</p>\n\n<p>When I give any command using docker like \"docker run image\", it get the following error:</p>\n\n<pre><code>FATA[0000] Post http:///var/run/docker.sock/v1.17/containers/create: dial unix /var/run/docker.sock: no such file or directory. Are you trying to connect to a TLS-enabled daemon without TLS?\n</code></pre>\n\n<p>I don't understand what does it mean.</p>\n"},{"id":630625,"title":"Question with connecting to Docker container on virtualized Ubuntu server","body":"<p>As a web designer I have been using VirtualBox to set up temporary work servers for my projects. Lately I've been  trying to reduce the number of virtual machines on my laptop(due to limitations of SSD capacity) and I thought learning and using Docker may be beneficial in terms of system storage, deployment of finished work, and in futureproofing my skillsets.\nUntil now, I have been using host-only adapter in addition to NAT to connect to APM server in my virtualmachine from my host(which is usualy Windows).</p>\n\n<p>The following is /etc/network/interfaces setting I normally use:</p>\n\n<pre><code># The loopback network interface\nauto lo\niface lo inet loopback\n\n# The primary network interface\nauto eth0\niface eth0 inet dhcp\n\n# VBOX Host-only adapter\nauto eth1\niface eth1 inet static\n  network    192.168.56.0\n  address    192.168.56.80\n  netmask    255.255.255.0\n</code></pre>\n\n<p>I am thinking about IP aliasing to assign more IPs to the Host-only adapter(<code>192.168.56.81, 192.168.56.82...</code>) and routing each of them to each of the containers, which will each be running one of my projects. It looks like Docker gets to have its own network interface, <code>docker0</code>, which cannot be accessed from the VirtualBox host machine. From what I can tell, I have a few possible approaches:  </p>\n\n<ol>\n<li>route the connection from the host to the host-only adapter to the\ndocker0 interface</li>\n<li>somehow find a way to connect to the docker0 interface from the host\nmachine, or</li>\n<li>somehow find a way to connect the containers to host-only interfaces</li>\n</ol>\n\n<p>I want to know which one of these approaches is the most viable way for me to take.<br>\nI am not sure if my question if clear enough. Please let me know if I should be providing more information in order to make this question answerable.</p>\n"},{"id":636739,"title":"Ubuntu unresponsive. Cant debug.","body":"<p>I have a ubuntu 14.04 system. Everytime I run a specific set of processes, I see that my system becomes un-responsive for 10-15 minutes. I tried to see the cpu usages, but no individual process was going beyond 50% and total cpu never beyond 100% (system has 8 cores). [The processes are docker containers.]</p>\n\n<p>I ran the same set of processes on another machine(with same harware config) and I couldn't reproduce the issue on that system, which probably points to the fact that there is something wrong with my system. \nPreviously I was running Ubuntu 12.10 and was running in to the same issues. </p>\n\n<p>Does anybody have any pointers?</p>\n"},{"id":620404,"title":"Testing nginx in a Docker container in on Ubuntu Core?","body":"<ol>\n<li>Followed <a href=\"http://developer.ubuntu.com/en/snappy/start/#snappy-local\" rel=\"nofollow\">Setting up Ubuntu Core on a KVM</a>\n<ul>\n<li>It shows you how to start the vm and forward ports back to your host machine.</li>\n</ul></li>\n<li>Followed <a href=\"http://developer.ubuntu.com/en/snappy/tutorials/using-snappy/\" rel=\"nofollow\">Snappy Tour</a>\n<ul>\n<li>It shows you how to install Docker on Ubuntu Core</li>\n</ul></li>\n<li>Installed the latest nginx image</li>\n<li>Looked at <a href=\"https://docs.docker.com/userguide/usingdocker/\" rel=\"nofollow\">Managing Containers</a> and interactively got nginx running in my container</li>\n</ol>\n\n<p>Now the container is running nginx on a random port.</p>\n\n<p>Back in Ubuntu Core, I tried to install wget or curl to return a page from nginx in my container but there isn't one either one listed in snappy search; how else can I test this?</p>\n"},{"id":472937,"title":"Docker install tools/run command on existing container","body":"<p>I'm using Dokku to run some apps on an Ubuntu 14.04 server. Dokku creates the Docker container with all the stuff in them to run.</p>\n\n<p>I'd like to connect to the running container somehow and run <code>apt-get install phantomjs -y</code>.</p>\n\n<p>How would I go about doing this? If I run this on the Ubuntu host machine will it be available in the docker container?</p>\n\n<p>I don't have access to the Docker file or the buildpacks since that's all part of Dokku</p>\n"},{"id":452611,"title":"How to use &quot;docker.io&quot; containers in Ubuntu 14.04 with IPv6?","body":"<p>I'm trying this:</p>\n\n<p>At the physical host with Ubuntu 14.04 (container's gateway for both IPv6 and IPv4), I tried:</p>\n\n<pre><code>root@docker-srv-1:~# ip -6 a a 2804:XXX:4:acbd::1/64 dev docker0\n</code></pre>\n\n<p>Of course, host docker-srv-1 can \"ping6 google.com\" and, the subnet 2804:XXX:4:abcd::/64 is routed to it. I can \"ping6 2804:XXX:4:acbd::1\" from anywhere is the World (Container's IPv6 gateway (docker0 interface)) right now.</p>\n\n<p>Later, I'm planning to run the radvd directly on docker0 interface, so, the containers will auto-generate its own SLAAC IPv6 address automatically (I believe it will, if works statically first).</p>\n\n<pre><code>root@docker-srv-1:~# docker.io run -t -i tmartinx/ubuntu-14.04-server-cloudimg /bin/bash\n</code></pre>\n\n<p>But, within the container:</p>\n\n<pre><code>root@112c9071041a:/# ip -6 a a 2804:XXX:4:acbd::20/64 dev eth0\nRTNETLINK answers: Operation not permitted\n</code></pre>\n\n<p>I also tried:</p>\n\n<pre><code>root@docker-srv-1:~# docker.io run --lxc-conf=\"lxc.network.ipv6=2804:XXX:4:acbd::20/64\" --lxc-conf=\"lxc.network.ipv6.gateway=2804:XXX:4:acbd::1\" -d -e lxc -t -i tmartinx/ubuntu-14.04-server-cloudimg /bin/bash \n\n235d2bea7d9b4cc54d08c6eb9e623e5655ac4e1668a9a7e255e796d254ce4845\n2014/04/22 00:50:08 Error: Cannot start container 235d2bea7d9b4cc54d08c6eb9e623e5655ac4e1668a9a7e255e796d254ce4845: lxc.network.ipv6 = 2804:XXX:4:acbd::20/64 is not supported by the native driver\n</code></pre>\n\n<p>I found some tips here: <a href=\"http://zargony.com/2013/10/13/ipv6-in-docker-containers\" rel=\"nofollow\">http://zargony.com/2013/10/13/ipv6-in-docker-containers</a> - But it didn't worked...    :'(</p>\n\n<p>I also tried docker.io with \"-d -e lxc\" but, didn't worked with IPv6 either...</p>\n\n<p>Am I missing something?!</p>\n\n<hr>\n\n<p>EDITED #1:</p>\n\n<p>Now I'm running docker.io with --privileged, like this:</p>\n\n<pre><code>docker.io run --privileged -t -i tmartinx/ubuntu-14.04-server-cloudimg /bin/bash\n</code></pre>\n\n<p>So, I can run \"ip -6 a a $IPV6_ADDR\" BUT, still can't ping6 its gateway (locally reachable docker0 int - IPv4 works) and, of course no IPv6 connectivity at all...</p>\n\n<p>Source:</p>\n\n<p>IPV6 address\n <a href=\"https://github.com/dotcloud/docker/issues/4483\" rel=\"nofollow\">https://github.com/dotcloud/docker/issues/4483</a></p>\n\n<hr>\n\n<p>EDITED #2:</p>\n\n<p>After researching a bit more, I did:</p>\n\n<pre><code>sudo apt-get install lxc\n</code></pre>\n\n<p>Added to /etc/default/docker.io the following line:</p>\n\n<pre><code>DOCKER_OPTS=\"-d -e lxc\"\n</code></pre>\n\n<p>Docker restarted but, still no IPv6... Anyway, the error message is now different, look:</p>\n\n<pre><code>root@docker-srv-1:~# docker.io run --lxc-conf=\"lxc.network.ipv6=2804:XXX:4:acbd::20/64\" --lxc-conf=\"lxc.network.ipv6.gateway=2804:XXX:4:acbd::1\" -t -i tmartinx/ubuntu-14.04-server-cloudimg /bin/bash\nlxc-start: Cannot add ipv6 gateway for eth0 when not bringing up the interface\nlxc-start: failed to setup netdev\nlxc-start: failed to setup the network for '5c7d1765a7a93bff96711865ebd9325b9b9bf071e89c466fe1ae75a336af10f8'\nlxc-start: failed to setup the container\nlxc-start: invalid sequence number 1. expected 2\nlxc-start: failed to spawn '5c7d1765a7a93bff96711865ebd9325b9b9bf071e89c466fe1ae75a336af10f8'\n2014/04/22 04:58:25 Error: Cannot start container 5c7d1765a7a93bff96711865ebd9325b9b9bf071e89c466fe1ae75a336af10f8: exit status 1\n</code></pre>\n\n<hr>\n\n<p>EDITED #3</p>\n\n<p>Docker with IPv6 is working now!!! What I did?</p>\n\n<p>After installing <code>lxc</code> (EDITED #2) and reconfiguring DOCKER_OPTS to enable it, Docker with IPv6 is working with the following command:</p>\n\n<pre><code>docker.io run --privileged --lxc-conf=\"lxc.network.ipv6 = 2804:XXX:4:acbd::200/64\" --lxc-conf=\"lxc.network.ipv6.gateway = 2804:XXX:4:acbd::1\" --lxc-conf=\"lxc.network.flags = up\" -t -i tmartinx/ubuntu-14.04-server-cloudimg /bin/bash\n</code></pre>\n\n<hr>\n\n<p>If someone else have a better solution, please, post it!</p>\n\n<p>Thanks!</p>\n\n<p>Thiago</p>\n"}]}]