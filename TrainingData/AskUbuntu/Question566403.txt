[{"id":566403,"title":"Home directory permissions preventing ssh key authentication on Ubuntu Server 14.10","body":"<p>I have ubuntu server 14.10 with an SSH server on it, and have password authentication working fine from my System76 darter laptop running Debian Sid.  I want to switch to rsa-key authentication.</p>\n\n<p>On the local system I generated the key, put the public key up on the server, then edited /etc/ssh/sshd_config to allow key authentication, then rebooted the service.  When I then tried to ssh into the server, I was prompted for a password.  I stopped the service, then restarted sshd in debug mode:</p>\n\n<pre><code>sudo /usr/sbin/sshd -d\n</code></pre>\n\n<p>I then tried to login, and got the following messages (I redacted a bunch of stuff with # out of an excess of paranoia, I don't think it's anything relevant though):</p>\n\n<pre><code>debug1: sshd version OpenSSH_6.6.1, OpenSSL 1.0.1f 6 Jan 2014\ndebug1: key_parse_private2: missing begin marker\ndebug1: read PEM private key done: type RSA\ndebug1: private host key: #0 type 1 RSA\ndebug1: key_parse_private2: missing begin marker\ndebug1: read PEM private key done: type DSA\ndebug1: private host key: #1 type 2 DSA\ndebug1: key_parse_private2: missing begin marker\ndebug1: read PEM private key done: type ECDSA\ndebug1: private host key: #2 type 3 ECDSA\ndebug1: rexec_argv[0]='/usr/sbin/sshd'\ndebug1: rexec_argv[1]='-d'\nSet /proc/self/oom_score_adj from 0 to -1000\ndebug1: Bind to port ##### on 192.168.1.###.\nServer listening on 192.168.1.### port #####.\ndebug1: Server will not fork when running in debugging mode.\ndebug1: rexec start in 4 out 4 newsock 4 pipe -1 sock 7\ndebug1: inetd sockets after dupping: 3, 3\nConnection from 192.168.1.### port 34258 on 192.168.1.### port #####\ndebug1: Client protocol version 2.0; client software version OpenSSH_6.7p1 Debian-3\ndebug1: match: OpenSSH_6.7p1 Debian-3 pat OpenSSH* compat 0x04000000\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2ubuntu2\ndebug1: permanently_set_uid: 107/65534 [preauth]\ndebug1: list_hostkey_types: ssh-rsa,ssh-dss,ecdsa-sha2-nistp256 [preauth]\ndebug1: SSH2_MSG_KEXINIT sent [preauth]\ndebug1: SSH2_MSG_KEXINIT received [preauth]\ndebug1: kex: client-&gt;server aes128-ctr umac-64-etm@openssh.com none [preauth]\ndebug1: kex: server-&gt;client aes128-ctr umac-64-etm@openssh.com none [preauth]\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\ndebug1: SSH2_MSG_NEWKEYS sent [preauth]\ndebug1: expecting SSH2_MSG_NEWKEYS [preauth]\ndebug1: SSH2_MSG_NEWKEYS received [preauth]\ndebug1: KEX done [preauth]\ndebug1: userauth-request for user surfrock66 service ssh-connection method non [preauth]\ndebug1: attempt 0 failures 0 [preauth]\ndebug1: PAM: initializing for \"surfrock66\"\ndebug1: PAM: setting PAM_RHOST to \"sr66-darter.######.com\"\ndebug1: PAM: setting PAM_TTY to \"ssh\"\ndebug1: userauth-request for user surfrock66 service ssh-connection method publickey [preauth]\ndebug1: attempt 1 failures 0 [preauth]\ndebug1: test whether pkalg/pkblob are acceptable [preauth]\ndebug1: temporarily_use_uid: 1000/1000 (e=0/0)\ndebug1: trying public key file /home/surfrock66/.ssh/authorized_keys\ndebug1: fd 4 clearing O_NONBLOCK\nAuthentication refused: bad ownership or modes for directory /home/surfrock66\ndebug1: restore_uid: 0/0\nFailed publickey for surfrock66 from 192.168.1.### port 34258 ssh2: RSA ##:##:##:##:##:##:##:##:##:##:##:##:##:##:##:##\nConnection closed by 192.168.1.### [preauth]\ndebug1: do_cleanup [preauth]\ndebug1: do_cleanup\ndebug1: PAM: cleanup\ndebug1: Killing privsep child 14705\n</code></pre>\n\n<p>Specifically, I see the line\n<code>Authentication refused: bad ownership or modes for directory /home/surfrock66</code></p>\n\n<p>I've done a bunch of research, and found issues around permissions under the .ssh directory and the files under it, but I've never heard of an issue regarding issues with home directory permissions.  I suspect it has to do with the user that sshd starts under not having rights to my home directory.  Here's the relevant permissions:</p>\n\n<pre><code>surfrock66@sr66-blade:~$ ls -as1l /home/\ntotal 12\n4 drwxr-xr-x  3 root       root       4096 Sep  8  2013 .\n4 drwxr-xr-x 22 root       root       4096 Dec 11 07:47 ..\n4 drwxrwxrwx 54 surfrock66 surfrock66 4096 Dec 28 12:30 surfrock66\n\nsurfrock66@sr66-blade:~$ ls -as1l /home/surfrock66/ | grep .ssh\n4 drwx------    2 surfrock66 surfrock66  4096 Dec 28 12:04 .ssh\n\nsurfrock66@sr66-blade:~$ ls -as1l /home/surfrock66/.ssh/\ntotal 28\n4 drwx------  2 surfrock66 surfrock66 4096 Dec 28 12:04 .\n4 drwxrwxrwx 54 surfrock66 surfrock66 4096 Dec 28 12:30 ..\n4 -rw-r--r--  1 surfrock66 surfrock66  404 Dec 28 12:04 authorized_keys\n4 -rw-------  1 surfrock66 surfrock66 1679 Nov 12  2012 id_rsa\n4 -rw-r--r--  1 surfrock66 surfrock66  403 Nov 12  2012 id_rsa.pub\n4 -rw-------  1 surfrock66 surfrock66 3964 Nov 10 19:51 known_hosts\n4 -rw-------  1 surfrock66 surfrock66 3078 Dec 10  2013 known_hosts.old\n</code></pre>\n\n<p>If it's helpful, here's the output of /var/log/auth.log during the server's run and failed login:</p>\n\n<pre><code>Dec 28 14:32:30 sr66-blade sudo: surfrock66 : TTY=pts/3 ; PWD=/home/surfrock66 ; USER=root ; COMMAND=/usr/sbin/sshd -d\nDec 28 14:32:30 sr66-blade sudo: pam_unix(sudo:session): session opened for user root by surfrock66(uid=0)\nDec 28 14:32:32 sr66-blade sshd[27862]: debug1: sshd version OpenSSH_6.6.1, OpenSSL 1.0.1f 6 Jan 2014\nDec 28 14:32:32 sr66-blade sshd[27862]: debug1: key_parse_private2: missing begin marker\nDec 28 14:32:32 sr66-blade sshd[27862]: debug1: read PEM private key done: type RSA\nDec 28 14:32:32 sr66-blade sshd[27862]: debug1: private host key: #0 type 1 RSA\nDec 28 14:32:32 sr66-blade sshd[27862]: debug1: key_parse_private2: missing begin marker\nDec 28 14:32:32 sr66-blade sshd[27862]: debug1: read PEM private key done: type DSA\nDec 28 14:32:32 sr66-blade sshd[27862]: debug1: private host key: #1 type 2 DSA\nDec 28 14:32:32 sr66-blade sshd[27862]: debug1: key_parse_private2: missing begin marker\nDec 28 14:32:32 sr66-blade sshd[27862]: debug1: read PEM private key done: type ECDSA\nDec 28 14:32:32 sr66-blade sshd[27862]: debug1: private host key: #2 type 3 ECDSA\nDec 28 14:32:35 sr66-blade sudo: pam_unix(sudo:session): session closed for user root\nDec 28 14:32:44 sr66-blade sudo: surfrock66 : TTY=pts/3 ; PWD=/home/surfrock66 ; USER=root ; COMMAND=/usr/bin/tail -n /var/log/auth.log\nDec 28 14:32:44 sr66-blade sudo: pam_unix(sudo:session): session opened for user root by surfrock66(uid=0)\nDec 28 14:32:44 sr66-blade sudo: pam_unix(sudo:session): session closed for user root\nDec 28 14:32:48 sr66-blade sudo: surfrock66 : TTY=pts/3 ; PWD=/home/surfrock66 ; USER=root ; COMMAND=/usr/bin/tail -n 100 /var/log/auth.log\nDec 28 14:32:48 sr66-blade sudo: pam_unix(sudo:session): session opened for user root by surfrock66(uid=0)\n</code></pre>\n\n<p>Here's /etc/ssh/sshd_config</p>\n\n<pre><code>surfrock66@sr66-blade:~$ cat /etc/ssh/sshd_config \n# Package generated configuration file\n# See the sshd_config(5) manpage for details\n\n# What ports, IPs and protocols we listen for\nPort #####\n# Use these options to restrict which interfaces/protocols sshd will bind to\n#ListenAddress ::\nListenAddress 192.168.1.###\nProtocol 2\n# HostKeys for protocol version 2\nHostKey /etc/ssh/ssh_host_rsa_key\nHostKey /etc/ssh/ssh_host_dsa_key\nHostKey /etc/ssh/ssh_host_ecdsa_key\n#Privilege Separation is turned on for security\nUsePrivilegeSeparation yes\n\n# Lifetime and size of ephemeral version 1 server key\nKeyRegenerationInterval 3600\nServerKeyBits 1024\n\n# Logging\nSyslogFacility AUTH\nLogLevel INFO\n\n# Authentication:\nLoginGraceTime 120\nPermitRootLogin no \nStrictModes yes\n\nRSAAuthentication yes\nPubkeyAuthentication yes\nAuthorizedKeysFile  %h/.ssh/authorized_keys\n\n# Don't read the user's ~/.rhosts and ~/.shosts files\nIgnoreRhosts yes\n# For this to work you will also need host keys in /etc/ssh_known_hosts\nRhostsRSAAuthentication no\n# similar for protocol version 2\nHostbasedAuthentication no\n# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication\n#IgnoreUserKnownHosts yes\n\n# To enable empty passwords, change to yes (NOT RECOMMENDED)\nPermitEmptyPasswords no\n\n# Change to yes to enable challenge-response passwords (beware issues with\n# some PAM modules and threads)\nChallengeResponseAuthentication no\n\n# Change to no to disable tunnelled clear text passwords\n#PasswordAuthentication yes\n\n# Kerberos options\n#KerberosAuthentication no\n#KerberosGetAFSToken no\n#KerberosOrLocalPasswd yes\n#KerberosTicketCleanup yes\n\n# GSSAPI options\n#GSSAPIAuthentication no\n#GSSAPICleanupCredentials yes\n\nX11Forwarding yes\nX11DisplayOffset 10\nPrintMotd no\nPrintLastLog yes\nTCPKeepAlive yes\n#UseLogin no\n\n#MaxStartups 10:30:60\n#Banner /etc/issue.net\n\n# Allow client to pass locale environment variables\nAcceptEnv LANG LC_*\n\nSubsystem sftp /usr/lib/openssh/sftp-server\n\n# Set this to 'yes' to enable PAM authentication, account processing,\n# and session processing. If this is enabled, PAM authentication will\n# be allowed through the ChallengeResponseAuthentication and\n# PasswordAuthentication.  Depending on your PAM configuration,\n# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n# PAM authentication, then enable this but set PasswordAuthentication\n# and ChallengeResponseAuthentication to 'no'.\nUsePAM yes\n</code></pre>\n\n<p>Just to be complete, here's /etc/ssh/ssh_config</p>\n\n<pre><code>surfrock66@sr66-blade:~$ cat /etc/ssh/ssh_config \n\n# This is the ssh client system-wide configuration file.  See\n# ssh_config(5) for more information.  This file provides defaults for\n# users, and the values can be changed in per-user configuration files\n# or on the command line.\n\n# Configuration data is parsed as follows:\n#  1. command line options\n#  2. user-specific file\n#  3. system-wide file\n# Any configuration value is only changed the first time it is set.\n# Thus, host-specific definitions should be at the beginning of the\n# configuration file, and defaults at the end.\n\n# Site-wide defaults for some commonly used options.  For a comprehensive\n# list of available options, their meanings and defaults, please see the\n# ssh_config(5) man page.\n\nHost *\n    ForwardAgent yes\n    ForwardX11 yes\n    ForwardX11Trusted yes\n#   RhostsRSAAuthentication no\n    RSAAuthentication yes\n#   PasswordAuthentication yes\n#   HostbasedAuthentication no\n#   GSSAPIAuthentication no\n#   GSSAPIDelegateCredentials no\n#   GSSAPIKeyExchange no\n#   GSSAPITrustDNS no\n#   BatchMode no\n#   CheckHostIP yes\n#   AddressFamily any\n#   ConnectTimeout 0\n#   StrictHostKeyChecking ask\n#   IdentityFile ~/.ssh/identity\n#   IdentityFile ~/.ssh/id_rsa\n#   IdentityFile ~/.ssh/id_dsa\n#   Port 22\n#   Protocol 2,1\n#   Cipher 3des\n#   Ciphers aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc\n#   MACs hmac-md5,hmac-sha1,umac-64@openssh.com,hmac-ripemd160\n#   EscapeChar ~\n#   Tunnel no\n#   TunnelDevice any:any\n#   PermitLocalCommand no\n#   VisualHostKey no\n#   ProxyCommand ssh -q -W %h:%p gateway.example.com\n#   RekeyLimit 1G 1h\n    SendEnv LANG LC_*\n    HashKnownHosts yes\n    GSSAPIAuthentication yes\n    GSSAPIDelegateCredentials no\n</code></pre>\n\n<p>Any help/thoughts are appreciated!</p>\n","related_questions":[{"id":306798,"title":"Trying to do ssh authentication with key files: server refused our key","body":"<p>I'm trying to setup ssh authentication with key files in stead of username/password. The client is a Windows box running PuTTY and the server is a Ubuntu 12.04 LTS server.</p>\n\n<p>I downloaded puttygen.exe and had it generate a key pair. In <code>/etc/ssh/sshd_config</code> I have this line:</p>\n\n<pre><code>AuthorizedKeysFile %h/.ssh/authorized_keys\n</code></pre>\n\n<p>and on my client's public key file it says this:</p>\n\n<pre><code>---- BEGIN SSH2 PUBLIC KEY ----\nComment: \"my@email.address.com\"\nssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAr3Qo6T5XU06ZigGOd3eKvfBhFLhg5kWv8lz6\nqJ2G9XCbexlPQGanPhh+vcPkhor6+7OmB+WSdHeNO652kTofnauTKcTCbHjsT7cJ\nGNrO8WVURRh4fabknUHPmauerWQZ6TgRPGaz0aucU+2C+DUo2SKVFDir1vb+4u83\nAV1pKxs=my@email.address.com\n---- END SSH2 PUBLIC KEY ----\n</code></pre>\n\n<p>I copied the part from \"ssh-rsa AAA\" to \"my@email.address.com\" and put that in the file <code>~/.ssh/authorized_keys</code> on my server (in my own homefolder). In PuTTY under Connection > SSH > Auth I entered the path to the private key it generated on my client and saved the session settings.</p>\n\n<p>I restarted the ssh server with</p>\n\n<pre><code>sudo service ssh restart\n</code></pre>\n\n<p>Now if I load the profile in PuTTY (I verified the private key is still in Connection > SSH > Auth and that the path is correct) and run the profile, it says</p>\n\n<pre><code>Server refused our key\n</code></pre>\n\n<p>I tried putting the public key in a file under the <b>directory</b> <code>./ssh/authorized_keys/</code> but that didn't help so I used <code>./ssh/authorized_keys</code> as a <b>file</b>, pasting the key in it. I also tried generating a private/public key pair on the server, putting the public key in <code>./ssh/authorized_files</code> and loading the private one in PuTTY on my client. Rebooting the server didn't help either.</p>\n\n<p>I found that the error may be solved by putting the key in a place outside the user's home folder but that's only useful if the home folder is encrypted, which this one is not.</p>\n\n<p>Also tried generating a 4096 bit key, thinking perhaps 1024 was too short.</p>\n\n<p>How can I get this to work? Thanks!</p>\n\n<h2>EDIT:</h2>\n\n<p>Ok, <code>/var/log/auth.log</code> said:</p>\n\n<pre><code>sshd: Authentication refused: bad ownership or modes for directory /home/vorkbaard/.ssh\n</code></pre>\n\n<p>Google tells me <code>~/.ssh/</code> should be 700 and and <code>~/.ssh/authorized_keys</code> should be 600, so I did that. Now <code>/var/log/auth.log</code> says:</p>\n\n<pre><code>sshd: error: key_read: uudecode AAAAB3N [etc etc etc until about 3/4 of my public key]\n</code></pre>\n"},{"id":689067,"title":"Clients and a server connection by SSH with authentication key usage","body":"<p>What is the way to share a server's SSH key to clients to allow them connect by SSH to that server? </p>\n\n<p>In the every manual about SSH authentication a connection between clients and server through transferring a public key of client into \"authorized_keys\" on remote server described. But, in my case, server doesn't know about his clients, he wants to share his own key and allows to connect for trusted clients.</p>\n\n<p>How it can be done?</p>\n"},{"id":635330,"title":"Can&#39;t SSH with Key Authentication","body":"<p>I created an RSA keypair using ssh-keygen on Ubuntu Desktop 14.04.2 LTS</p>\n\n<pre><code>ssh-keygen -b 2048 -t rsa -f ~/.ssh/&lt;keyname&gt; -o\n</code></pre>\n\n<p>Than I added the public key to the remote Ubuntu Server 14.04.2 LTS ~/.ssh/authorized_keys:</p>\n\n<pre><code>ssh-copy-id -i ~/.ssh/&lt;keyname&gt;.pub &lt;user&gt;@&lt;server-hostname&gt;\n</code></pre>\n\n<p>when trying to connect to the remote Ubuntu Server:</p>\n\n<pre><code>ssh &lt;user&gt;@&lt;server-hostname&gt;\n</code></pre>\n\n<p>I'm not asked for the private key passphrase and can't connect with SSH at all. I encounter the following message:</p>\n\n<blockquote>\n  <p>Agent admitted failure to sign using the key. Permission denied\n  (publickey).</p>\n</blockquote>\n\n<p>It appears to be a <a href=\"https://bugs.launchpad.net/ubuntu/+source/openssh/+bug/1380084\" rel=\"nofollow\">bug</a>... Setting SSH_AUTH_SOCK environment variable to 0 allows to bypass the issue according to this clever <a href=\"https://chrisjean.com/ubuntu-ssh-fix-for-agent-admitted-failure-to-sign-using-the-key/\" rel=\"nofollow\">workaround</a>:</p>\n\n<pre><code>SSH_AUTH_SOCK=0 ssh &lt;user&gt;@&lt;server-hostname&gt;\n</code></pre>\n\n<p>Do this bug has been fixed and if it's not the case, what is the cleanest solution to avoid this annoyance with minimal/no side effect(s)?</p>\n"},{"id":633878,"title":"Add SSH key when only public key authentication is available?","body":"<p>This question is more of a general Linux or OpenSSH question than it is specific to Ubuntu but because I'm setting up an Ubuntu server, I'm asking it here.</p>\n\n<p>The organization I work for is built on an almost entirely Microsoft infrastructure.  That said, I know enough Linux to be dangerous and I'm setting up an Ubuntu server to run Splunk.  I'm trying to lock down the server and one of the things I would like to do is to use only public key authentication for SSH.</p>\n\n<p>I know how to configure SSH to do this, but there is a challenge with regards to the various users' public keys and I imagine this challenge isn't unique to my situation.  </p>\n\n<p>The trouble is this...  Let us say that another person on the Systems Administration team decides they need to log into this server in order to troubleshoot something.  Since public key authentication is the only SSH authentication mechanism allowed, they can only log in via the console (where it will allow them to enter a password).</p>\n\n<p>How can this person get their SSH public key loaded into their authorized_keys file without having to type it out manually after logging via the console?  I imagine this question may have a procedural answer that is perfectly valid.  If that is the case, please feel free to suggest a procedure that would be a valid solution to this problem as well.</p>\n\n<p>Thanks in advance!</p>\n\n<p>In case it matters, I'm also using PowerBroker Identity Services (PBIS) Open in order to leverage the ability to use Active Directory domain accounts on the server.  If you sign in using a new (and authorized) account on a Linux server running PBIS Open, it automatically creates a profile for that person.  Active Directory accounts do <em>not</em> need to be pre-created on the Linux server running PBIS Open before they can log in.</p>\n"},{"id":597169,"title":"After moving home directory, ssh configuration is not working","body":"<p>I moved my home directory from <code>/home/user</code> to <code>/media/newDrive/home/user</code>.</p>\n\n<p>Everything seems to be working at first, except my ssh configuration. I was able to log into this machine from my laptop with an authorized key.</p>\n\n<p>Certainly nothing changed. However, now I find that I need to provide my password. This is not what I want. I want to use the authorized_keys that is setup.</p>\n\n<p>Much thanks in advance.</p>\n"},{"id":580395,"title":"Unable to use RSA keys with SSH: Server refused our key","body":"<p>I am trying to use RSA public/private keys generated by PuTTY to log in to two GNU/Linux computers from Windows computers, and it works for one but not for the Ubuntu computer. The keys were generated on a Windows 7 desktop PC. From it I can log in to a Beaglebone Black running the Angstrom distro. I copied the keys to a Windows 7 laptop, and I was successful logging in to BBB from it as well, but not to the Ubuntu computer. I get the following message on the PuTTY terminal:</p>\n\n<pre><code>Using username \"user\".\nServer refused our key\nUsing keyboard-interactive authentication.\nPassword:\n</code></pre>\n\n<p>I can complete the log in by entering the password, but I really want the keys to work so I can eliminate password log-ins over internet. The username is different between the two servers, but I think that is no problem, right?</p>\n\n<p>I am using Ubuntu 14.04 LTS which has openssh-server installed. I copied the public key from PuTTYgen and pasted it into ~/.ssh/known_hosts. The key is on one line only, starting like this: <code>ssh-rsa AAAAB...</code></p>\n\n<p>The ~/.ssh directory has permissions set to 700, ~/.ssh/known_hosts is set to 600.</p>\n\n<p>I had high hopes when I found <a href=\"http://askubuntu.com/questions/306798/trying-to-do-ssh-authentication-with-key-files-server-refused-our-key\">this post</a> on this board, but none of those solutions have fixed the problem.</p>\n\n<p>At one point I accidentally deleted the host keys in /etc/ssh/, but I uninstalled openssh-server and then reinstalled it which brought back those keys. Well, at least it seems like I got them all back.</p>\n\n<p>I opened one PuTTY terminal and issued <code>tail -f /var/log/auth.log</code>, and then tried to log in on a second terminal. Nothing enlightening showed up. The first message acknowledged that the password log in was succesful, nothing about the keys though.</p>\n\n<p>I have been tinkering with the configuration file /etc/ssh/sshd_config trying to hit the right combination of settings, each time restarting the daemon with <code>service ssh restart</code>. Below is that file as it stands now. I think I might be missing something in there, but I am running out of ideas.</p>\n\n<pre><code># Package generated configuration file\n# See the sshd_config(5) manpage for details\n\n# What ports, IPs and protocols we listen for\nPort 22\n# Use these options to restrict which interfaces/protocols sshd will bind to\n#ListenAddress ::\n#ListenAddress 0.0.0.0\nProtocol 2\n# HostKeys for protocol version 2\nHostKey /etc/ssh/ssh_host_rsa_key\nHostKey /etc/ssh/ssh_host_dsa_key\nHostKey /etc/ssh/ssh_host_ecdsa_key\nHostKey /etc/ssh/ssh_host_ed25519_key\n#Privilege Separation is turned on for security\nUsePrivilegeSeparation yes\n\n# Lifetime and size of ephemeral version 1 server key\nKeyRegenerationInterval 3600\nServerKeyBits 1024\n\n# Logging\nSyslogFacility AUTH\nLogLevel INFO\n\n# Authentication:\nLoginGraceTime 120\nPermitRootLogin without-password\nStrictModes no\n\nRSAAuthentication yes\nPubkeyAuthentication yes\nAuthorizedKeysFile  %h/.ssh/authorized_keys\n\n# Don't read the user's ~/.rhosts and ~/.shosts files\nIgnoreRhosts yes\n# For this to work you will also need host keys in /etc/ssh_known_hosts\nRhostsRSAAuthentication no\n# similar for protocol version 2\nHostbasedAuthentication no\n# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication\n#IgnoreUserKnownHosts yes\n\n# To enable empty passwords, change to yes (NOT RECOMMENDED)\nPermitEmptyPasswords no\n\n# Change to yes to enable challenge-response passwords (beware issues with\n# some PAM modules and threads)\nChallengeResponseAuthentication yes\n\n# Change to no to disable tunnelled clear text passwords\n#PasswordAuthentication yes\n\n# Kerberos options\n#KerberosAuthentication no\n#KerberosGetAFSToken no\n#KerberosOrLocalPasswd yes\n#KerberosTicketCleanup yes\n\n# GSSAPI options\n#GSSAPIAuthentication no\n#GSSAPICleanupCredentials yes\n\nX11Forwarding yes\nX11DisplayOffset 10\nPrintMotd no\nPrintLastLog yes\nTCPKeepAlive yes\n#UseLogin no\n\n#MaxStartups 10:30:60\n#Banner /etc/issue.net\n\n# Allow client to pass locale environment variables\nAcceptEnv LANG LC_*\n\nSubsystem sftp /usr/lib/openssh/sftp-server\n\n# Set this to 'yes' to enable PAM authentication, account processing,\n# and session processing. If this is enabled, PAM authentication will\n# be allowed through the ChallengeResponseAuthentication and\n# PasswordAuthentication.  Depending on your PAM configuration,\n# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n# PAM authentication, then enable this but set PasswordAuthentication\n# and ChallengeResponseAuthentication to 'no'.\nUsePAM yes\n</code></pre>\n"},{"id":542302,"title":"rsync + ssh public key asking authentication","body":"<p>After creating the keys and use <code>ssh-copy-id</code> command successfully, I can connect by <code>ssh user@host</code> but when I'm trying to do a transfer via rsync and it asks for password... rsync command is as follows:</p>\n\n<pre><code>rsync -av -e \"ssh -o PubkeyAuthentication=yes -o PasswordAuthentication=no -X user@hostname\" /home/Compart user@hostname:/home/user/backup/\n</code></pre>\n\n<p>I already tried:</p>\n\n<pre><code>rsync -av --rsh=\"ssh -l user\" /home/Compart user@hostname:/home/user/backup/\nrsync -av -e \"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null\" /home/Compart user@hostname:/home/user/backup/\n</code></pre>\n\n<p>and still nothing... always asks for a password...</p>\n\n<pre><code>#tail -f /var/log/auth.log\nOct 27 11:48:42 hostname sshd[15531]: Accepted password for user from 10.14.6.93 port 41893 ssh2\nOct 27 11:48:42 hostname sshd[15531]: pam_group(sshd:setcred): bad group: powerdev\nOct 27 11:48:42 hostname sshd[15531]: pam_group(sshd:setcred): bad group: libvirt\nOct 27 11:48:42 hostname sshd[15531]: pam_group(sshd:setcred): bad group: kvm\nOct 27 11:48:42 hostname sshd[15531]: pam_group(sshd:setcred): bad group: sane\nOct 27 11:48:42 hostname sshd[15531]: pam_unix(sshd:session): session opened for user user by (uid=0)\nOct 27 11:48:42 hostname systemd-logind[879]: New session 39 of user user.\nOct 27 11:48:42 hostname sshd[15615]: pam_group(sshd:setcred): bad group: powerdev\nOct 27 11:48:42 hostname sshd[15615]: pam_group(sshd:setcred): bad group: libvirt\nOct 27 11:48:42 hostname sshd[15615]: pam_group(sshd:setcred): bad group: kvm\nOct 27 11:48:42 hostname sshd[15615]: pam_group(sshd:setcred): bad group: sane\nOct 27 11:48:42 hostname sshd[15615]: Received disconnect from 10.14.6.93: 11: disconnected by user\nOct 27 11:48:42 hostname sshd[15531]: pam_unix(sshd:session): session closed for user user\nOct 27 11:48:54 hostname systemd-logind[879]: Removed session 39.\n</code></pre>\n\n<p>Where 10.14.6.93 is the machine where the files are right now and where the rsync is being executed...</p>\n\n<p>any ideas?</p>\n"},{"id":477812,"title":"ssh pair key authentication problem","body":"<p>I have a problem with public and private key authentication.\nI do this steps and then, public-key based doesn't work.\n1- generate a pair of private and public key (RSA) using the following command:</p>\n\n<pre><code>Generating public/private rsa key pair.\nEnter file in which to save the key (/home/rc_ss/.ssh/id_rsa): \nCreated directory '/home/rc_ss/.ssh'.\nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in /home/rc_ss/.ssh/id_rsa.\nYour public key has been saved in /home/rc_ss/.ssh/id_rsa.pub.\nThe key fingerprint is:\nac:fd:d1:2e:e5:1e:db:87:98:77:9e:14:62:db:97:f0 rc_ss@rc_ss-network\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|                 |\n|                 |\n|                 |\n|       .         |\n|        S    + . |\n|       o   .o * o|\n|      . . .oo+ E.|\n|         ..o+++ =|\n|          .o+..=.|\n+-----------------+\n</code></pre>\n\n<p>2- copy it through network with ssh-copy-id as follows</p>\n\n<pre><code>rc_ss@rc_ss-network:~$ ssh-copy-id -i .ssh/id_rsa.pub root@192.168.2.100\nThe authenticity of host '192.168.2.100 (192.168.2.100)' can't be established.\nECDSA key fingerprint is 33:67:e0:02:b1:10:46:76:78:6b:1f:e2:55:9b:6a:a8.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '192.168.2.100' (ECDSA) to the list of known hosts.\nroot@192.168.2.100's password: \nNow try logging into the machine, with \"ssh 'root@192.168.2.100'\", and check in:\n\n  ~/.ssh/authorized_keys\n\nto make sure we haven't added extra keys that you weren't expecting.\n</code></pre>\n\n<p>3- then, I want to get connected to server ssh without password, and deal with following:</p>\n\n<pre><code>rc_ss@rc_ss-network:~$ ssh root@192.168.2.100\nroot@192.168.2.100's password: \n</code></pre>\n\n<p>Which means the password required yet.\nCan anybody help me?\nAppreciate it.</p>\n"},{"id":456328,"title":"SSH &quot;Permission Denied (Public Key)&quot; Automatically re-occuring problem","body":"<p>I have a headless server with (until recently) working SSH and public key auth. I deactivated passwords and had a problem resembling the one in <a href=\"http://askubuntu.com/questions/37051/ssh-connection-permission-denied-message\">this thread</a>, ie. upon SSH-ing into my server I get: <code>Permission denied (publickey).\n</code></p>\n\n<p><a href=\"http://askubuntu.com/users/14316/ratnakar-pawar\">Ratnakar Pawar</a> helpfully suggested:</p>\n\n<pre><code> $chmod go-w ~/\n $chmod 700 ~/.ssh\n $chmod 600 ~/.ssh/authorized_keys\n</code></pre>\n\n<p>Which solved both <a href=\"http://askubuntu.com/users/15008/priyaudupi\">priyaudupi's</a> issue and - for a time - mine. However now this issue seems to automatically reset on a 24-48 hour basis, I have changed the authorisation correctly twice (plugging in my keyboard and <em>very carefully</em> blind typing commands. This gives me normal passwordless, public auth ssh from the single authorised computer... then fails again within 48 hours.</p>\n\n<p>What might be causing this, I can't think of anything that would be able to automatically change permissions on my folders either... any suggestions?</p>\n\n<p><strong>Update 2nd May 2014</strong></p>\n\n<p>I have checked<code>crontab -l</code> for both the root and user, I have nothing on my user. The only cron task on root is one that updates my DNS server. It does so more regularly than the problem re-occurs and does not use chmod or chown...</p>\n"},{"id":69433,"title":"ssh no longer allows public key authentication","body":"<p>My machine recently stopped accepting incoming public key authentication.  I have an ubuntu 11.04 desktop that I ssh into from a windows machine.  I use putty with pageant.  I am able to connect but only with interactive password authentication, not with my rsa key that I have setup.</p>\n\n<p>I have already verified that the key is listed in ~/.ssh/authorized_keys.  How do I fix this and what do I check?</p>\n"}]}]