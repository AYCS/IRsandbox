[{"id":436613,"title":"How to rollback an &quot;apt-get install dist-upgrade&quot;?","body":"<p>In order to get up-to-date with some kernel libraries, I tried to upgrade my Ubuntu 13.10 using <code>sudo apt-get install dist-upgrade</code>. However, after upgrading it the results were not satisfactory at all and, as a matter of fact, I am experiencing some performance issues now and slow bootingâ€¦</p>\n\n<p>I browsed several forums and solutions in order to rollback my system as it was before upgrade. However I didn't find an official solution so far, such as <code>apt-get rollback ...</code> sort of.</p>\n\n<p>The most reasonable (and smart) solution I have found it was look up at the <code>/var/log/apt/history.log</code> and browse the content for the latest upgrade to find the previous libraries versions and manually reinstalling each one of them (and removing the new ones prior).</p>\n\n<p>There is a <a href=\"http://crunchbang.org/forums/viewtopic.php?id=15750\">reasonable solution</a> that helped me out to figure this workaround.  </p>\n\n<p>However, I was wondering if maybe someone has knowledge about any official tool to perform such rollback operation. </p>\n\n<p>Does anyone has any ideas to rollback an upgraded system?</p>\n\n<p>I would really appreciate any efforts, thanks in advance!</p>\n","related_questions":[{"id":703834,"title":"apt-get dist-upgrade problem","body":"<p>When i try to \"<code>apt-get dist-upgrade</code>\" i always receive the following error:</p>\n\n<pre><code>The following packages have unmet dependencies:\n linux-virtual : Depends: linux-image-virtual (= 3.2.0.87.101) but 3.2.0.94.108 is installed\n                 Depends: linux-headers-virtual (= 3.2.0.87.101) but 3.2.0.94.108 is installed\nE: Unmet dependencies. Try using -f.\n</code></pre>\n\n<p>when i try \"<code>apt-get -f install</code>\" i receive:</p>\n\n<pre><code>dpkg: dependency problems prevent configuration of linux-virtual:\n linux-virtual depends on linux-image-virtual (= 3.2.0.87.101); however:\n  Version of linux-image-virtual on system is 3.2.0.94.108.\n linux-virtual depends on linux-headers-virtual (= 3.2.0.87.101); however:\n  Version of linux-headers-virtual on system is 3.2.0.94.108.\ndpkg: error processing linux-virtual (--configure):\n dependency problems - leaving unconfigured\nNo apport report written because the error message indicates its a followup error from a previous failure.\n                                                                                                          Errors were encountered while processing:\n linux-virtual\nE: Sub-process /usr/bin/dpkg returned an error code (1)\n</code></pre>\n\n<p>Help Please,</p>\n"},{"id":672205,"title":"Should &#39;apt-get upgrade&#39; be run before &#39;apt-get dist-upgrade&#39;","body":"<p>Many times I have seen people upgrading the packages on their system, and I have noticed that some of them specifically run:</p>\n\n<pre><code>sudo apt-get upgrade\n</code></pre>\n\n<p>Before running:</p>\n\n<pre><code>sudo apt-get dist-upgrade\n</code></pre>\n\n<p>Is this really necessary? Doesn't running <code>dist-upgrade</code> cover what <code>upgrade</code> does and more? Or is there some real reason to run the <code>upgrade</code> command before the <code>dist-upgrade</code> command?</p>\n"},{"id":652432,"title":"My /www websites don&#39;t open after apt-get dist-upgrade","body":"<p>I did a huge mistake (it seems so) and did apt-get dist-upgrade in order to upgrade PHP version from 5.3.10 to 5.5... I am on Ubuntu 12.04 LTS.</p>\n\n<p>Under /var/www, I have multiple websites hosted virtually, in directories like web1, web2 web3 and so on. Every one of them is hosting a different website with unique domain name. Had worked fine, until now...</p>\n\n<p>While upgrading with dist-upgrade, the process asked me if I wanted to keep the old version of php.ini as it had been modified, and I replied: yes, keep the current version. The process asked me no other question.</p>\n\n<p>After the upgrade, I have no access to my websites. When I point my browsers to my websites it returns: </p>\n\n<p><em>Index of /\n[ICO]   Name    Last modified   Size    Description\nApache/2.4.12 (Ubuntu) Server at (my ip) Port 80</em></p>\n\n<p>So something has gone wrong, i suppose. I checked and my virtual website files are still there under /etc/apache2/sites-available and /sites-enabled.</p>\n\n<p>I checked the history.log file under /var/log/apt and i see the following lines for the dist-upgrade process:</p>\n\n<blockquote>\n  <p>Blockquote\n  Start-Date: 2015-07-25  02:48:59\n  Commandline: apt-get dist-upgrade\n  <strong>Install:</strong> libterm-readkey-perl:amd64 (2.30-4build3, automatic), php5-readline:amd64 (5.5.27+dfsg-1+deb.sury.org~precise+1, automatic), update-manager-core:amd64 (0.156.14.19, automatic), libqdbm14:amd64 (1.8.78-1build2, automatic), libjson-c2:amd64 (0.11-4+deb.sury.org~precise+1, automatic), libonig2:amd64 (5.9.1-1, automatic), libvpx1:amd64 (1.0.0-1, automatic), libgd3:amd64 (2.1.0-5+deb.sury.org~precise+1, automatic), python-configobj:amd64 (4.7.2+ds-3build1, automatic), apache2-bin:amd64 (2.4.12-1+deb.sury.org~precise+5, automatic), apache2-data:amd64 (2.4.12-1+deb.sury.org~precise+5, automatic), php5-json:amd64 (1.3.7-1+deb.sury.org~precise+1, automatic)\n  <strong>Upgrade:</strong> update-notifier-common:amd64 (0.119ubuntu8.6, 0.119ubuntu8.7), php5:amd64 (5.3.10-1ubuntu3.19, 5.5.27+dfsg-1+deb.sury.org~precise+1), libapache2-mod-php5:amd64 (5.3.10-1ubuntu3.19, 5.5.27+dfsg-1+deb.sury.org~precise+1), mysql-server-core-5.5:amd64 (5.5.31-0ubuntu0.12.04.1, 5.5.44-0ubuntu0.12.04.1), apache2-mpm-prefork:amd64 (2.2.22-1ubuntu1.9, 2.4.12-1+deb.sury.org~precise+5), php5-gd:amd64 (5.3.10-1ubuntu3.19, 5.5.27+dfsg-1+deb.sury.org~precise+1), apache2:amd64 (2.2.22-1ubuntu1.9, 2.4.12-1+deb.sury.org~precise+5), php5-imagick:amd64 (3.1.0~rc1-1, 3.1.2-1+deb.sury.org~precise+2), apache2.2-common:amd64 (2.2.22-1ubuntu1.9, 2.4.12-1+deb.sury.org~precise+5), php5-curl:amd64 (5.3.10-1ubuntu3.19, 5.5.27+dfsg-1+deb.sury.org~precise+1), apache2.2-bin:amd64 (2.2.22-1ubuntu1.9, 2.4.12-1+deb.sury.org~precise+5), php5-mcrypt:amd64 (5.3.5-0ubuntu1, 5.5.27+dfsg-1+deb.sury.org~precise+1), php5-mysql:amd64 (5.3.10-1ubuntu3.19, 5.5.27+dfsg-1+deb.sury.org~precise+1), php5-cli:amd64 (5.3.10-1ubuntu3.19, 5.5.27+dfsg-1+deb.sury.org~precise+1), php5-common:amd64 (5.3.10-1ubuntu3.19, 5.5.27+dfsg-1+deb.sury.org~precise+1), mysql-server-5.5:amd64 (5.5.31-0ubuntu0.12.04.1, 5.5.44-0ubuntu0.12.04.1), mysql-client-5.5:amd64 (5.5.31-0ubuntu0.12.04.1, 5.5.44-0ubuntu0.12.04.1), landscape-common:amd64 (12.05-0ubuntu1.12.04, 14.12-0ubuntu0.12.04)\n  End-Date: 2015-07-25  02:51:15\n  Blockquote</p>\n</blockquote>\n\n<p>I really appreciate if someone who knows more and better help me about this issue, as now I am paralyzed :( .</p>\n"},{"id":663692,"title":"Run apt-get dist-upgrade from cronjob","body":"<p>I'm using a 64 bit Ubuntu 14.04 headless server &amp; I thought I had configured cronjob to automatically download updates by editing the <code>/etc/crontab</code> file &amp; adding this. </p>\n\n<pre><code>0 23 * * 3 root /usr/bin/apt-get dist-upgrade -q -y &gt;&gt; /var/log/apt/myupdates.log\n</code></pre>\n\n<p>However when I check the <code>myupdates.log</code> file I get this output</p>\n\n<pre><code>Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following NEW packages will be installed\n  linux-headers-3.13.0-62 linux-headers-3.13.0-62-generic\n  linux-image-3.13.0-62-generic linux-image-extra-3.13.0-62-generic\nThe following packages will be upgraded:\n  libsnmp-base libsnmp30 linux-generic linux-headers-generic\n  linux-image-generic linux-libc-dev openssh-client openssh-server\n  openssh-sftp-server\n9 to upgrade, 4 to newly install, 0 to remove and 0 not to upgrade.\n</code></pre>\n\n<p>I thought that it had run successfully but this morning less than 12 hours after the scheduled cronjob I logged on to the server and ran <code>apt-get upgrade-dist</code> and it downloaded 270MB of updates. </p>\n\n<p>Have I configured cronjob incorrectly? </p>\n\n<hr>\n\n<p>It seemed to run ok, I have it scheduled to run the apt-get dist-upgrade command on a Sunday &amp; Wednesday.</p>\n\n<p>However the text file that it created in /var/log/apt/myupdates.log hasn't been updated or over written when it ran again on Sunday night. </p>\n\n<p>The input in that text document is the output from the command being run on Wednesday, should that be a concern? </p>\n"},{"id":664554,"title":"Ubuntu 14.04 apt-get dist-upgrade error on bcmwl-kernel-source","body":"<p>A dist-update I just did hung (froze) after printing line:</p>\n\n<pre><code>DKMS: install completed.\n</code></pre>\n\n<p>I had to close the terminal to kill process, and to carry on did</p>\n\n<pre><code>sudo lsof /var/lib/dpkg/lock\nkill -15 THE-PID\nsudo dpkg --configure -a\n</code></pre>\n\n<p>The dpkg command above also hangs in same spot, but I did find through repeated efforts that I can Ctrl-C the dpkg command (after repeated lsof kill loops) and run other apt-get commands like update, check, clean, etc. but all result in a hand on same \"DKMS: install completed.\" statement, and the associated out is always like below:</p>\n\n<pre><code>$ sudo apt-get install bcmwl-kernel-source\n\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nbcmwl-kernel-source is already the newest version.\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\n3 not fully installed or removed.\nAfter this operation, 0 B of additional disk space will be used.\nDo you want to continue? [Y/n] Y\nSetting up bcmwl-kernel-source (6.30.223.248+bdcom-0ubuntu0.1) ...\nRemoving old bcmwl-6.30.223.248+bdcom DKMS files...\n\n-------- Uninstall Beginning --------\nModule:  bcmwl\nVersion: 6.30.223.248+bdcom\nKernel:  3.13.0-24-generic (x86_64)\n-------------------------------------\n\nStatus: Before uninstall, this module version was ACTIVE on this kernel.\n\nwl.ko:\n - Uninstallation\n - Deleting from: /lib/modules/3.13.0-24-generic/updates/dkms/\n - Original module\n - No original module was found for this module on this kernel.\n - Use the dkms install command to reinstall any previous module version.\n\ndepmod....\n\nDKMS: uninstall completed.\n\n------------------------------\nDeleting module version: 6.30.223.248+bdcom completely from the DKMS tree.\n------------------------------\nDone.\nLoading new bcmwl-6.30.223.248+bdcom DKMS files...\nBuilding only for 3.13.0-24-generic\nBuilding for architecture x86_64\nBuilding initial module for 3.13.0-24-generic\nDone.\n\nwl:\nRunning module version sanity check.\n - Original module\n - No original module exists within this kernel\n - Installation\n - Installing to /lib/modules/3.13.0-24-generic/updates/dkms/\n\ndepmod....\nDKMS: install completed.\n</code></pre>\n\n<p>[Start Update @Pilot6 below] While there are no errors in the output above I do suspect that something is definitely out of wack with kernel setup. When I Ctrl-C out of another apt-get command (after doing another lsof, kill, dpkg iteration) I get output below which suggest configuration not correct. Still hesitant to reboot.</p>\n\n<pre><code>^Cdpkg: error processing package bcmwl-kernel-source (--configure):\n subprocess installed post-installation script was interrupted\nSetting up fglrx-updates (2:15.200-0ubuntu0.5) ...\nupdate-alternatives: warning: forcing reinstallation of alternative /usr/lib/fglrx/ld.so.conf because link group x86_64-linux-gnu_gl_conf is broken\nupdate-alternatives: error: unable to remove '/etc/ati': Is a directory\ndpkg: error processing package fglrx-updates (--configure):\n subprocess installed post-installation script returned error exit status 2\ndpkg: dependency problems prevent configuration of fglrx-amdcccle updates:\n fglrx-amdcccle-updates depends on fglrx-updates; however:\n  Package fglrx-updates is not configured yet.\n\ndpkg: error processing package fglrx-amdcccle-updates (--configure):\n dependency problems - leaving unconfigured\nErrors were encountered while processing: bcmwl-kernel-source\n fglrx-updates\n fglrx-amdcccle-updates\n</code></pre>\n\n<p>I see bcmwl above which looks like code for my Broadcomm Wireless expansion card...</p>\n\n<p>[End Update]\nI dont think reboot is right answer here. Might not boot at all!\nGad Zooks! Any tips &amp; tricks?</p>\n\n<p>Probably should have commands below before update/upgrade but only hind sight is 20/20</p>\n\n<pre><code>sudo apt-get autoclean\nsudo apt-get autoremove\n</code></pre>\n\n<p>Thanks,\nBrad</p>\n"},{"id":194651,"title":"Why use apt-get upgrade instead of apt-get dist-upgrade?","body":"<p>I usually use <code>apt-get update &amp;&amp; apt-get upgrade</code> to run my updates and upgrades instead of the GUI because it seems to run more quickly. </p>\n\n<p>However, I've noticed lately that I often get a message that one of my upgrades was held back. I then usually run <code>dist-upgrade</code> to run it through and it works fine. As far as I can tell after reading <a href=\"http://askubuntu.com/questions/81585/what-is-dist-upgrade-and-why-does-it-upgrade-more-than-upgrade\">this question</a> and its answers, <code>dist-upgrade</code> does all the same things and then some. </p>\n\n<p>So, my question is: Why use <code>apt-get upgrade</code> at all? Why not use <code>apt-get dist-upgrade</code> all the time? Why does <code>apt-get upgrade</code> even exist?</p>\n"},{"id":620312,"title":"How do I ensure an lts upgrade from 13.10 to 14.04?","body":"<blockquote>\n  <p>I am upgrading from 13.10 to 14.04 in Terminal mode. </p>\n</blockquote>\n\n<p>My understanding is that apt-get update updates the list of available repos, and apt-get upgrade performs the upgrade. It's true that I did not understand the difference between <code>sudo apt-get upgrade</code> and <code>do-release-upgrade</code>. Thanks for explaining this point.</p>\n\n<p>To clarify my process, Muon Update Manager could not download any data, regardless of the settings I used, and believe me, I tried them all.</p>\n\n<p>So I decided to work exclusively in Terminal, which helps my understanding when things get a bit complicated.</p>\n\n<p>Initially, I tried <code>do-release-upgrade</code>, which gave an error message.</p>\n\n<blockquote>\n  <p>In order to perform <code>sudo apt-get update</code>, I needed to set `Prompt=normal.</p>\n</blockquote>\n\n<p>I researched this online, and similar to the experience of others, at least in 13.10, <code>sudo apt-get update</code> would not run, with <code>Prompt=lts</code>. With <code>Prompt=normal</code>, it did.</p>\n\n<blockquote>\n  <p><code>sudo apt-get update</code> completed successfully (after much tweaking of existing repos in <code>sources.list.d</code> and <code>sources.list</code>).</p>\n</blockquote>\n\n<p>At first, running <code>sudo apt-get update</code> resulted in numerous errors.</p>\n\n<p>Online research discovered several very similar situations which indicated that third-party ppa's can block <code>sudo apt-get update</code>.</p>\n\n<p>Each time I deleted an entry from <code>sources-list.d</code>, <code>apt-get update</code> got a little further. As there were only four entries, all for third-party apps I don't really need, I ended up deleting them all, i.e., <code>sources-list.d</code> is now empty.</p>\n\n<p>When I looked at sources-list, I discovered it was a real mess (created by Update Manager), with several duplicate entries, a few bastardized entries, and archives from different locations. I'm in Canada, by the way.</p>\n\n<p>I researched online and found an example of a pristine sources-list, then altered mine to match, commenting out the entries I did not want.</p>\n\n<p>My sources-list now contains no references to \"saucy\", and is set to download only \"trusty\", \"trusty-upgrades\", and \"trust-security\".</p>\n\n<p>Here it is (http's altered to avoid live links, comments indicated by \"--\" to avoid accidental bolding):</p>\n\n<pre><code>fiteyes@fiteyes-wr:~$ cat /etc/apt/sources.list  \n-- deb cdrom:[Kubuntu 12.04 LTS _Precise Pangolin_ - Release i386 (20120423)]/ precise main restricted  \n-- See -ttp://help.ubuntu.com/community/UpgradeNotes for how to upgrade to\n-- newer versions of the distribution. \n\ndeb -ttp://ca.archive.ubuntu.com/ubuntu/ trusty main restricted  \ndeb-src -ttp://ca.archive.ubuntu.com/ubuntu/ trusty main restricted  \n\n-- Major bug fix updates produced after the final release of the  \n-- distribution.  \n\ndeb -ttp://ca.archive.ubuntu.com/ubuntu/ trusty-updates main restricted  \ndeb-src -ttp://ca.archive.ubuntu.com/ubuntu/ trusty-updates main restricted  \n\n-- N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu  \n-- team. Also, please note that software in universe WILL NOT receive any  \n-- review or updates from the Ubuntu security team.  \n-- deb -ttp://ca.archive.ubuntu.com/ubuntu/ trusty universe  \n-- deb-src -ttp://ca.archive.ubuntu.com/ubuntu/ trusty universe  \n-- deb -ttp://ca.archive.ubuntu.com/ubuntu/ trusty-updates universe  \n-- deb-src -ttp://ca.archive.ubuntu.com/ubuntu/ trusty-updates universe  \n-- N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu  \n-- team, and may not be under a free licence. Please satisfy yourself as to  \n-- your rights to use the software. Also, please note that software in  \n-- multiverse WILL NOT receive any review or updates from the Ubuntu  \n-- security team.  \n-- deb -ttp://ca.archive.ubuntu.com/ubuntu/ trusty multiverse  \n-- deb-src -ttp://ca.archive.ubuntu.com/ubuntu/ trusty multiverse  \n-- deb -ttp://ca.archive.ubuntu.com/ubuntu/ trusty-updates multiverse  \n-- deb-src -ttp://ca.archive.ubuntu.com/ubuntu/ trusty-updates multiverse  \n-- Uncomment the following two lines to add software from the 'backports'  \n-- repository  \n-- N.B. software from this repository may not have been tested as  \n-- extensively as that contained in the main release, although it includes  \n-- newer versions of some applications which may provide useful features.  \n-- Also, please note that software in backports WILL NOT receive any review  \n-- or updates from the Ubuntu security team.  \n-- deb -ttp://ca.archive.ubuntu.com/ubuntu/ Trusty-backports main restricted  universe multiverse  \n-- deb-src -ttp://ca.archive.ubuntu.com/ubuntu/ Trusty-backports main  restricted universe multiverse  \n-- Uncomment the following two lines to add software from Canonical's  \n-- 'partner' repository.  \n-- This software is not part of Ubuntu, but is offered by Canonical and the  \n-- respective vendors as a service to Ubuntu users.  \n-- deb -ttp://archive.canonical.com/ubuntu trusty partner  \n-- deb-src -ttp://archive.canonical.com/ubuntu trusty partner  \n\ndeb -ttp://ca.archive.ubuntu.com/ubuntu/ trusty-security main restricted  \ndeb-src -ttp://ca.archive.ubuntu.com/ubuntu/ trusty-security main restricted  \n\n-- deb -ttp://ca.archive.ubuntu.com/ubuntu/ trusty-security universe  \n-- deb-src -ttp://ca.archive.ubuntu.com/ubuntu/ trusty-security universe  \n-- deb -ttp://ca.archive.ubuntu.com/ubuntu/ trusty-security multiverse  \n-- deb-src -ttp://ca.archive.ubuntu.com/ubuntu/ trusty-security multiverse  \n-- This software is not part of Ubuntu, but is offered by third-party  \n-- developers who want to ship their latest software.  \n-- deb -ttp://archive.ubuntu.com/ubuntu/ trusty main  \n-- deb-src -ttp://archive.ubuntu.com/ubuntu/ trusty main  \n-- deb -ttp://archive.ubuntu.com/ubuntu/ trusty, trusty-updates, trusty-security  \n-- deb-src -ttp://archive.ubuntu.com/ubuntu/ trusty, trusty-updates, trusty-security  \nfiteyes@fiteyes-wr:~$  \n\nsudo apt-get update now ran without errors.\n\nHere are the results:\n\nfiteyes@fiteyes-wr:~$ sudo apt-get update  \nIgn -ttp://ca.archive.ubuntu.com trusty InRelease  \nIgn -ttp://ca.archive.ubuntu.com trusty-updates InRelease  \nIgn -ttp://ca.archive.ubuntu.com trusty-security InRelease  \nGet:1 -ttp://ca.archive.ubuntu.com trusty Release.gpg [933 B]  \nGet:2 -ttp://ca.archive.ubuntu.com trusty-updates Release.gpg [933 B]  \nGet:3 -ttp://ca.archive.ubuntu.com trusty-security Release.gpg [933 B]  \nGet:4 -ttp://ca.archive.ubuntu.com trusty Release [58.5 kB]  \nGet:5 -ttp://ca.archive.ubuntu.com trusty-updates Release [63.5 kB]  \nGet:6 -ttp://ca.archive.ubuntu.com trusty-security Release [63.5 kB]  \nGet:7 -ttp://ca.archive.ubuntu.com trusty/main Sources [1,064 kB]  \nGet:8 -ttp://ca.archive.ubuntu.com trusty/restricted Sources [5,433 B]  \nGet:9 -ttp://ca.archive.ubuntu.com trusty/main i386 Packages [1,348 kB]  \nGet:10 -ttp://ca.archive.ubuntu.com trusty/restricted i386 Packages [13.4 kB]  \nGet:11 -ttp://ca.archive.ubuntu.com trusty/main Translation-en_CA [7,324 B]  \nGet:12 -ttp://ca.archive.ubuntu.com trusty/main Translation-en [762 kB]  \nGet:13 -ttp://ca.archive.ubuntu.com trusty/restricted Translation-en [3,457 B]  \nGet:14 -ttp://ca.archive.ubuntu.com trusty-updates/main Sources [196 kB]  \nGet:15 -ttp://ca.archive.ubuntu.com trusty-updates/restricted Sources [2,564 B]                                                                 \nGet:16 -ttp://ca.archive.ubuntu.com trusty-updates/main i386 Packages [500 kB]                                                                \nGet:17 -ttp://ca.archive.ubuntu.com trusty-updates/restricted i386 Packages [9,256 B]                                                        \nGet:18 -ttp://ca.archive.ubuntu.com trusty-updates/main Translation-en [243 kB]                                                             \nGet:19 -ttp://ca.archive.ubuntu.com trusty-updates/restricted Translation-en [2,433 B]                                                        \nGet:20 -ttp://ca.archive.ubuntu.com trusty-security/main Sources [80.2 kB]                                                                    \nGet:21 -ttp://ca.archive.ubuntu.com trusty-security/restricted Sources [2,061 B]                                                              \nGet:22 -ttp://ca.archive.ubuntu.com trusty-security/main i386 Packages [256 kB]                                                               \nGet:23 -ttp://ca.archive.ubuntu.com trusty-security/restricted i386 Packages [8,846 B]                                                        \nGet:24 -ttp://ca.archive.ubuntu.com trusty-security/main Translation-en [136 kB]                                                              \nGet:25 -ttp://ca.archive.ubuntu.com trusty-security/restricted Translation-en [2,266 B]                                                       \nIgn -ttp://ca.archive.ubuntu.com trusty/restricted Translation-en_CA                                                                          \nFetched 4,830 kB in 23s (206 kB/s)                                                                                                         \nReading package lists... Done\n</code></pre>\n\n<blockquote>\n  <p>Please note: this is a basic upgrade, no third-party ppa's (except possibly a grub editor, which I will add later).</p>\n  \n  <p>I am concerned that running <code>sudo apt-get upgrade</code> now will take me all the way to 14.10, which I do not want.</p>\n  \n  <p>Will changing update-manager back to \"Prompt=lts\" at this point, ensure I get 14.04, or will that even work now that the \"trusty\" files have been downloaded?</p>\n  \n  <p>I've searched through the duplicates and see nothing that answers this specific question.</p>\n  \n  <p>I cannot do a fresh install, because I will lose valuable, remotely installed, health related software.</p>\n  \n  <p>Any knowledgeable input appreciated.</p>\n  \n  <p>Thanks</p>\n</blockquote>\n\n<p>Thanks very much for your response thus far, Thomas. You've been very helpful. I have three follow-up questions:</p>\n\n<ol>\n<li><p>Given what I've now explained, do you still recommend running do-release-upgrade.</p></li>\n<li><p>For my edification, based on what I've now explained, what would sudo apt-get upgrade do?</p></li>\n<li><p>My desire is to upgrade to 14.04 while keeping the app that was installed remotely in tact. Which of these methods, if either, will accomplish this?</p></li>\n</ol>\n\n<p>Again, much appreciated. Look forward to your response. :)</p>\n"},{"id":532840,"title":"After performing apt-get dist-upgrade Perl scripts will no longer ignore invalid SSL certificates on 14.04","body":"<p>Good morning all,</p>\n\n<p>Last week I decided to run the commands to upgrade packages on my 14.04 Server to ensure that I was patched for the recently found Bash vulnerabilties.  Per the info here (<a href=\"http://www.ubuntu.com/usn/usn-2362-1/\" rel=\"nofollow\">http://www.ubuntu.com/usn/usn-2362-1/</a>) I ran an apt-get dist-upgrade. For reference, i ran apt-get update, apt-get dist-upgrade and then apt-get upgrade to try &amp; make sure I had everything up to the latest versions (I routinely run the apt-get upgrade though).</p>\n\n<p>After successfully doing this, I found that a number of my Perl scripts were no longer functioning.  For reference, I use this server for Nagios to monitor all of my other servers.  The scripts in question that are now failing all connect to a system via https, log into the host and query various bits of information.  </p>\n\n<p>Prior to the upgrade, I was able to add a line to each of my Perl scripts to make it ignore the SSL:</p>\n\n<pre><code>$ENV{PERL_LWP_SSL_VERIFY_HOSTNAME} = 0 } \n</code></pre>\n\n<p>However, after the upgrade, this seems to have no affect, and the scripts all fail because they can't verify the SSL certs (all self signed).</p>\n\n<p>Here's some snips of what I'm seeing:</p>\n\n<p>script execution:</p>\n\n<pre><code>    nagios@nagios:/usr/local/nagios/libexec$ ./check_esx.pl -H 192.168.22.18 -u root -p password -l cpu\nCHECK_ESX.PL CRITICAL - Can't connect to 192.168.22.18:443 (certificate verify failed)\n\nLWP::Protocol::https::Socket: SSL connect attempt failed error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed at /usr/share/perl5/LWP/Protocol/http.pm line 41.\n</code></pre>\n\n<p>This particular Perl script utilizes the \"VMware Infrastructure (VI) Perl Toolkit\" to function.  The script that I'm calling, check_esx.pl is available <a href=\"http://exchange.nagios.org/directory/Plugins/Operating-Systems/*-Virtual-Environments/VMWare/Vmware-ESX-%26-VM-host/details\" rel=\"nofollow\">here</a></p>\n\n<p>Here's a snip of the file http.pm around the line referenced in the above error; line 41 is the \"die\" line.</p>\n\n<pre><code>sub _new_socket\n{\n    my($self, $host, $port, $timeout) = @_;\n\n    local($^W) = 0;  # IO::Socket::INET can be noisy\n    my $sock = $self-&gt;socket_class-&gt;new(PeerAddr =&gt; $host,\n                                        PeerPort =&gt; $port,\n                                        LocalAddr =&gt; $self-&gt;{ua}{local_address},\n                                        Proto    =&gt; 'tcp',\n                                        Timeout  =&gt; $timeout,\n                                        KeepAlive =&gt; !!$self-&gt;{ua}{conn_cache},\n                                        SendTE    =&gt; 1,\n                                        $self-&gt;_extra_sock_opts($host, $port),\n                                       );\n\n    unless ($sock) {\n        # IO::Socket::INET leaves additional error messages in $@\n        my $status = \"Can't connect to $host:$port\";\n        if ($@ =~ /\\bconnect: (.*)/ ||\n            $@ =~ /\\b(Bad hostname)\\b/ ||\n            $@ =~ /\\b(certificate verify failed)\\b/ ||\n            $@ =~ /\\b(Crypt-SSLeay can't verify hostnames)\\b/\n        ) {\n            $status .= \" ($1)\";\n        }\n        die \"$status\\n\\n$@\";\n    }\n\n    # perl 5.005's IO::Socket does not have the blocking method.\n    eval { $sock-&gt;blocking(0); };\n\n    $sock;\n}\n</code></pre>\n\n<p>So I guess what I'm looking for here is one of two things</p>\n\n<p>Either:\n (A) Is there a new/better/more correct way to make Perl ignore the SSL certs? or\n (B) Is there a way to import a self signed SSL cert from another host into Ubuntu so that the Perl script will recognize &amp; trust it? Alternatively:\n (B-2) Is there a way to make Ubuntu recognize my windows active directory Cert Authority such that I could issue SSL certs from my CA to the systems in question, and have it recognized by the Perl scripts?</p>\n\n<p>Thanks in advance everyone!</p>\n"},{"id":360488,"title":"Upgrade from Ubuntu 13.04 to 13.10 stuck at Restoring Previously Installed Packages","body":"<p>As the title says, I have tried to upgrade to Ubuntu 13.10 by LiveUSB and the install has frozen at 'Restoring Previously Installed Packages'. Has been stuck at this point for almost 2 hours.. When I expand the terminal for the install details, nothing seems to be downloading (which could cause this time delay) and the only activity is from when I connected and disconnected from the wireless network..</p>\n\n<p>Any suggestions?</p>\n"},{"id":99033,"title":"What is the difference between apt-get upgrade and apt-get dist-upgrade?","body":"<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://askubuntu.com/questions/81585/what-is-dist-upgrade-and-why-does-it-upgrade-more-than-upgrade\">What is &ldquo;dist-upgrade&rdquo; and why does it upgrade more than &ldquo;upgrade&rdquo;?</a>  </p>\n</blockquote>\n\n\n\n<p>Some say that dist-upgrade is to upgrade the distribution... Actually, that's not true... Its an old story...</p>\n\n<p>The man pages say that 'upgrade' will update the packages without touching the dependencies and 'dist-upgrade' will also touch the dependencies and remove them if it wants to.</p>\n\n<p>I can't fully understand this... Can some one please make this clear? A full explanation? Is it a risk to use dist-upgrade? Why do we have two commands like this?</p>\n\n<p>Thanks in advance...</p>\n"}]}]