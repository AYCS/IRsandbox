[{"id":715300,"title":"lesspipe error every new terminal","body":"<p>Everytime I open a new terminal session, there's an error that greets me:</p>\n\n<pre><code>/usr/bin/lesspipe: 1: /usr/bin/lesspipe: basename: not found\n/usr/bin/lesspipe: 295: [: =: unexpected operator\njunjie@Amamangi:~$\n</code></pre>\n\n<p>They were not there when I installed this OS some days ago.. and I believe this was a by-product of something I installed. The first time I saw them, I just ignored them because I was busy, until OCD attacked me today.</p>\n\n<p>I'm new in Ubuntu and I hope someone can point me in the right direction so I can remove this eyesore.</p>\n","related_questions":[{"id":401009,"title":"Command to open new terminal window from the current terminal?","body":"<p>I installed xdotool by running <code>sudo apt-get install xdotool</code> and throw  <code>xdotool key ctrl+alt+t</code> command to open a new terminal window from the current one.But it was not working.</p>\n\n<p>What was the command to open a new terminal window from the current gnome-terminal?</p>\n"},{"id":62441,"title":"Is there a way to open 4 terminal windows every time I login?","body":"<p>I want to open four terminal windows into the first pane (upper left-hand side) when ubuntu boots.  I have two terminal profiles: default and Mail.  I want two of the windows Mail windows, and the other two to use the default profile.  It would also be nice if I could get the terminals to ssh to where I manually send them every time I boot up.</p>\n\n<p>Is there a way to do this?  If so, what is it in English?  I am not a computer programmer or an expert user and i can't even tell whether I'm using unity, so please gear your answer accordingly.  Thank you!</p>\n"},{"id":440777,"title":"Force every new terminal to open in new tab","body":"<p>I have the habit of opening a terminal using the \"Open terminal here\" command in folders. This causes a few terminals to remain open while I don't really use them anymore, or I get confused which terminal was serving which purpose.</p>\n\n<p>I know I can label terminal tabs and such, but can I force a new terminal that is being openened, to become a new tab in a terminal screen (if there is one open already?) This way I always have them tabbed in a single terminal.</p>\n\n<p><strong>EDIT</strong>\nOkay, so it's been a while and my linux mojo has improved a lot. So the current solution to this situation for me has been using <code>tmux</code>. It's a little more advanced than regular terminals and tabs but once I got the hang of it (about an hour of trying) I'm very pleased with the way of going about things. </p>\n\n<p>First of all, I made sure that whenever I opened a terminal using <code>ctrl-alt-t</code>, it would open tmux by default. This can be achieved by adding the following line in your <code>.bashrc</code> file after all the aliases:</p>\n\n<pre><code>[[ $TERM != \"screen\" ]] &amp;&amp; exec 'tmux\n</code></pre>\n\n<p>Now everytime you spawn a terminal using <code>ctrl-alt-t</code> you will be presented with a <code>tmux</code>.</p>\n\n<p>To make sure you only have one terminal open at the same time I did the following:</p>\n\n<p>First of all, you can reattach a session in <code>tmux</code> by running <code>tmux attach -d</code>. This will disconnect all other clients connected to this session. This works fine <strong>if you are the only person using the sessions.</strong></p>\n\n<p>But, if you don't have a session running it will say it did not find any sessions. Ergo, you need something like if(nosession) { tmux } else { tmux attach -d }. To do this create of append to your <code>~/.tmux.conf</code> file the following line:</p>\n\n<pre><code>#if run as \"tmux attach\", create a session if one does not already exist\nnew-session -n $HOST\n</code></pre>\n\n<p>(Thanks to <a href=\"http://unix.stackexchange.com/questions/103898/how-to-start-tmux-with-attach-if-a-session-exists\">this post</a>)</p>\n\n<p>In my <code>.bashrc</code> file, I changed the line added previously to the following:</p>\n\n<pre><code>[[ $TERM != \"screen\" ]] &amp;&amp; exec 'tmux attach -d'\n</code></pre>\n\n<p>What this does is detach all other clients from the <code>tmux</code> session. When you do this, all other terminals close. They close because this line also makes sure that when you open a terminal (ctrl-alt-t), it immediatly starts a tmux session.</p>\n\n<p>Ergo, <code>attach -d</code> kills the other sessions. So this is the closest fix I could get and I'm rather happy with it! :)</p>\n\n<p>The only thing I would still like is that when I press <code>ctrl-alt-t</code> it opens up my current session and also creates a new window. I haven't figured that out yet so feel free to help!</p>\n"},{"id":455133,"title":"From Terminal-1, Create new terminal, execute command (e.g: start JBoss), come back to Terminal-1","body":"<p>As Stated in the title, I want to start a new terminal from (say) Terminal-1. The new Terminal will execute a command (Say, start JBoss). And after starting JBoss, there will be JBoss log in Terminal-2, so i dont want to stay there as I have some other tasks to do. I want the control back to Terminal-1, so I can execute other commands. I am running script.</p>\n\n<p>Example scenario:\nRunning a script where i need to:\n(1) Install JBoss\n(2) Start JBoss\n(3) Deploy a code in jboss as.</p>\n\n<p>NOTE: Creating a new Terminal is not a problem. I can follow <a href=\"http://askubuntu.com/questions/46627/how-can-i-make-a-script-that-opens-terminal-windows-and-executes-commands-in-the\">this</a>. The problem is to come back to the primary terminal for executing further command.</p>\n"},{"id":351215,"title":"why can&#39;t I create a new gnome terminal profile or edit one?","body":"<p>When I create a new gnome profile, it isn't saved when I hit close. When I create a new gnome profile, I can't edit the preferences to change things like the colour, font, etc., either. I also can't change the default ones in the same way. All the options are greyed out. Would anyone know why this would be?</p>\n"},{"id":437324,"title":"Terminal error bash:export","body":"<p>Whenever I open terminal I get this error: </p>\n\n<blockquote>\n  <p>bash: export: `PATHhome/amol/Downloads/adt-bundle-linux-x86_64-20131030/sdk/tools': not a valid identifier</p>\n</blockquote>\n\n<p>what does it mean and how can i do to remove this error?</p>\n\n<pre><code># ~/.bashrc: executed by bash(1) for non-login shells.\n# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)\n# for examples\n\n# If not running interactively, don't do anything\n[ -z \"$PS1\" ] &amp;&amp; return\n\n# don't put duplicate lines in the history. See bash(1) for more options\n# ... or force ignoredups and ignorespace\nHISTCONTROL=ignoredups:ignorespace\n\n# append to the history file, don't overwrite it\nshopt -s histappend\n\n# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)\nHISTSIZE=1000\nHISTFILESIZE=2000\n\n# check the window size after each command and, if necessary,\n# update the values of LINES and COLUMNS.\nshopt -s checkwinsize\n\n# make less more friendly for non-text input files, see lesspipe(1)\n[ -x /usr/bin/lesspipe ] &amp;&amp; eval \"$(SHELL=/bin/sh lesspipe)\"\n\n# set variable identifying the chroot you work in (used in the prompt below)\nif [ -z \"$debian_chroot\" ] &amp;&amp; [ -r /etc/debian_chroot ]; then\n    debian_chroot=$(cat /etc/debian_chroot)\nfi\n\n# set a fancy prompt (non-color, unless we know we \"want\" color)\ncase \"$TERM\" in\n    xterm-color) color_prompt=yes;;\nesac\n\n# uncomment for a colored prompt, if the terminal has the capability; turned\n# off by default to not distract the user: the focus in a terminal window\n# should be on the output of commands, not on the prompt\n#force_color_prompt=yes\n\nif [ -n \"$force_color_prompt\" ]; then\n    if [ -x /usr/bin/tput ] &amp;&amp; tput setaf 1 &gt;&amp;/dev/null; then\n    # We have color support; assume it's compliant with Ecma-48\n    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such\n    # a case would tend to support setf rather than setaf.)\n    color_prompt=yes\n    else\n    color_prompt=\n    fi\nfi\n\nif [ \"$color_prompt\" = yes ]; then\n    PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ '\nelse\n    PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ '\nfi\nunset color_prompt force_color_prompt\n\n# If this is an xterm set the title to user@host:dir\ncase \"$TERM\" in\nxterm*|rxvt*)\n    PS1=\"\\[\\e]0;${debian_chroot:+($debian_chroot)}\\u@\\h: \\w\\a\\]$PS1\"\n    ;;\n*)\n    ;;\nesac\n\n# enable color support of ls and also add handy aliases\nif [ -x /usr/bin/dircolors ]; then\n    test -r ~/.dircolors &amp;&amp; eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n    alias ls='ls --color=auto'\n    #alias dir='dir --color=auto'\n    #alias vdir='vdir --color=auto'\n\n    alias grep='grep --color=auto'\n    alias fgrep='fgrep --color=auto'\n    alias egrep='egrep --color=auto'\nfi\n\n# some more ls aliases\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'\n\n# Alias definitions.\n# You may want to put all your additions into a separate file like\n# ~/.bash_aliases, instead of adding them here directly.\n# See /usr/share/doc/bash-doc/examples in the bash-doc package.\n\nif [ -f ~/.bash_aliases ]; then\n    . ~/.bash_aliases\nfi\n\n# enable programmable completion features (you don't need to enable\n# this, if it's already enabled in /etc/bash.bashrc and /etc/profile\n# sources /etc/bash.bashrc).\n#if [ -f /etc/bash_completion ] &amp;&amp; ! shopt -oq posix; then\n#    . /etc/bash_completion\n#fi\n</code></pre>\n\n<h2>cat /etc/profile</h2>\n\n<p>bash: export: `PATHhome/amol/Downloads/adt-bundle-linux-x86_64-20131030/sdk/tools': not a valid identifier\namol@4M01:~$ sudo -i\n[sudo] password for amol: \nroot@4M01:~# cat /etc/profile</p>\n\n<h1>/etc/profile: system-wide .profile file for the Bourne shell (sh(1))</h1>\n\n<h1>and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).</h1>\n\n<p>if [ \"$PS1\" ]; then\n  if [ \"$BASH\" ] &amp;&amp; [ \"$BASH\" != \"/bin/sh\" ]; then\n    # The file bash.bashrc already sets the default PS1.\n    # PS1='\\h:\\w\\$ '\n    if [ -f /etc/bash.bashrc ]; then\n      . /etc/bash.bashrc\n    fi\n  else\n    if [ \"<code>id -u</code>\" -eq 0 ]; then\n      PS1='# '\n    else\n      PS1='$ '\n    fi\n  fi\nfi</p>\n\n<h1>The default umask is now handled by pam_umask.</h1>\n\n<h1>See pam_umask(8) and /etc/login.defs.</h1>\n\n<p>if [ -d /etc/profile.d ]; then\n  for i in /etc/profile.d/*.sh; do\n    if [ -r $i ]; then\n      . $i\n    fi\n  done\n  unset i\nfi</p>\n"},{"id":375460,"title":"My gnome terminal keep opening new window","body":"<p>I actually want to change the default window position of <strong>gnome-terminal</strong> in my Ubuntu 12.04 system. </p>\n\n<p>After some search, I found some one else use the command <code>gnome-terminal --geometry=120x80+50+50</code> to set the default position. </p>\n\n<p>And I actually don't know where to paste the command, so I pasted it to 'custome command' field of terminal's profile.</p>\n\n<p>Now when I open one terminal, it just keep opening new ones and I have no way to stop it other than <kbd>ctrl</kbd>+<kbd>C</kbd>.</p>\n\n<p>I even removed  <code>.gconf/gnome-termial/</code> folder and it didn't worked.</p>\n\n<p>Can someone help me?</p>\n"},{"id":314481,"title":"When opening new terminal window, how to tell it to open full screen?","body":"<p>Just as in the title. I find myself often opening new terminal window (not tab) from terminal. Is there a way to specify so that the new window opens maximized? </p>\n\n<p>I looked at -geometry option, but only found a way to set the offsets with it, and not how to tell it to me maximized. </p>\n"},{"id":195961,"title":"Terminal Broken","body":"<p>I've been using Ubuntu for about a week now. I logged in today and launched the terminal I got presented a whole list of errors. I've tried to chsh but it won't recognise the command. Nor all other common ones. </p>\n\n<p>Any ideas?</p>\n\n<p><img src=\"http://i.stack.imgur.com/NsVfF.png\" alt=\"http://oi48.tinypic.com/2zxt93d.jpg\"></p>\n\n<p>Extra info:\n$PATH:</p>\n\n<pre><code>/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/home/jorden/android-sdk-linux/tools:/home/jorden/android-sdk-l\n</code></pre>\n"},{"id":160832,"title":"How to make the terminal export a specific environment variable at every load?","body":"<p>I would like to run the script</p>\n\n<pre><code>PS1=\"┌─[\\u@\\h:]\\n└─&gt; \"\n</code></pre>\n\n<p>In the terminal every time it's opened, but I can't figure out how to.</p>\n"}]}]