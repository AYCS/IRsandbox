[{"id":715276,"title":"How to get the name of connected ios phone in Linux using command","body":"<p>How to get the name of connected ios device name in Linux, or c++ programming. basically, I use the Qt in Linux. and I want to get the name of the connected device name. after a searching in google we met a UIdevice class. By writing UIDevice.currentDevice().name we get the name of the iPhone. but the UIdevice is a class of Objective C. I also follow the following steps: - reference - <a href=\"https://wiki.qt.io/IOS_device_info\" rel=\"nofollow\">https://wiki.qt.io/IOS_device_info</a></p>\n\n<p>All methods, usage Objective-C code. You could use Objective-C in your application on C++. All you need it, just add new class with header *. h and implementation file *. mm. Then add this file to you *.pro using special keywords:</p>\n\n<p>OBJECTIVE_HEADERS += \\\n    Helpers/iOS/redminedevicehelper.h</p>\n\n<p>OBJECTIVE_SOURCES += \\\n    Helpers/iOS/redminedevicehelper.mm</p>\n\n<p>Also, you need to use frameworks to get access to basic Objective-C classes and methods:</p>\n\n<pre><code>UIKit\n\n#import &lt;UIKit/UIKit.h&gt;\n\nFoundation\n\n#import &lt;Foundation/Foundation.h&gt;\n</code></pre>\n\n<p>In the *.pro file you need add this framework as a library:</p>\n\n<p>LIBS += -framework Foundation -framework CoreFoundation -framework UIKit\nHow to access the UIDevice class in qt.</p>\n\n<p>But nothing done.</p>\n\n<p>Please help me..if any one know about this. Sorry for my Bad English.\n<strong>I installed the libimobiledevice packages in Linux.</strong></p>\n\n<p><strong><em>Thanks,</em></strong>\nRam Kumar.</p>\n","related_questions":[{"id":666239,"title":"How to stop Unity on the phone so it doesn&#39;t restart?","body":"<p>How to bring down the Ubuntu Phone GUI so I can test some Qt stuff?</p>\n\n<p>I figured that it's easy to put arbitrary Qt versions into home dir and run them without messing with the main installation. But I failed to make them use the Mir integration (<code>libqpa-ubuntumirclient.so</code>):</p>\n\n<blockquote>\n  <p>This application failed to start because it could not find or load the Qt platform plugin \"ubuntumirclient\".</p>\n</blockquote>\n\n<p>The eglfs mode works fine, except it's fighting with Unity for the GL.</p>\n\n<p><strong>update</strong></p>\n\n<p>Stopped <code>lightdm</code>, it turned off the screen so no one gets it...</p>\n"},{"id":641991,"title":"How to get and install qt header and libraries in specific folder?","body":"<p>Where do I get <code>qt header</code> and libraries from? </p>\n\n<p>And then how do I install qt header and libraries in specific folder?</p>\n"},{"id":568067,"title":"Ubuntu Touch App with Simple UI (QMake) - how to connect C++ to QML","body":"<p>I've noticed that the Ubuntu SDK now has a template for an 'App with Simple UI (QMake)'. This creates a C++ Ubuntu application project with a sample UI containing a Label and a Button (Needs a 15.04 Kit).</p>\n\n<p>What I don't understand is how to make the QML user interface communicate with the C++ code. As far as I can tell the main.qml file does not connect to the C++ code.</p>\n\n<p>I'm trying to port the MythMote app to Ubuntu Touch (see also my earlier post <a href=\"http://askubuntu.com/questions/500601/how-to-create-an-ubuntu-touch-app-with-a-c-backend-and-a-qml-interface\">How to create an Ubuntu Touch app with a C++ backend and a QML interface</a>) and have a C++ application that works as a desktop application (code below). For the Ubuntu Touch app I need a QML interface to interact with the C++ code. In short: the user clicks a button on the QML interface which is connected to a C++ slot that sends a text message to a the MythMote port (let's say: socket->write(key up\\r\\n\")).</p>\n\n<p>Can someone give me a tip on how to implement this? I cannot find a working example for Ubuntu Touch.</p>\n\n<p>Below is the code (not winning a beauty contest):</p>\n\n<p>main.cpp</p>\n\n<pre><code>#include \"mainwindow.h\"\n#include &lt;QApplication&gt;\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n    MainWindow w;\n    w.show();\n\n    return a.exec();\n}\n</code></pre>\n\n<p>mainwindow.h</p>\n\n<pre><code>#ifndef MAINWINDOW_H\n#define MAINWINDOW_H\n\n#include &lt;QMainWindow&gt;\n#include &lt;QTcpSocket&gt;\n#include &lt;QDebug&gt;\n\nnamespace Ui {\nclass MainWindow;\n}\n\nclass MainWindow : public QMainWindow\n{\n    Q_OBJECT\n\npublic:\n    explicit MainWindow(QWidget *parent = 0);\n    ~MainWindow();\n\nprivate slots:\n\n    void on_right_clicked();\n    void on_left_clicked();\n    void on_info_clicked();\n    void on_up_clicked();\n    void on_guide_clicked();\n    void on_square_clicked();\n    void on_cancel_clicked();\n    void on_down_clicked();\n    void on_menu_clicked();\n    void on_tv_plus_clicked();\n    void on_tv_back_clicked();\n    void on_tv_minus_clicked();\n    void on_rec_clicked();\n    void on_stop_clicked();\n    void on_pause_clicked();\n    void on_play_clicked();\n    void on_skipbk_clicked();\n    void on_rw_clicked();\n    void on_ff_clicked();\n    void on_skipfw_clicked();\n    void on_speaker_plus_clicked();\n    void on_speaker_off_clicked();\n    void on_speaker_minus_clicked();\n\nprivate:\n    Ui::MainWindow *ui;\n\nprivate:\n    QTcpSocket *socket;\n};\n\n#endif // MAINWINDOW_H\n</code></pre>\n\n<p>mainwindow.cpp</p>\n\n<pre><code>#include \"mainwindow.h\"\n#include \"ui_mainwindow.h\"\n\nMainWindow::MainWindow(QWidget *parent) :\n    QMainWindow(parent),\n    ui(new Ui::MainWindow)\n{\n    ui-&gt;setupUi(this);\n    socket = new QTcpSocket(this);\n    socket-&gt;connectToHost(\"192.168.178.23\",6546);\n    if(socket-&gt;waitForConnected(3000))\n        ui-&gt;statusBar-&gt;showMessage(\"connected\");\n    else\n        ui-&gt;statusBar-&gt;showMessage(\"not connected\");\n}\n\nMainWindow::~MainWindow()\n{\n    socket-&gt;close();\n    delete ui;\n}\n\nvoid MainWindow::on_info_clicked()\n{\n    socket-&gt;write(\"key i\\r\\n\");\n}\n\nvoid MainWindow::on_up_clicked()\n{\n    socket-&gt;write(\"key up\\r\\n\");\n}\n\nvoid MainWindow::on_guide_clicked()\n{\n    socket-&gt;write(\"key s\\r\\n\");\n}\n\nvoid MainWindow::on_left_clicked()\n{\n    socket-&gt;write(\"key left\\r\\n\");\n}\n\nvoid MainWindow::on_square_clicked()\n{\n    socket-&gt;write(\"key enter\\r\\n\");\n}\n\nvoid MainWindow::on_right_clicked()\n{\n    socket-&gt;write(\"key right\\r\\n\");\n}\n\nvoid MainWindow::on_cancel_clicked()\n{\n    socket-&gt;write(\"key escape\\r\\n\");\n}\n\nvoid MainWindow::on_down_clicked()\n{\n    socket-&gt;write(\"key down\\r\\n\");\n}\n\nvoid MainWindow::on_menu_clicked()\n{\n    socket-&gt;write(\"key m\\r\\n\");\n}\n\nvoid MainWindow::on_tv_plus_clicked()\n{\n    socket-&gt;write(\"play channel up\\r\\n\");\n}\n\nvoid MainWindow::on_tv_back_clicked()\n{\n    socket-&gt;write(\"key h\\r\\n\");\n}\n\nvoid MainWindow::on_tv_minus_clicked()\n{\n    socket-&gt;write(\"play channel down\\r\\n\");\n}\n\nvoid MainWindow::on_speaker_plus_clicked()\n{\n    socket-&gt;write(\"key ]\\r\\n\");\n}\n\nvoid MainWindow::on_speaker_off_clicked()\n{\n    socket-&gt;write(\"key |\\r\\n\");\n}\n\nvoid MainWindow::on_speaker_minus_clicked()\n{\n    socket-&gt;write(\"key []\\r\\n\");\n}\n\nvoid MainWindow::on_rec_clicked()\n{\n    socket-&gt;write(\"key r\\r\\n\");\n}\n\nvoid MainWindow::on_stop_clicked()\n{\n    socket-&gt;write(\"play stop\\r\\n\");\n}\n\nvoid MainWindow::on_pause_clicked()\n{\n    socket-&gt;write(\"play speed pause\\r\\n\");\n}\n\nvoid MainWindow::on_play_clicked()\n{\n    socket-&gt;write(\"play speed normal\\r\\n\");\n}\n\nvoid MainWindow::on_skipbk_clicked()\n{\n    socket-&gt;write(\"key home\\r\\n\");\n}\n\nvoid MainWindow::on_rw_clicked()\n{\n    socket-&gt;write(\"play seek backward\\r\\n\");\n}\n\nvoid MainWindow::on_ff_clicked()\n{\n    socket-&gt;write(\"play seek forward\\r\\n\");\n}\n\nvoid MainWindow::on_skipfw_clicked()\n{\n    socket-&gt;write(\"key end\\r\\n\");\n}\n</code></pre>\n"},{"id":355565,"title":"How to install latest cmake version in Linux/Ubuntu from command line?","body":"<p>I am trying to install latest <code>cmake</code> in my linux box and I am always getting the below exception - </p>\n\n<pre><code>userName@phx5qa01c-4e23:~/build$ wget http://www.cmake.org/files/v2.8/cmake-2.8.11.tar.gz\n--2013-10-08 14:39:55--  http://www.cmake.org/files/v2.8/cmake-2.8.11.tar.gz\nResolving www.cmake.org... 66.194.253.19\nConnecting to www.cmake.org|66.194.253.19|:80... failed: Connection timed out.\nRetrying.\n\n--2013-10-08 14:40:17--  (try: 2)  http://www.cmake.org/files/v2.8/cmake-2.8.11.tar.gz\nConnecting to www.cmake.org|66.194.253.19|:80... failed: Connection timed out.\nRetrying.\n\n--2013-10-08 14:40:40--  (try: 3)  http://www.cmake.org/files/v2.8/cmake-2.8.11.tar.gz\nConnecting to www.cmake.org|66.194.253.19|:80...\n</code></pre>\n\n<p>It is always retrying... Any thoughts?</p>\n\n<p>Does anyone know what wrong I am doing here? Or is there any better way of installing latest version of cmake in my linux box?</p>\n\n<pre><code>userName@phx5qa01c-4e23:~/build$ uname -a\nLinux phx5qa01c-4e23 2.6.35-22-server #33-Ubuntu SMP Sun Sep 19 20:48:58 UTC 2010 x86_64 GNU/Linux\n</code></pre>\n"},{"id":593131,"title":"How does one get the ambient light conditions in Ubuntu Touch?","body":"<p>I am planning to make an app which would switch between Light and Dark theme based on the ambient light conditions. So if it was a dark room, then the app would switch to a dark theme to reduce the strain on the eye and provide a pleasant experience.</p>\n\n<p>I looked into Qt LightSensor API Docs <a href=\"http://doc-snapshot.qt-project.org/qt5-5.4/qml-qtsensors-lightsensor-members.html\" rel=\"nofollow\">here</a> but on trying it on a sample device didnt work as expected. I also made sure to add <strong>sensors</strong> to the apparmor file. Has anyone got this working?</p>\n\n<p>I would appreciate if the answer could include a working code.</p>\n"},{"id":384991,"title":"how to play audio file using c++ in linux","body":"<p>I am coding this c++ program .I want to play audio clip, format dosen't matter , its just I wrote hello word the most basic program of any language but the thing is instead of showing hello world on terminal screen i want a pre recorded hello audio clip to be played but don't now hot to play audio clip via c++ . I m using Kubuntu,  a sample program showing solution will be preferred. \nthank you</p>\n"},{"id":500601,"title":"How to create an Ubuntu Touch app with a C++ backend and a QML interface","body":"<p>I'm looking forward to the release of Ubuntu Touch and thought it would be nice to contribute a small and free app that I'm also using now on my Android phone.</p>\n\n<p>The free and open source app for Android is called MythMote (code.google.com/p/mythmote) and basically establishes a TCP connection to a pc running a MythTv frontend and then transfers streams of data to control it. The info on www.mythtv.org/wiki/Frontend_control_socket contains the list of supported commands that can be used.</p>\n\n<p>I've managed to create the app as a Qt Widgets Application and it functions as required. So I have a myapp.pro, mainwindow.h, main.cpp, mainwindow.cpp and a mainwindow.ui file. In other words, it is a desktop app containing C++ code using the QTcpSocket Class.</p>\n\n<p>What I'm struggling with at the moment is adding a QML user interface to it so that I can upload it from within the Ubuntu SDK so that it can be reviewed.</p>\n\n<p>I tried to create a new Ubuntu 'App with Simple UI' and then copy paste the C++ code into an added C++ class. This does work because the Ubuntu SDK does not allow me to add a C++ class (gives a file generation failure).</p>\n\n<p>I tried to create a new Ubuntu 'App with QML Extension Library'. However I cannot publish such a project as it is of the wrong kit type. Gives a 'It is not supported to create click packages for a non UbuntuSDK target.</p>\n\n<p>I found a similar question on this website:</p>\n\n<p><a href=\"https://askubuntu.com/questions/278990/ubuntu-touch-app-with-c-core-and-qml-interface-how-to-create\">Ubuntu Touch app with c++ core and QML interface. How to create?</a></p>\n\n<p>The top answer provided does not allow to create a Click package and thus does not allow me to publish the app.</p>\n\n<p>The bottom answer points to the folowing page but I cannot get the example to work and I doubt that it will allow me to publish it:</p>\n\n<p><a href=\"http://forum.xda-developers.com/showthread.php?p=41115284&amp;nocache=1\" rel=\"nofollow\">http://forum.xda-developers.com/showthread.php?p=41115284&amp;nocache=1</a></p>\n\n<p>I also tried to see if QML has something similar to the QTcpSocket Class but was unable to find it.</p>\n\n<p>So, I'm hoping that some of you have successfully published an app that has a C++ backend connected to a QML user interface.</p>\n\n<p>Thanks!</p>\n"},{"id":308968,"title":"How can I run a command from a qml script?","body":"<p>I'm working on an Ubuntu Touch app that needs to modify iptables and do various other things that requires interaction with the command line. I found <a href=\"http://askubuntu.com/questions/288494/run-system-commands-from-qml-app\">this</a> and I understand that it must be done with a C++ plugin or a possible future extension in the SDK. Is there any such extension available now? And can someone elaborate on how I can use C++ to run a command from qml?</p>\n"},{"id":153838,"title":"How do I get dark toolbars in gtkmm?","body":"<p>How do I get dark toolbars in gtkmm like in gedit or system settings? I can only seem to find how to do it in pyGTK.</p>\n"},{"id":155545,"title":"How do I get QSystemTrayIcon to show up in Gnome 3?","body":"<p>I can get a <a href=\"http://qt-project.org/doc/qt-4.8/qsystemtrayicon.html\"><code>QSystemTrayIcon</code></a> to show up in Unity by installing the <a href=\"https://apps.ubuntu.com/cat/applications/sni-qt\">sni-qt <img src=\"http://hostmar.co/software-small\" alt=\"Install sni-qt\"></a> package which acts as a broker between the application and an <a href=\"https://wiki.ubuntu.com/DesktopExperienceTeam/ApplicationIndicators\">application indicator</a> for the program.</p>\n\n<p>However, running the application under Gnome 3 doesn't work - no icon appears anywhere. Is there a similar package that does the same thing as the <code>sni-qt</code> package but for Gnome 3?</p>\n"}]}]