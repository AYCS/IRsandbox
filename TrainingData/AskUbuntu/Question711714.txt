[{"id":711714,"title":"Error to building ubuntu touch for moka phone","body":"<p>I'm trying to build ubuntu touch for moka phone but I have the following errors:</p>\n\n<pre><code>host C: libext2_e2p_host &lt;= external/e2fsprogs/lib/e2p/feature.c\n\nhost SharedLib: libext2_e2p_host (phablet/out/host/linux-x86/obj/lib/libext2_e2p_host.so)\n\nphablet/out/host/linux-x86/obj/SHARED_LIBRARIES/libext2_e2p_host_intermediates/feature.o: in function \"ext2fs_mark_block_bitmap\":\n\n\nphablet/external/e2fsprogs/lib/ext2fs/bitops.h:303: undefined reference to \"ext2fs_mark_generic_bitmap\"\n\ncollect2: error: ld returned 1 exit status\n\nbuild/core/host_shared_library.mk:44: set di istruzioni per l'obiettivo \"phablet/out/host/linux-x86/obj/lib/libext2_e2p_host.so\" non riuscito\n\nmake: *** [phablet/out/host/linux-x86/obj/lib/libext2_e2p_host.so] Errore 1\n</code></pre>\n\n<p>I have used this commands after syncing with \"phablet-dev-bootstrap phablet\":</p>\n\n<pre><code>. build/envsetup.sh\n\nlunch\n</code></pre>\n\n<p>I  have choosed nr.10 for moka</p>\n\n<pre><code>make\n</code></pre>\n","related_questions":[{"id":714212,"title":"Ubuntu Touch build error","body":"<p>I am trying to make a Ubuntu Touch build for my device (Redmi 2) using the cm sources that are already available but I've got no success at all.</p>\n\n<p>As this guide asks: <a href=\"https://developer.ubuntu.com/en/start/ubuntu-for-devices/porting-new-device/\" rel=\"nofollow\">https://developer.ubuntu.com/en/start/ubuntu-for-devices/porting-new-device/</a> I was able to build for Nexus 4 without problems, but when I type lunch and then choose my device, I get the following:</p>\n\n<blockquote>\n  <p>You're building on Linux</p>\n  \n  <p>Lunch menu... pick a combo:</p>\n\n<pre><code> 1. aosp_arm-eng\n 2. aosp_x86-eng\n 3. aosp_mips-eng\n 4. vbox_x86-eng\n 5. aosp_hammerhead-userdebug\n 6. aosp_mako-userdebug\n 7. aosp_grouper-userdebug\n 8. aosp_tilapia-userdebug\n 9. aosp_flo-userdebug\n 10. aosp_deb-userdebug\n 11. aosp_manta-userdebug\n 12. cm_wt88047-userdebug\n 13. mini_x86-userdebug\n 14. mini_armv7a_neon-userdebug\n</code></pre>\n  \n  <p>Which would you like? [aosp_arm-eng] 12\n  build/core/product_config.mk:222: *** Can not locate config makefile for product \"cm_wt88047\".  Pare.</p>\n  \n  <p>** Don't have a product spec for: 'cm_wt88047'\n  ** Do you have the right repo manifest?</p>\n</blockquote>\n"},{"id":593657,"title":"Can&#39;t compile Ubuntu Touch","body":"<p>I am trying to port Ubuntu Touch to my Galaxy s5, but I can't even get to the real building part. All I get when I \"lunch\" is this:</p>\n\n<pre><code>build/core/product_config.mk:222: *** Can not locate config makefile for product \"full_klte\".  Stop.\n\n** Don't have a product spec for: 'full_klte'\n** Do you have the right repo manifest?\n</code></pre>\n"},{"id":660241,"title":"How to install ghc on Ubuntu Touch","body":"<p>I'm now struggling to install GHC on my favourite toy Aquaris E5 Ubuntu Edition. Does someone know how to compile GHC on this machine or cross-compile on OS X? </p>\n\n<p>I do have some experience and knowledge on writing a program package with Haskell and UNIX-like system, but have never ported GHC into a new platform. I've succeeded to install prerequisites such as GCC by using apt-get. However, it's not quite possible to install GHC and Haskell-platform by apt-get due to the limited disk space (only up to 2GB for / directory).</p>\n\n<p>So, I have chosen plan B, that is, to build GHC by myself from the source and install in /home/phablet. I know there're some articles about cross-compiling or porting GHC but it looks like most of these articles are for somewhat older version of GHC. I'm a beginner on this field and so please help me!</p>\n\n<p>Best,\nMasa</p>\n"},{"id":622958,"title":"Build Ubuntu Touch: adding android system image to installation ... error: device not found","body":"<p>I'm trying to build Ubuntu touch from source. I'm building it for nexus 4 (mako) I've alredy install ubuntu on it, but a want to play with the source code so I need to build it.</p>\n\n<p>Everything seems to work fine except for this  :</p>\n\n<pre><code>$ ./rootstock-touch-install wily-preinstalled-touch-armhf.tar.gz /out/target/product/mako/system.img\ntransfering rootfs tarball ... [done]\npreparing system-image on device ... [done]\nunpacking rootfs tarball to system-image ... [done]\nadding android system image to installation ... error: device not found\n</code></pre>\n\n<p>Is there a way to get to the logs to find the issue?</p>\n"},{"id":605822,"title":"Ubuntu touch compiling: missing msm_ion.h","body":"<p>I've started porting Ubuntu Touch to the LG Volt (LS740) from Boost Mobile. I have my device tree vendor blobs and kernel sources all in place, but I'm getting a compile error:</p>\n\n<pre><code>In file included from hardware/qcom/display/msm8226/libgralloc/ionalloc.cpp:38:0:\nhardware/qcom/display/msm8226/libgralloc/ionalloc.h:33:27: fatal error: linux/msm_ion.h: No such file or directory\ncompilation terminated.\n</code></pre>\n\n<p>I have an <code>include</code> folder in my device tree. It contains the <code>linux</code> folder which includes the <code>msm_mdp.h</code> file, but it's not getting included by the compiler.</p>\n\n<p>My <code>Android.mk</code> file in my device root (device/lge/x5) contains:</p>\n\n<pre><code>ifneq ($(filter x5,$(TARGET_DEVICE)),)\n\nLOCAL_PATH := $(call my-dir)\n\ninclude $(call all-makefiles-under,$(LOCAL_PATH))\n\nendif\n</code></pre>\n\n<p>I assume that's enough code to pass the <code>linux</code> folder to the compiler, but apparently it's not working...</p>\n\n<p>Any ideas?</p>\n"},{"id":583529,"title":"Whats the build version is used in the Bq release of Ubuntu touch?","body":"<p>I just wanted to know the exact build version being used in the Bq release of the Ubuntu touch phone. </p>\n\n<p>Is this Ubuntu-rtm 14.09 ? I see some parts are missing in my current ubuntu-touch. May be someone can help me to get the right build and move completely to Ubuntu touch.</p>\n"},{"id":362312,"title":"Building TrueCrypt on Ubuntu 14.04","body":"<p>With the whole NSA thing people tried to re-build identically looking binaries to the ones which truecrypt.org provides, but didn't succeed. So some think they might be compiled with back-doors which are not in the source code. -> So how compile on the latest Ubuntu version (I'm using UbuntuGNOME but that shouldn't matter)? I tried some tutorials for previous Ubuntu versions but they seem not to work any-more? </p>\n\n<p><strong>edit:</strong></p>\n\n<p><a href=\"https://madiba.encs.concordia.ca/~x_decarn/truecrypt-binaries-analysis/\" rel=\"nofollow\">https://madiba.encs.concordia.ca/~x_decarn/truecrypt-binaries-analysis/</a> \nNow you might think \"ok, we don't need to build\", but: To build he used closed-source software and there are proof-of-concepts where a compromised compiler still put backdoors into the binary:\n1. source without backdoors\n2. binary identically to the reference-binary\n3. binary contains still backdoors</p>\n\n<p><strong>edit2 (reply to post):</strong></p>\n\n<p>When using <code>$ make -j 2 PKCS11_INC=$HOME/src/pkcs-11</code> I get:</p>\n\n<pre>\n...\n\n/usr/include/wx-2.8/wx/dynarray.h:669:5: note: in expansion of macro ‘_WX_DEFINE_TYPEARRAY_PTR’\n     _WX_DEFINE_TYPEARRAY_PTR(_wxArray##name, name, base, classdecl)\n     ^\n/usr/include/wx-2.8/wx/dynarray.h:655:5: note: in expansion of macro ‘WX_DEFINE_TYPEARRAY_WITH_DECL_PTR’\n     WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, base, class WXDLLEXPORT)\n     ^\n/usr/include/wx-2.8/wx/dynarray.h:829:5: note: in expansion of macro ‘WX_DEFINE_EXPORTED_TYPEARRAY_PTR’\n     WX_DEFINE_EXPORTED_TYPEARRAY_PTR(T, name, wxBaseArrayPtrVoid)\n     ^\n/usr/include/wx-2.8/wx/bookctrl.h:26:1: note: in expansion of macro ‘WX_DEFINE_EXPORTED_ARRAY_PTR’\n WX_DEFINE_EXPORTED_ARRAY_PTR(wxWindow *, wxArrayPages);\n ^\nLinking truecrypt\n/usr/bin/ld: /home/user/src/truecrypt-7.1a-source/Volume/Volume.a(SecurityToken.o): undefined reference to symbol 'dlopen@@GLIBC_2.1'\n/lib/i386-linux-gnu/libdl.so.2: error adding symbols: DSO missing from command line\ncollect2: error: ld returned 1 exit status\nmake[1]: *** [truecrypt] Error 1\nmake: *** [all] Error 2\nuser@user-pc:~/src/truecrypt-7.1a-source$ </pre>\n\n<p>when using <code>$ make -j 2 PKCS11_INC=$HOME/src/pkcs-11 LIBS=-ldl</code>:</p>\n\n<pre>\n...\n\nForms/VolumeSizeWizardPage.o: In function `TrueCrypt::VolumeSizeWizardPage::GetVolumeSize() const':\nVolumeSizeWizardPage.cpp:(.text._ZNK9TrueCrypt20VolumeSizeWizardPage13GetVolumeSizeEv+0x80): undefined reference to `TrueCrypt::StringConverter::ToUInt64(std::basic_string, std::allocator > const&)'\nForms/VolumeSizeWizardPage.o: In function `TrueCrypt::VolumeSizeWizardPage::SetVolumeSize(unsigned long long)':\nVolumeSizeWizardPage.cpp:(.text._ZN9TrueCrypt20VolumeSizeWizardPage13SetVolumeSizeEy+0x8f): undefined reference to `TrueCrypt::StringConverter::FromNumber(unsigned long long)'\nForms/WizardFrame.o: In function `TrueCrypt::WizardFrame::SetStep(int, bool)':\nWizardFrame.cpp:(.text._ZN9TrueCrypt11WizardFrame7SetStepEib+0xe6): undefined reference to `TrueCrypt::Event::Connect(TrueCrypt::EventConnectorBase const&)'\ncollect2: error: ld returned 1 exit status\nmake[1]: *** [truecrypt] Error 1\nmake: *** [all] Error 2\nuser@user-pc:~/src/truecrypt-7.1a-source$\n</pre>\n\n<p>(same without the <code>make -j ...</code> parameter BTW)</p>\n\n<p><strong>edit3</strong></p>\n\n<p>Now it works, thanks user76204 and GEO:</p>\n\n<ol>\n<li><code>$ sudo apt-get install build-essential nasm libfuse-dev wx-common wx2.8-headers libwxbase2.8-dev libwxsvg-dev libwxgtk2.8-0 libwxgtk2.8-dev</code></li>\n<li><code>$ mkdir -p $HOME/src/pkcs-11</code></li>\n<li>put truecrypt sources to <code>/home/USERNAME/truecrypt-7.1a-source</code></li>\n<li>start building: <code>$ LIBS=-ldl make -j 2 PKCS11_INC=/home/USERNAME/src/pkcs-11/</code></li>\n</ol>\n"},{"id":318595,"title":"How to build ubuntu touch for unofficial cyanogenmod device","body":"<p>I own a Samsung galaxy scl i9003 and I would like to port Ubuntu touch on this device. We don't have an official cyanogenmod, but we have an unofficial version of it. I did the built of the unofficial cyanogenmod 10.1 but now I don't know how to proceed, and from where start following the porting guide to create a Ubuntu touch build flashable to my device. \nPlease, I hope someone could help me \nThanks in advance </p>\n"},{"id":322226,"title":"Ubuntu Touch &quot;Saucy&quot; or other no boot exclude &quot;Quantal&quot;","body":"<p>I build sources for my device. Then I download saucy-preinstalled-touch-armhf.zip. But its no boot. I tried all and work only MWC demo ZIP.</p>\n\n<p>It was said that it is \"hybris\" problems. I tried build with new \"hybris\". But no difference. Now MWC demo no booting.</p>\n\n<p>Whats me need do?\nI tried on 3 phones.\nSony Xperia Z and Acro S and LG Optimus Black.</p>\n"},{"id":289510,"title":"How to build Ubuntu Touch in 32-bit computer","body":"<p>I was trying to port Ubuntu Touch for my HTC Incredible S.\nI had setup the source code and drivers.\nDuring build, I am getting error that the build can be executed only on 64-bit computer.</p>\n\n<p>When I searched for my laptop model spec, I found that it is 32-bit.\nWhat is the restriction in building on 32-bit machine?\nIs there a possibility to build it on 32-bit.</p>\n\n<p>Thanks in advance.</p>\n"}]}]