[{"id":378467,"title":"Can a deb package contain a PPA dependency and install packages from the PPA?","body":"<p>When creating a <code>.deb</code> package I create a file named <code>control</code> that contains some fields:</p>\n\n<pre><code>Package: my-qt-app-name\nVersion: 0.01\nArchitecture: all\nMaintainer: my name &lt;my email address&gt;\nInstalled-Size: 2\nDepends: some-package-from-ppa\nSection: extras\nPriority: optional\nHomepage: my homepage\nDescription: some description\n</code></pre>\n\n<p><code>some-package-from-ppa</code> is not installed on the computer. It can be installed only adding a PPA, running <code>apt-get update</code> and then <code>apt-get install some-package-from-ppa</code>.</p>\n\n<p>Can a <code>control</code> file from a deb package contain a PPA address and install that package when the deb file is installed?</p>\n","related_questions":[{"id":1317,"title":"How to upload package with dependencies to my PPA?","body":"<p>I made a package for my PPA and uploaded it. It built without any problems.</p>\n\n<p>Then I made another package that depended on the first and uploaded it. It failed because it couldn't find the files in the first package. This leads me to believe that the first package wasn't even installed.</p>\n\n<p>How can I make sure the first package is installed before it tries to build the second package?</p>\n\n<p>The control file for the first package (libjsoncpp):</p>\n\n<pre>\nSource: jsoncpp\nPriority: extra\nMaintainer: Nathan Osman \nBuild-Depends: debhelper (>= 7)\nStandards-Version: 3.8.3\nSection: libs\nHomepage: http://jsoncpp.sf.net\n\nPackage: jsoncpp-dev\nSection: libdevel\nArchitecture: any\nDepends: libjsoncpp (= ${binary:Version})\nDescription: JSON parsing library for C++\n jsoncpp is a C++ library that makes it easy to\n read / write JSON data.\n .\n This package contains the development tools necessary\n to create applications that use jsoncpp.\n\nPackage: libjsoncpp\nSection: libs\nArchitecture: any\nDepends: ${shlibs:Depends}, ${misc:Depends}\nDescription: JSON parsing library for C++\n jsoncpp is a C++ library that makes it easy to\n read / write JSON data.\n</pre>\n\n<p>The control file for the second (libsopp):</p>\n\n<pre>\nSource: sopp\nPriority: extra\nMaintainer: Nathan Osman \nBuild-Depends: debhelper (>= 7)\nStandards-Version: 3.8.3\nSection: libs\nHomepage: http://stackoverflow.quickmediasolutions.com\n\nPackage: sopp-dev\nSection: libdevel\nArchitecture: any\nDepends: libsopp (= ${binary:Version}), jsoncpp-dev\nDescription: A C++ library for interfacing with StackExchange sites.\n so++ is a C++ library that wraps the functionality of the StackOverflow\n API. It provides access to all of the StackExchange sites.\n .\n This package contains the development files necessary to write software\n that uses so++.\n\nPackage: libsopp\nSection: libs\nArchitecture: any\nDepends: ${shlibs:Depends}, ${misc:Depends}, libjsoncpp\nDescription: A C++ library for interfacing with StackExchange sites.\n so++ is a C++ library that wraps the functionality of the StackOverflow\n API. It provides access to all of the StackExchange sites.\n</pre>\n"},{"id":642632,"title":"How to bump the version of a package available in another user&#39;s PPA?","body":"<p>When looking for a recent version of CMake 3.2 for Ubuntu 15.04 I came across <a href=\"https://launchpad.net/~george-edison55/+archive/ubuntu/cmake-3.x\" rel=\"nofollow\">this PPA</a>. However, instead of CMake 3.2.1 I'd like to use version 3.2.3. How can I easily build upon the existing work done for that PPA to achieve that? I imagine some workflow like</p>\n\n<ol>\n<li>copy the packages from the PPA to my own newly created PPA</li>\n<li>somehow download the existing build recipes for version 3.2.1 (Using <code>dget</code>?)</li>\n<li>increase the version string in some file, adjust the changelog etc.</li>\n<li>push the build recipes back to Launchpad to see if it builds</li>\n</ol>\n\n<p>So far I've only been able to find instructions on how to create new PPAs / packages from upstream sources (involving Bazaar branches and what not), but no easy instructions how to build upon existing PPA packages (preferably without involving Bazaar).</p>\n\n<p>Note that I have no experience whatsoever with building / publishing PPAs, and that I'm starting from scratch.</p>\n"},{"id":597954,"title":"self created .deb package has versioning problems","body":"<p>I did my first steps in creating a PPA, containing a recent fossil version.</p>\n\n<p>I unpacked the tarball and ran <code>bzr dh-make fossil 1.32 ../fossil-src-stable.tar.gz</code> on it, editet the debian files till compilation worked and built my deb with </p>\n\n<pre><code>bzr builddeb -S -- -uc -us\npbuilder-dist utopic build fossil_1.32-ppa1.dsc\n</code></pre>\n\n<p>so far it was hard, but worked somehow.</p>\n\n<p>No to my problem, as you can see, I built fossil version 1.32 and the deb is named <code>fossil_1.32-ppa1_amd64.deb</code> simple as by following the <a href=\"http://packaging.ubuntu.com\" rel=\"nofollow\">tutorials</a>.</p>\n\n<p>Now, when I try to install my deb, it tells me, that a more recent version is already installed and installation aborts.</p>\n\n<p>Apt-cache policy tells me, that the installed version is lower:</p>\n\n<pre><code>$ apt-cache policy fossil\nfossil:\n  Installiert:           1:1.29-1\n  Installationskandidat: 1:1.29-1\n  Versionstabelle:\n *** 1:1.29-1 0\n</code></pre>\n\n<p>Question 1: What is this \"1:\" preceding the version number?\nQuestion 2: What kind of Version will I have to give my deb to be installed?</p>\n\n<p>I already tried bzr <code>dh-make fossil 1:1.32 ../fossil-src-stable.tar.g</code> but that won't even give me a start.</p>\n"},{"id":583223,"title":"Backuop/Restore PPAs/Repos and Packages?","body":"<p>I'm looking at doing a full reinstall in order to change my FS and implement FDE. I'm hoping for 2 scripts. (I am not a coder of any kind)</p>\n\n<p>first script (backup)\ncreate list of ppas/repos\ncreate list of all installed packages (ideally with configuration data, if feasible)</p>\n\n<p>second script (post-install restore)\n-add all repos/PPAs from list\n-sudo apt-get update\n-install all packages from list</p>\n\n<p>tacking apt-get dist-upgrade at the end would be nice, too, but can easily be done manually afterward.</p>\n\n<p>Can this be done? If it can't be scripted, can I manually (or through some software) create and restore/install these lists?</p>\n"},{"id":549337,"title":"Display PPA from which package will be downloaded during upgrade","body":"<p>I have many PPAs installed on my Trusty system. However, I feel that they might try to sneak packages into my system other than those which I include them in the first place. Technically, after adding a PPA, there's nothing preventing this PPA to try and sneak 'upgrades' for critical software into my system.</p>\n\n<p>I know that I can in principle use apt-pinning to allow only certain packages to be installed via a PPA.  However, I believe this is a bit uncomfortable when there's many PPAs, and it might not always be easy to come up with rules for the pinning process.</p>\n\n<p>What I'm after is a simple way to display a list of all packages which would be installed by a <code>apt-get upgrade</code> call, <em>and which repository they come from</em>; most comfortably in some table form.</p>\n\n<p>Any ideas?</p>\n"},{"id":413152,"title":"How to do packaging of ADT (Android Development Tools) for PPA?","body":"<p>From last few days i am trying to learn packaging in Ubuntu. I successfully created Binary deb of Scilab 5.4.1 &amp; ADT but i don't have any webspace or server to host repository for these packages. So i tried to upload the source files of these packages to launchpad. But for some reason the binary which were compiled by launchpad doesn't contain package files.  Can somebody help me with the procedure to create packages for ppa with binary files in it? I will be very grateful.</p>\n\n<p>I'm placing 'usr/adt/eclipse' &amp; 'usr/adt/sdk' folders in the same directory(adt-22.2.1~ppa1) with debian directory.And using postinst &amp; postrm files to control installation.</p>\n\n<p>thanks !</p>\n\n<p>Regards\nNavdeep Singh</p>\n"},{"id":240027,"title":"How to create a .deb package from compiled source files?","body":"<p>Question:</p>\n\n<p>Mono 3.0 is out, but I found no ppa from where I could install it.</p>\n\n<p>There is this one:\n<a href=\"https://launchpad.net/~directhex/+ppa-packages\">https://launchpad.net/~directhex/+ppa-packages</a></p>\n\n<p>but it's mono 2.10.8.1-5.</p>\n\n<p>I'm playing with ASP.NET MVC4, which is why I need the 3.0 release.</p>\n\n<p>Now I can compile &amp; install mono 3.0 myself. \nHow I do it, I tutorialized here:\n<a href=\"http://ubuntuforums.org/showthread.php?t=1591370\">http://ubuntuforums.org/showthread.php?t=1591370</a></p>\n\n<p>My problem now is, for every new ubuntu installation I have/want to make (server, laptop, desktop, renewed installation when HD breakes) I need to go through this lengthy procedure again.</p>\n\n<p>So I want to compile it once, and then upload it to a PPA, so that I (and everybody else) don't need to install it from source again.</p>\n\n<p>Now the question:\nThe entire build process needs configure run with options, post-configure makefile fixes, post-configure sourcecode fixes, etc.</p>\n\n<p>Is there an easy way I can create .deb packages from the already compiled files ?</p>\n\n<p>So that in the installation script, I only need to write several times:</p>\n\n<pre><code>cd package_directory_1/\nmake install\ncd package_directory_2/\nmake install\ncd package_directory_3/\nmake install\n</code></pre>\n\n<p>etc. </p>\n\n<p>?</p>\n"},{"id":47897,"title":"Is it possible to automatically nofity for update of manually installed packages?","body":"<p>If having installed some packages downloaded from website , I was wondering if it is possible to have auto notification when its update is available, just as those packages in Ubuntu repositories.</p>\n\n<p>Can the packages downloaded be in deb form, or even in source code?</p>\n\n<p>For example, </p>\n\n<ol>\n<li>nevernote maintained in sourceforge,\n<a href=\"http://nevernote.sourceforge.net/index.htm\">http://nevernote.sourceforge.net/index.htm</a>,\ndownloadable from\n<a href=\"http://sourceforge.net/projects/nevernote/files/Current/nevernote-0.99_i386.deb/download\">http://sourceforge.net/projects/nevernote/files/Current/nevernote-0.99_i386.deb/download</a></li>\n<li>packages from Ubuntu PPA\n<a href=\"https://launchpad.net/ubuntu/+ppas\">https://launchpad.net/ubuntu/+ppas</a>.</li>\n</ol>\n"},{"id":33261,"title":"How do I handle updates having installed digiKam using PPAs?","body":"<p>In Ubuntu 10.10 I <a href=\"http://scribblesandsnaps.wordpress.com/2011/03/09/install-the-latest-beta-of-digikam-on-ubuntu-10-10/\" rel=\"nofollow\">installed digiKam</a>:</p>\n\n<pre><code>sudo apt-add-repository ppa:philip5/extra\nsudo apt-add-repository ppa:philip5/kubuntu-backports\nsudo apt-add-repository ppa:kubuntu-ppa/backports\nsudo apt-get update\nsudo apt-get install digikam2 kipi-plugins2\n</code></pre>\n\n<p>When running the Update Manager, I am informed:</p>\n\n<pre><code>Not all updates can be installed\nRun a partial upgrade, to install as many updates as possible\nThis can be caused by:\n* A previous upgrade which didn't complete\n* Problems with some of the installed software\n* Unofficial software packages no provided by Ubuntu\n* Normal changes of a pre-release version of Ubuntu\n</code></pre>\n\n<p>I click 'Close' rather than 'Partial Upgrade', and I can then select which of the updates to install. However, some are greyed out, including some \"important security updates\": Complete Generic Linux kernel, Generic Linux kernel headers and Generic Linux kernel image. Also, tortoisehg PPA updates from another PPA are greyed out.</p>\n\n<p>How should I go about making sure the core Ubuntu system and my other packages installed via PPA are updated whilst still having digiKam installed (and preferably updated via PPA, too)?</p>\n\n<p>I've been using Ubuntu for a while, but am not familiar with all the ins and outs of package management.</p>\n\n<p>If I should include output from apt-get, please let me know. Thanks.</p>\n\n<p><strong>Edit:</strong> updating with terminal output:</p>\n\n<pre><code>sudo apt-get -V upgrade\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nThe following packages have been kept back:\n   kdebase-runtime (4.5.1-0ubuntu3.1 =&gt; 4.6.1-0ubuntu1~maverick1~ppa1)\n   ksysguard (4.5.1-0ubuntu8 =&gt; 4.6.1-0ubuntu1~maverick1~ppa1)\n   ksysguardd (4.5.1-0ubuntu8 =&gt; 4.6.1-0ubuntu1~maverick1~ppa1)\n   libksgrd4 (4.5.1-0ubuntu8 =&gt; 4.6.1-0ubuntu1~maverick1~ppa1)\n   libksignalplotter4 (4.5.1-0ubuntu8 =&gt; 4.6.1-0ubuntu1~maverick1~ppa1)\n   libprocessui4a (4.5.1-0ubuntu8 =&gt; 4.6.1-0ubuntu1~maverick1~ppa1)\n   linux-generic (2.6.35.27.35 =&gt; 2.6.35.28.36)\n   linux-headers-generic (2.6.35.27.35 =&gt; 2.6.35.28.36)\n   linux-image-generic (2.6.35.27.35 =&gt; 2.6.35.28.36)\n   plasma-scriptengine-javascript (4.5.1-0ubuntu3.1 =&gt; 4.6.1-0ubuntu1~maverick1~ppa1)\n   tortoisehg (1.1.1-1 =&gt; 2.0+repack-0ppa1~maverick1)\n   tortoisehg-nautilus (1.1.1-1 =&gt; 2.0+repack-0ppa1~maverick1)\n   vlc (1.1.4-1ubuntu1.4 =&gt; 1.1.8-maverick~ppa1)\n   vlc-nox (1.1.4-1ubuntu1.4 =&gt; 1.1.8-maverick~ppa1)\n   vlc-plugin-notify (1.1.4-1ubuntu1.4 =&gt; 1.1.8-maverick~ppa1)\n   vlc-plugin-pulse (1.1.4-1ubuntu1.4 =&gt; 1.1.8-maverick~ppa1)\nThe following packages will be upgraded:\n   akonadi-server (1.5.0-0ubuntu1~maverick1~ppa1 =&gt; 1.5.1-0ubuntu1~maverick1~ppa1)\n   gtk2-engines-equinox (1.30-ubuntu3 =&gt; 1.40)\n   kompare (4.5.1-0ubuntu3 =&gt; 4.6.1-0ubuntu1~maverick1~ppa1)\n   libakonadiprotocolinternals1 (1.5.0-0ubuntu1~maverick1~ppa1 =&gt; 1.5.1-0ubuntu1~maverick1~ppa1)\n   libgpg-error0 (1.6-1ubuntu2 =&gt; 1.10-0ubuntu2~maverick1~ppa1)\n   liborc-0.4-0 (0.4.11-1~maverick1 =&gt; 0.4.11-maverick~ppa1)\n   libschroedinger-1.0-0 (1.0.10-1~maverick1 =&gt; 1.0.10-maverick~ppa1)\n   libvlc5 (1.1.4-1ubuntu1.4 =&gt; 1.1.8-maverick~ppa1)\n   libvlccore4 (1.1.4-1ubuntu1.4 =&gt; 1.1.8-maverick~ppa1)\n   nvidia-current (260.19.06-0ubuntu1 =&gt; 260.19.36-maverick~ppa1)\n   nvidia-current-modaliases (260.19.06-0ubuntu1 =&gt; 260.19.36-maverick~ppa1)\n   nvidia-settings (260.19.06-0ubuntu1 =&gt; 260.19.29-maverick~ppa1)\n   policykit-1-gnome (0.96-2ubuntu4 =&gt; 0.99-1ubuntu1~maverick1~ppa1)\n   qapt-batch (1.0.3-0ubuntu2 =&gt; 1.1.1-0ubuntu1~maverick2)\n   transmission-common (2.04-0ubuntu2 =&gt; 2.22-maverick~ppa1)\n   vlc-data (1.1.4-1ubuntu1.4 =&gt; 1.1.8-maverick~ppa1)\n16 upgraded, 0 newly installed, 0 to remove and 16 not upgraded.\nNeed to get 57.9MB of archives.\nAfter this operation, 5,988kB disk space will be freed.\nDo you want to continue [Y/n]?\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/s4dz8.png\" alt=\"Update Manager having added digiKam PPAs\"></p>\n\n<p>The top five packages in the screenshot are greyed out. It seems like packages from the digiKam PPAs I've added are blocking(?) packages that would otherwise be updated. Ideally, I would like to use the PPAs concerning digiKam only for digiKam itself (and its actual dependencies) but not other packages such as the nVidia driver and transmission and whatnot, and allow other standard packages from Ubuntu 10.10 to be used as normal.</p>\n"},{"id":9793,"title":"PPA build failed because of unmet dependencies of another package in the same PPA","body":"<p>I have 2 packages swami-2.0.0 and libinstpatch-1.0.0 in my PPA where the first one depends on the latter.  The swami-2.0.0 control file contains libinstpatch-dev (>= 1.0.0) but it seems this is not satisfied even after installing that package, with this error in the buildlog:</p>\n\n<pre>\nAfter installing, the following source dependencies are still unsatisfied:\nlibinstpatch-dev(inst 1.0.0-0~lucid1~ppa1 ! >= wanted 1.0.0)\nSource-dependencies not satisfied; skipping swami\n</pre>\n\n<p>Is there something wrong with my 1.0.0-0~lucid1~ppa1 version name which causes it to not match 1.0.0?</p>\n\n<p>Here is the Swami control file:</p>\n\n<pre>\nSource: swami\nSection: sound\nPriority: optional\nMaintainer: Joshua Element Green \nHomepage: http://swami.sourceforge.net\nStandards-Version: 3.8.3\nBuild-Depends: debhelper (>= 7),\n        gettext,\n        cdbs (>= 0.4.41),\n        gnome-pkg-tools (>= 0.7),\n        libinstpatch-dev (>= 1.0.0),\n        libgtk2.0-dev (>= 2.8.17),\n        libgnomecanvas2-dev (>= 2.0),\n        librsvg2-dev (>= 2.8),\n        libglade2-dev,\n        libfluidsynth-dev,\n        libfftw3-dev,\n        gtk-doc-tools,\n        docbook-xml\nBuild-Depends-Indep: libglib2.0-doc\n\nPackage: swami\nArchitecture: any\nDepends: ${shlibs:Depends},\n        ${misc:Depends}\nDescription: MIDI instrument editor application\n Swami (Sampled Waveforms And Musical Instruments) is an application\n for editing and managing MIDI instruments, such as SoundFont files.\n An programming API is also provided for integration with other\n applications.\n\nPackage: swami-dev\nSection: libdevel\nArchitecture: any\nDepends: swami (= ${binary:Version}),\n         ${misc:Depends},\n        libinstpatch-dev (>= 1.0.0),\n        libgtk2.0-dev (>= 2.8.17),\n        libgnomecanvas2-dev (>= 2.0)\nDescription: MIDI instrument editor development files\n Swami (Sampled Waveforms And Musical Instruments) is an application\n for editing and managing MIDI instruments, such as SoundFont files.\n An programming API is also provided for integration with other\n applications.\n .\n This package contains the include files and static libraries.\n\nPackage: swami-doc\nSection: doc\nArchitecture: all\nDepends: ${misc:Depends}\nSuggests: devhelp\nDescription: MIDI instrument editor development documentation\n Swami (Sampled Waveforms And Musical Instruments) is an application\n for editing and managing MIDI instruments, such as SoundFont files.\n An programming API is also provided for integration with other\n applications.\n .\n This package contains development documentation for swami in\n /usr/share/gtk-doc/html/libswami and /usr/share/gtk-doc/html/libswamigui.\n</pre>\n\n<p>And here is the libinstpatch control file:</p>\n\n<pre>\nSource: libinstpatch\nSection: sound\nPriority: optional\nMaintainer: Joshua Element Green \nHomepage: http://swami.sourceforge.net\nStandards-Version: 3.8.3\nBuild-Depends: debhelper (>= 7),\n               libglib2.0-dev (>= 2.14),\n               libsndfile1-dev (>= 1.0.17-2),\n               gettext,\n               cdbs (>= 0.4.41),\n               gnome-pkg-tools (>= 0.7),\n               gtk-doc-tools,\n               docbook-xml\nBuild-Depends-Indep: libglib2.0-doc\n\nPackage: libinstpatch1\nSection: libs\nArchitecture: any\nDepends: ${misc:Depends},\n         ${shlibs:Depends}\nDescription: MIDI instrument editing library\n libInstPatch (lib Instrument Patch) is an object oriented library for editing\n MIDI instruments such as SoundFont files.\n\nPackage: libinstpatch-dev\nSection: libdevel\nArchitecture: any\nDepends: libinstpatch1 (= ${binary:Version}),\n         ${misc:Depends},\n         libglib2.0-dev (>= 2.14),\n         libsndfile1-dev (>= 1.0.17-2)\nDescription: MIDI instrument editing library development files\n libInstPatch (lib Instrument Patch) is an object oriented library for editing\n MIDI instruments such as SoundFont files.\n .\n This package contains the include files and static library.\n\nPackage: libinstpatch-doc\nSection: doc\nArchitecture: all\nDepends: ${misc:Depends}\nSuggests: devhelp\nDescription: MIDI instrument editing library documentation\n libInstPatch (lib Instrument Patch) is an object oriented library for editing\n MIDI instruments such as SoundFont files.\n .\n This package contains the documentation for libinstpatch1 in\n /usr/share/gtk-doc/html/libinstpatch.\n</pre>\n"}]}]