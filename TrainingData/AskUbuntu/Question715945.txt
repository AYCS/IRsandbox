[{"id":715945,"title":"my /etc tree is all owned by www-data","body":"<p>I suddenly found my /etc tree is all owned by www-data:www-data.\nI changed the top directories to root:root, only to have them revert to www-data.</p>\n\n<p>very strange</p>\n","related_questions":[{"id":666513,"title":"Restore login after modifying /etc/shadow permissions","body":"<p>I locked my screen for a moment and now I am unable to login back into my Ubuntu 14.04 machine, not even in a \"Guest Session\". After a moment of panic, I realized that I am the responsible, as I think I executed the following (I'm 99% sure) a moment ago: </p>\n\n<pre><code>sudo chmod 555 /etc/shadow\n</code></pre>\n\n<p>Is there a way I can restore the original permissions of <code>/etc/shadow</code> (with an Ubuntu live CD maybe?). I'm also 99% sure no other files were modified in my moment of stupidity.</p>\n"},{"id":196062,"title":"SFTP permission denied on files owned by www-data","body":"<p>I have a pretty standard server set up running Apache and PHP. An app I am running creates files and these are owned by the Apache user <code>www-data</code>. Files that I upload via SFTP are owned by my own user <code>charlesr</code>. All files are part of the <code>www-data</code> group. My problem is that I cannot modify or overwrite any of the files via SFTP which are owned by <code>www-data</code>, even though <code>charlesr</code> is part of the <code>www-data</code> group. I can modify the files no problem via a SSH session.</p>\n\n<p>So I'm not sure what to do. <strong>How do I give my SFTP session permissions to modify <code>www-data</code> owned files?</strong></p>\n\n<p>For a bit of background, these are the notes I wrote for myself when setting-up the server:</p>\n\n<pre><code>Now set up permissions on `/var/www` where your files are served from by\ndefault:\n\n$ sudo adduser $USER www-data\n$ sudo chgrp -R www-data /var/www\n$ sudo chmod -R g+rw /var/www\n$ sudo chmod -R g+s /var/www\n\nNow log out and log in again to make the changes take hold.\n\nThe previous set of commands does the following:\n\n1. adds the current user ($USER) to the `www-data` group;\n2. changes `/var/www` to belong to the `www-data` group;\n3. adds read/write permissions to the group that `/var/www` belongs to;\n4. sets the SGID bit on `/var/www`; this final point bears some explaining.\n</code></pre>\n\n<p>And then I go on to explain to myself what setting the SGID bit means (i.e. all files created in <code>/var/www</code> become part of the <code>www-data</code> group automatically).</p>\n\n<hr>\n\n<p><strong>UPDATE</strong></p>\n\n<p>It seems that the problem was caused by the app itself or, more\nspecifically, the application framework (<a href=\"http://kohanaframework.org/\">Kohana</a>) setting certain files\nit writes to 0644 (rw-r--r--); i.e. not group writable. This, coupled\nwith the fact that the files are also owned by <code>www-data</code> meant that I\ncould not edit the files via SFTP when logged-in as <code>charlesr</code>. I'm not\nsure why I could edit the files via SSH. My guess is that I \nmust have used sudo.</p>\n\n<p>Here is the permissions strategy I now use thanks to the <a href=\"http://askubuntu.com/a/196970/64410\">tireless help of\nMarty Fried</a>, who pointed out the flaws in my previous strategy and also\nhelped me marinade in the world of Linux permissions until I finally\ngrokked it. Thanks Marty!</p>\n\n<h3>Overview</h3>\n\n<ul>\n<li>Files and directories in <code>/var/www</code> should be owned by <code>root:webmasters</code></li>\n<li>All devs should be members of the <code>webmasters</code> group</li>\n<li>All directories in <code>/var/www</code> should be set to:\n <code>2775</code> or <code>u=rwx,g=rwxs,o=rx</code> (rwxrwx-r-x)</li>\n<li>All files in <code>/var/www</code> should be set to:\n <code>0664</code> or <code>ug=rw,o=r</code> (rw-rw-r--)</li>\n</ul>\n\n<p>The following should be owned by <code>www-data:webmasters</code> (i.e. these are the directories that Apache needs to be able to write to):</p>\n\n<ul>\n<li>application/cache</li>\n<li>application/logs</li>\n<li>upload</li>\n<li>client_helpers/upload</li>\n</ul>\n\n<h3>HOWTO</h3>\n\n<p>To set up permissions on <code>/var/www</code> where your files are served from by default:</p>\n\n<ol>\n<li><code>sudo addgroup webmasters</code></li>\n<li><code>sudo adduser $USER webmasters</code></li>\n<li><code>sudo chown -R root:webmasters /var/www</code></li>\n<li><code>sudo find /var/www -type f -exec chmod 664 {} \\;</code></li>\n<li><code>sudo find /var/www -type d -exec chmod 775 {} \\;</code></li>\n<li><code>sudo find /var/www -type d -exec chmod g+s {} \\;</code></li>\n<li><code>sudo chown -R www-data:webmasters application/cache/</code>   [etc...]</li>\n</ol>\n\n<p>Now log out and log in again to make the changes take hold.</p>\n\n<p>The previous set of commands does the following:</p>\n\n<ol>\n<li>Create a new group called <code>webmasters</code>; all users who need write access to the app files will be added to this group.</li>\n<li>adds the current user (<code>$USER</code>) to the <code>webmasters</code> group.</li>\n<li>changes the owner of <code>/var/www</code> to <code>root</code> and the group to <code>webmasters</code> group.</li>\n<li>adds <a href=\"http://permissions-calculator.org/decode/0644/\">644 permissions</a> (-rw-rw-r--) to all files in <code>/var/www</code>.</li>\n<li>adds <a href=\"http://permissions-calculator.org/decode/0775/\">775 permissions</a> (drwxrwxr-x) to all directories in <code>/var/www</code>.</li>\n<li>sets the SGID bit on <code>/var/www</code> and all directories therein; this final point bears some explaining. Note also that you can also put a 2 at the front of your chmod octal (e.g. 2644) to do the same thing.</li>\n<li>sets the owner to <code>www-data</code> (Apache's user) and group of the supplied directory to <code>webmaster</code>. This ensures the directory is writable by Apache and anyone in the <code>webmasters</code> group. Do the same for all other directories that need to be writable.</li>\n</ol>\n"},{"id":483205,"title":"/etc/group - group on last line not usable? Is it a bug?","body":"<pre>\n$ cat -net /etc/group  | tail -n 3\n    67  vboxusers:x:127:hannu$\n    68  nvidia-persistenced:x:128:$\n    69  $\n$\n</pre>\n\n<p>a)\nWith the lines as shown I get the profiling (System Settings > Color > Calibrate) <strong>for the MAIN DISPLAY ONLY</strong> (I have four of them! i.e. not full functionality) loaded as I log in. \nThe group on line 68 is vital for xorg-edgers nvidia driver (nvidia-337 and nvidia-settings installed)</p>\n\n<p>b) if I swap lines 67 and 68 I <strong>WILL NOT</strong> get to access USB devices in Virtualbox 4.3 (.12 has a remedied \"Shared cliboard\" compared to 4.3.10 - which is availble in U.S.C. - I have tried both).</p>\n\n<p>From this I conclude that the LAST line in the /etc/groups file isn't read / used as it should. The empty line (#69) doesn't matter as it seems to me.</p>\n\n<p>COMMENTS?</p>\n\n<pre>\n$ groups --version\ngroups (GNU coreutils) 8.21\nCopyright (C) 2013 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later .\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nWritten by David MacKenzie and James Youngman.\n</pre>\n"},{"id":456350,"title":"I can&#39;t make any form of editions in my etc folder","body":"<p>Every time I try to make an edition one that is required i keep getting access denied.</p>\n\n<ul>\n<li><p>I wanted to edit a text file I used notepad, access denied me from saving it.</p></li>\n<li><p>I used limbra, access denied me from saving it.</p></li>\n<li><p>I used Terminal to try copying the file into the Apache folder in etc, access denied it from copying.</p></li>\n<li><p>I used vim to edit the file through Terminal, access denies me again from saving the file.</p></li>\n</ul>\n\n<p>I don't understand. Am I not supposed to have this access?</p>\n\n<p>What do I do now?</p>\n"},{"id":453347,"title":"Brightness Save on Reboot","body":"<p>I have a problem where the brightness does not save after a reboot on 14.04 LTS, but I had the same problem on 12.04 LTS (before I broke the system).  Before you say this is a duplicate of a million posts, I've tried every single option that has been mentioned.  I've found that <code>xbacklght</code> doesn't work no mater what I do with it. On my edited <code>/etc/rc.local</code>, however, I've set it to execute, changed the permissions so it would run without <code>sudo</code> and even changed the permissions of the <code>/sys/class/backlight/acpi_video0/brightness</code> files (and yes I've tried the actual folder as well, not just the sym link).  I got it to work a few times, but only for one boot until the permission changes reset themselves.  Thanks for the help in advance!</p>\n\n<p><strong>EDIT:</strong> I just remeber that I also have a folder called <code>intel_brightness</code> with it's own set of values that could affect how <code>acpi_video0</code> works.  Sorry for forgetting to add this earlier</p>\n"},{"id":428968,"title":"/etc/profile permission denied","body":"<p>I'm running an Ubuntu 12.04 LTS partition and I've recently have had issues logging in.</p>\n\n<p>From the GUI login screen, when I enter my username and password, it takes me right back to the login screen. This is different from when I enter my username and password incorrectly.</p>\n\n<p>So I entered alt+ctrl+F1 to access the terminal and I signed in.\nIt then reads: </p>\n\n<pre><code>-bash: /etc/profile Permission denied\n</code></pre>\n\n<p>From what I've tested, the only commands that I can run from terminal are basic terminal commands like ls and pwd. I tried changing my access to <code>/etc</code>:</p>\n\n<pre><code>sudo chmod 755 /etc\n</code></pre>\n\n<p>I get the errors:</p>\n\n<pre><code>sudo: unable to open /etc/sudoers: Permission denied\n\nsudo: no valid sudoers sources found, quitting\n\nsudo: unable to initialize policy plugin\n</code></pre>\n\n<p>If I run it without sudo I get a permission denied. If someone knows how to get around this issue that would be great </p>\n"},{"id":319330,"title":"Add www-data to alternate group","body":"<p>I am working with two users: me and www-data.  Each user has their own group by default.  I want to be able to easily grant read, write, and/or execute permissions to both users, without giving the permissions to the public. </p>\n\n<p>My understanding of the Linux file permissions system is that if I have the following file:</p>\n\n<pre><code>test.php me:me 770\n</code></pre>\n\n<p>and the group me contains the users me and www-data, then both users would have full permissions for the file test.php. This is not working, however.  I have added the user www-data to the group me and set the permissions to 770, but Apache says permissions are denied.  If I change the file group to www-data so that it looks like</p>\n\n<pre><code>test.php me:www-data 770\n</code></pre>\n\n<p>the file loads fine.  The problem is that I upload the files over ftp under the user me.  It's easy to change the group, but it gets incredibly tedious if I have to SSH into the server every time I upload a new file to change the group.  My understanding is that groups exist just for circumstances like these, but I don't understand why it's not working. </p>\n"},{"id":308939,"title":"How to reset default permissions for /etc?","body":"<p>By mistake I have made permission changes for <code>/etc</code>. Now it's giving me the following error message:</p>\n\n<pre><code>bash: /etc/bash.bashrc: Permission denied  \nI have no name!@chandan-Inspiron-5520:~$ sudo /etc/init.d/apache2 restart  \nsudo: unable to stat /etc/sudoers: Permission denied  \nsudo: no valid sudoers sources found, quitting  \nsudo: unable to initialize policy plugin  \n</code></pre>\n"},{"id":292986,"title":"unable to create `/etc/skel/.bash_logout.dpkg-new&#39;: No such file or directory","body":"<p>I can´t install any updates. I tried <code>apt-get clean</code>, <code>apt-get install -f</code>, <code>dpkg --configure -a</code>. Nothing helps. I even tried to create a file or a directory in <code>/etc/skel</code> - it cannot be done, even with root. <code>/etc/skel</code> is completely empty.\nWhile trying to update, my Update manager shows me this:</p>\n\n<pre><code>Package: /var/cache/apt/archives/bash_4.2-2ubuntu2.1_amd64.deb\nError: unable to create `/etc/skel/.bash_logout.dpkg-new' (while processing `./etc/skel/.bash_logout'): No such file or directory \n</code></pre>\n"},{"id":173322,"title":"Workflow for working on www-data owned files","body":"<p>What is the best workflow for working on PHP Webpages (local) in \"Ubuntu Desktop\".\nMy problem is, when i logIn with my Ubuntu Account, and when i open a php file \"geany\" i cannot save the file any more,\nbecause the file is owned by \"www-data\".\nIs there a way to open \"www-data\" owned files -> edit it -> and save them again as www-data?</p>\n\n<p>What is your workflow?</p>\n"}]}]