[{"id":715609,"title":"Unable to recieve UDP packets","body":"<p>I have a program which sends UDP packets to a specific port (eg: 53023) at localhost. I have written another program using <strong>Qt 4.8</strong> which tries to receive the packets from this port at localhost. However, my receiver program is unable to receive any packet from the port. Using <code>tcpdump</code>, I could see that the packets are available at the given port. What may be preventing my application from receiving the UDP packets?</p>\n\n<p>I checked <code>sudo iptables -L -n</code> which resulted in the following output.</p>\n\n<pre><code>Chain INPUT (policy ACCEPT)\ntarget     prot opt source               destination         \n\nChain FORWARD (policy ACCEPT)\ntarget     prot opt source               destination         \n\nChain OUTPUT (policy ACCEPT)\ntarget     prot opt source               destination   \n</code></pre>\n\n<p>Same programs run successfully on RHEL machines!</p>\n","related_questions":[{"id":652286,"title":"Packet redirection based upon traffic type","body":"<p><strong>Overview</strong> : Is there anything like ufw or iptables that will accept a packet on a port, but then redirect that packet locally depending on the type of packet it is?</p>\n\n<p><strong>More info</strong> : I have a web server that resides on Ubuntu 14.04 and through NAT on the corporate firewall, accepts public traffic on port 443, the firewall passes the traffic through to my Apache web server (configured to listen on 443) in order to process HTTPS traffic. </p>\n\n<p>What I'm after, however, is also having an SFTP service, on the same server, being able to accept SFTP traffic without having to open up another port on the corporate firewall.</p>\n\n<p>I envisage reconfiguring Apache to listen locally on port 44433 (for example) and having the SFTP listening on its' standard port 22.  However, what I don't know is what I should have listening on port 443 to accept the traffic through the corporate firewall and then working out if that traffic should be passed to SFTP (if the packet header dictates it as SFTP) or passed to Apache on port 44433 if the packet header dictates it as HTTPS.</p>\n\n<p>I can only imagine that it would be something like ufw or iptables or some other packet filtering/forwarding/shaping package that I can install under Ubuntu, but I'm not sure what/which one to use. Is this even possible on a single server? </p>\n\n<p>I understand that there are solutions out there which can redirect traffic based upon the IP port, but all my incoming traffic will be to a single port, and I need to go down a layer and inspect packet itself to ascertain where it needs to be directed.</p>\n\n<p>Unless of course, there's a better solution?</p>\n"},{"id":641756,"title":"Webmin Linux Firewall NAT and Packet Filtering","body":"<p>Can someone explain to me the difference between these two? Like in NAT and Packet Filtering there are rules for both incoming and outgoing packets. I do not really understand their differences. What does pre and post routing rules do as well? There is also a rule already in NAT that states masquerade if output interface is eth0. Not really sure what does that do?</p>\n"},{"id":640158,"title":"Route packets between 3 subnets (nics) on same server","body":"<p>I have 3 subnets on my one server which acts as the router/gateway (<code>10.1.10.0</code>, <code>172.16.1.0</code>, <code>172.16.2.0</code>).  All three subnets are assigned to their own NICs on the server.</p>\n\n<ul>\n<li><code>eth0 (10.x.x.x)</code> is my external connection to the internet via ISP.</li>\n<li><code>eth1 (172.16.1.x)</code> is my internal public network for customer use.</li>\n<li><code>eth2 (172.16.2.x)</code> is my internal private network for employee use.</li>\n</ul>\n\n<p>All three work fine as of now, however <code>eth1</code> and <code>eth2</code> do not communicate with each other in anyway. I have a number of wireless devices that jump back and forth between <code>eth1</code> and <code>eth2</code> depending on need.</p>\n\n<p>I tried to setup a shared network on my DHCP server and it does give the reserved IP to the device no matter which subnet the device connects to, however if you are not on the proper subnet for that IP (i.e. <code>172.16.2.12</code> has to connect to the wifi for that subnet) then you can not get online.</p>\n\n<p>I am sure it has something to do with my <code>iptables</code> config, probably the <code>MASQUERADE</code> command.</p>\n\n<p>Here is my <code>iptables</code> configuration below. Any help would be appreciated... </p>\n\n<pre><code>*filter\n# FORWARD\n-A FORWARD -j ACCEPT\n-A INPUT -i eth1 -p tcp --dport 8888 -m state --state NEW,ESTABLISHED -j ACCEPT\n-A OUTPUT -o eth1 -p tcp --sport 8888 -m state --state ESTABLISHED -j ACCEPT\n-A INPUT -i eth2 -p tcp --dport 8888 -m state --state NEW,ESTABLISHED -j ACCEPT\n-A OUTPUT -o eth2 -p tcp --sport 8888 -m state --state ESTABLISHED -j ACCEPT\n# Allows all loopback (lo0) traffic and drop all traffic to 127/8 that doesn't use lo0\n-A INPUT -i lo -j ACCEPT\n-A INPUT ! -i lo -d 127.0.0.0/8 -j REJECT\n# Accepts all established inbound connections\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n# INCOMING WWW\n-A INPUT -i eth0 -p tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT\n-A OUTPUT -o eth0 -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT\n#INCOMING SSH\n-A INPUT -i eth0 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT\n-A OUTPUT -o eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT\n# HTTP\n-A INPUT -i eth1 -p tcp --dport 80 -m state --state NEW,ESTABLISHED -s 172.16.1.0/25 -j ACCEPT\n# HTTPS\n-A INPUT -i eth1 -p tcp --dport 443 -m state --state NEW,ESTABLISHED -s 172.16.1.0/25 -j ACCEPT\n# Ping\n-A INPUT -i eth0 -p icmp --icmp-type echo-request -j ACCEPT\n-A INPUT -i eth1 -p icmp --icmp-type echo-request -j ACCEPT\n#DNS\n-A INPUT -i eth1 -p tcp --dport 53 -s 172.16.1.0/24 -j ACCEPT\n-A INPUT -i eth1 -p udp --dport 53 -s 172.16.1.0/24 -j ACCEPT\n-A INPUT -i eth2 -p udp --dport 53 -s 172.16.2.0/24 -j ACCEPT\n-A OUTPUT -p udp -o eth0 --dport 53 -j ACCEPT\n-A OUTPUT -p udp -o eth1 --dport 53 -j ACCEPT\n-A OUTPUT -p udp -o eth2 --dport 53 -j ACCEPT\n# 24\n-A INPUT -s 172.16.1.160/27 -j ACCEPT\n# STAFF\n-A INPUT -s 172.16.1.128/26 -j ACCEPT\n# ADM\n-A INPUT -s 172.16.1.192/26 -j ACCEPT\n# DAGOBAH\n-A INPUT -s 172.16.2.0/24 -j ACCEPT\n# DROP\n-A INPUT -j DROP\nCOMMIT\n*nat\n-A PREROUTING -p tcp -m tcp -i eth1 --dport 80 -j DNAT --to-destination 172.16.1.250:8888\n-A PREROUTING -p tcp -m tcp -i eth1 --dport 80 -j REDIRECT --to-ports 8888\n-A PREROUTING -p tcp -m tcp -i eth2 --dport 80 -j DNAT --to-destination 172.16.2.250:8888\n-A PREROUTING -p tcp -m tcp -i eth2 --dport 80 -j REDIRECT --to-ports 8888\n-A POSTROUTING -s 172.16.1.0/24 -o eth0 -j MASQUERADE\n-A POSTROUTING -s 172.16.2.0/24 -o eth0 -j MASQUERADE\nCOMMIT\n</code></pre>\n"},{"id":636412,"title":"Stateful Packet Inspection on Ubuntu?","body":"<p>By default Ubuntu doesn't have open ports (exceptions: Avahi and dhcp).</p>\n\n<p>Assuming that my system is connected to the internet by direct way (no hardware firewall used):\nIf I am sending a UDP packet to for example 124.32.12.3:53. To be able to get an answer a program has to say 'If within 30 seconds (timeout) a UDP packet from 124.32.12.3 (with source port 53) is coming, it's welcome. All other packets I will drop.' </p>\n\n<p>Can somebody tell me which program/module handles this on Ubuntu by default?</p>\n\n<p>Thank you very much!</p>\n"},{"id":629463,"title":"Ubuntu Server 14.04 Drop UDP packet","body":"<p>I use Ubuntu server as part of my system and now I have seen something interesting. I have a router that sends me ethernet 802.11 packets.</p>\n\n<p>I generate this packet in the router and then send it under UDP to my Ubuntu Server. This operation works fine on any other Ubuntu Desktop but not on my server.</p>\n\n<p>The UFW is inactive and my iptable look like this:</p>\n\n<pre><code>Chain INPUT (policy ACCEPT)\ntarget     prot opt source               destination         \nChain FORWARD (policy ACCEPT)\ntarget     prot opt source               destination         \nChain OUTPUT (policy ACCEPT)\ntarget     prot opt source               destination \n</code></pre>\n\n<p>And here is the UDP memory usage:</p>\n\n<pre><code>cat /proc/sys/net/ipv4/udp_mem\n\n763227  1017637 1526454\n</code></pre>\n\n<p>In wireshark I don't see the packet and I really don't know what to do. \nAnyone have an idea?</p>\n"},{"id":621158,"title":"14.04 How to unblock UDP ports and UDP packets?","body":"<p>I'm use and Ubuntu Server, and I use it an Asterisk 11. </p>\n\n<p>But I have to unblocking the UDP Port 5089 and port for UDP packets in the\nrange of 16384-16482. Also, I need to disable \"SPI\" in my firewall. </p>\n\n<p>How can I make this? </p>\n\n<p>So I already have an script that runs in my rc.local </p>\n\n<p>please see it <a href=\"http://askubuntu.com/questions/621120/14-04-how-to-make-this-script-run-on-startup\">here</a> </p>\n\n<p>Is necessary to put something that .sh script? </p>\n"},{"id":59803,"title":"Disabling UDP Packets","body":"<p>I would like to completely disable UDP packets from exiting or entering my computer(Ubuntu 11.04), how would I go about doing this? What are the downsides to disabling UDP packets? The reason for doing this is to prevent my real IP from being broadcasted.</p>\n"},{"id":554050,"title":"apache2 on ubuntu 14 - localhost works but ip doesn&#39;t","body":"<p>I've just installed apache2 on my box, along with php5. </p>\n\n<p>I can navigate to \"localhost\" and it works.  But I can't access this webserver from another machine... or even locally using the IP address. \nOther posts such as <a href=\"http://askubuntu.com/questions/326617/apache-and-other-services-work-on-localhost-but-not-ip-address\">Apache (and other services) work on localhost, but not IP address</a> suggest firewall settings and also checking to make sure I'm listening not just on localhost but *80. </p>\n\n<p>This is what I have in ports.conf: </p>\n\n<pre><code>me@mydev:/etc/apache2$ cat ports.conf \n# If you just change the port or add more ports here, you will likely also\n# have to change the VirtualHost statement in\n# /etc/apache2/sites-enabled/000-default.conf\n\nListen 80\n\n&lt;IfModule ssl_module&gt;   Listen 443 &lt;/IfModule&gt;\n\n&lt;IfModule mod_gnutls.c&gt;     Listen 443 &lt;/IfModule&gt;\n\n# vim: syntax=apache ts=4 sw=4 sts=4 sr noet \n</code></pre>\n\n<p>The default firewall doesn't seem to be enabled: </p>\n\n<pre><code>me@mydev:/etc/apache2$ sudo ufw status\n[sudo] password for me: \nStatus: inactive\nme@mydev:/etc/apache2$ \n</code></pre>\n\n<p>Just not sure what else I should check. \nThanks. </p>\n\n<p><strong>EDIT 1</strong></p>\n\n<p>Results from IP tables query: </p>\n\n<blockquote>\n  <p>me@mydev:/etc/apache2$ sudo iptables -L [sudo] password for me: \n  Chain INPUT (policy ACCEPT) target     prot opt source<br>\n  destination         </p>\n  \n  <p>Chain FORWARD (policy ACCEPT) target     prot opt source<br>\n  destination         </p>\n  \n  <p>Chain OUTPUT (policy ACCEPT) target     prot opt source<br>\n  destination          me@mydev:/etc/apache2$</p>\n</blockquote>\n\n<p>And I am able to successfully ping the box from different machines. </p>\n\n<p><strong>EDIT 2</strong></p>\n\n<p>Here are the results from the nmap command: </p>\n\n<pre><code>me@mydev:/var/www/html/test$ nmap localhost\n\nStarting Nmap 6.40 ( http://nmap.org ) at 2014-12-01 04:04 EST\nNmap scan report for localhost (127.0.0.1)\nHost is up (0.00020s latency).\nNot shown: 997 closed ports\nPORT    STATE SERVICE\n22/tcp  open  ssh\n80/tcp  open  http\n631/tcp open  ipp\n\nNmap done: 1 IP address (1 host up) scanned in 0.04 seconds\nme@mydev:/var/www/html/test$ \n</code></pre>\n\n<p>And for the IP: </p>\n\n<pre><code>me@mydev:/var/www/html/test$ nmap 10.238.59.63\n\nStarting Nmap 6.40 ( http://nmap.org ) at 2014-12-01 04:08 EST\nNmap scan report for mydev.testdomain.bg.org (10.238.59.63)\nHost is up (0.00024s latency).\nNot shown: 998 closed ports\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n\nNmap done: 1 IP address (1 host up) scanned in 0.04 seconds\nme@mydev:/var/www/html/test$ \n</code></pre>\n"},{"id":519170,"title":"How do I find which OS layer (iptables, rp_filter, etc) is dropping a packet?","body":"<p>Let's say that I'm running a ping towards a machine and I see from <code>tcpdump</code> that the icmp echo reply is being received at the ethernet port but the <code>ping</code> program is not getting it. </p>\n\n<p>So I know that Ubuntu is dropping the packet but is there any good way to find which OS layers is doing it, to my knowledge it can be: </p>\n\n<ul>\n<li>iptables </li>\n<li>rp_filter</li>\n<li>vlan not matching, etc</li>\n</ul>\n\n<p>So it's there a way to \"inject\" or \"pretend\" or \"emulate\" a packet that tells me  who drops it?\nI mean something akin to <code>ip route get xxx from xxx iff xxx</code> in the sense that that one tells me that the ip routing table would do for an outgoing packet and I want something that tells me what the kernel will do with a incoming packet. </p>\n\n<p>Is there something like that? if not, what is a good procedure to find out who drops the packet? </p>\n"},{"id":301400,"title":"Change UDP port with iptables for VPN clients","body":"<p><strong>What I want to do is say that for all UDP connections on interface ppp0 that have a destination port of 53, change that destination port to 1053.</strong></p>\n\n<p>I am attempting to change the destination port of UDP packets for VPN clients connected via PPTP on Ubuntu.</p>\n\n<p>This question: <a href=\"http://stackoverflow.com/questions/242772/using-iptables-to-change-a-destination-port\">http://stackoverflow.com/questions/242772/using-iptables-to-change-a-destination-port</a>\nsuggests that this can be done using NAT at the --to-destination option, for example:</p>\n\n<pre><code>iptables -t nat -A OUTPUT -p udp --dport 53 -j DNAT --to-destination x.x.x.x:1053\n</code></pre>\n\n<p>This does work but it changes the port for ALL packets going out on port 53 but I only want to chane the port for some of my VPN clients who are connected on interface ppp0-255 and IP range 192.168.0.10-255.</p>\n\n<p>I have tried adding the source into the statement, for example:</p>\n\n<pre><code>iptables -t nat -A OUTPUT -s 192.168.0.10 -p udp --dport 53 -j DNAT --to-destination x.x.x.x:1053\n</code></pre>\n\n<p>This however does not appear to work and the VPN connections still go through to port 53.</p>\n\n<p>Any ideas?</p>\n"}]}]